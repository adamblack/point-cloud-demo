(self.webpackChunkpoint_cloud_based_visualizer=self.webpackChunkpoint_cloud_based_visualizer||[]).push([[986],{684:(e,t,n)=>{var r=n(182);n(238),function(){"use strict";var e=r.getCore(),t=e.PARSER,n=e.groups.N,i=e.groups.P,s=e.groups.S,o=e.groups.EX,a=e.groups.FN,u=e.groups.PL,l=e.groups.CP,c=e.groups.CB,p=e.Utils.keys,f=e.Utils.even,h=e.Utils.variables,m=e.Utils.format,g=e.Utils.round,v=e.Frac,d=e.Utils.isInt,w=e.Symbol,y=e.Settings.CONST_HASH,b=e.Utils.importFunctions();function S(n,r,i){if(e.Utils.isSymbol(n))this.parse(n),this.variable=this.variable||r;else if(isNaN(n))"string"==typeof n&&this.parse(t.parse(n));else{if(i=i||0,void 0===r)throw new e.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[i]=n,this.fill(n)}}function M(){this.factors={},this.length=0}function N(t,n,r){this.terms=n||[],this.coeff=t,this.map=r,this.sum=new e.Frac(0),this.image=void 0}e.Utils.evaluate,S.fromArray=function(t,n){if(void 0===n)throw new e.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var r=new S;return r.coeffs=t,r.variable=n,r},S.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,o[i]=e,a-=e*Math.pow(r,i);for(var u=i-1;u>0;u--){var l=Math.pow(r,u),c=a/l,p=Math.sign(c)*Math.floor(Math.abs(c));a-=p*l,o[u]=p}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new v(o[u]);return S.fromArray(o,s)},S.prototype={parse:function(r,i){if(this.variable=h(r)[0],!r.isPoly())throw e.exceptions.NerdamerTypeError("Polynomial Expected! Received "+e.Utils.text(r));if(i=i||[],r.power.absEquals(1)||(r=t.expand(r)),r.group===e.groups.N)i[0]=r.multiplier;else if(r.group===e.groups.S)i[r.power.toDecimal()]=r.multiplier;else for(var s in r.symbols){var o=r.symbols[s],a=o.power;if(e.Utils.isSymbol(a))throw new e.exceptions.NerdamerTypeError("power cannot be a Symbol");a=o.group===n?0:a.toDecimal(),o.symbols?this.parse(o,i):i[a]=o.multiplier}this.coeffs=i,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new v(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(this.coeffs[s]>0){i=this.coeffs[s];break}if(i){for(;s>n;s--)this.coeffs[s]=this.coeffs[s].subtract(new v(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new v(e));r=this.coeffs[n]}}var o=r.mod(e),a=r.subtract(o).divide(e);if(!a.equals(0)){var u=n+1,l=this.coeffs[u]||new v(0);l=l.add(a),this.coeffs[u]=new v(l),this.coeffs[n]=new v(o)}}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(t){for(var n=this.variable,r=e.Utils.arrayClone(this.coeffs),i=e.Utils.arrayClone(t.coeffs),s=r.length,o=i.length-1,a=[],u=0;u<s;u++){var l=s-(u+1),c=l-o,p=r[l].divide(i[o]);if(c<0)break;a[c]=p;for(var f=0;f<=o;f++)r[f+c]=r[f+c].subtract(i[f].multiply(p))}var h=S.fromArray(r,n||"x").trim();return[S.fromArray(a,n||"x"),h]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new v(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new v(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new v(Math.pow(e,r)))))}return t},clone:function(){var e=new S;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(t){if(this.coeffs.length-1<t.coeffs.length-1)return t.gcd(this);for(var n=this;!t.isZero();){var r=t.clone();t=(n=n.clone()).divide(r)[1],n=r}var i=e.Math2.QGCD.apply(null,n.coeffs);if(!i.equals(1))for(var s=n.coeffs.length,o=0;o<s;o++)n.coeffs[o]=n.coeffs[o].divide(i);return n},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new v(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new v(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(t){for(var n=[],r=0;r<this.coeffs.length;r++){var i=this.coeffs[r];i.equals(0)||-1!==n.indexOf(i)||n.push(i)}var s=[e.Math2.QGCD.apply(void 0,n),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();if(t){var o=[];o[s[1]-1]=s[0],s=S.fromArray(o,this.variable).fill()}return s},quad:function(e){var t=[];if(this.coeffs.length>3)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error("Polynomial array has no terms");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=S.fromArray([new v(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&t>1){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,i=o,r=r.divide(o)[0]}return[s,i,t]},toSymbol:function(){var n=this.coeffs.length,r=this.variable;if(0===n)return new e.Symbol(0);for(var i=n-1,s="",o=0;o<n;o++){var a=o===i?"":"+",u=this.coeffs[o];u.equals(0)||(s+=u+"*"+r+"^"+o+a)}return t.parse(s)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},w.prototype.coeffs=function(e,n){n&&!this.isPoly(!0)&&t.error("Polynomial expected when requesting coefficients with order"),e=e||[];var r=this.clone().distributeMultiplier();if(r.isComposite())for(var i in r.symbols){var s=r.symbols[i];s.isComposite()?s.clone().distributeMultiplier().coeffs(e,n):n?e[s.isConstant()?0:s.power.toDecimal()]=s.multiplier:e.push(s.multiplier)}else if(n)e[r.isConstant(!0)?0:r.power.toDecimal()]=r.multiplier;else if(r.group===c&&r.isImaginary()){var o=new w(r.multiplier);r.each((function(e){(e.isConstant(!0)||e.imaginary)&&(o=t.multiply(o,e))})),e.push(o)}else e.push(r.multiplier);if(n)for(var a=0;a<e.length;a++)void 0===e[a]&&(e[a]=new w(0));return e},w.prototype.tBase=function(e){if(void 0===e)throw new Error("Symbol.tBase requires a map object!");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new N(s.multiplier,[],e);if(o===c)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},w.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return("1"===t?"":t+"*")+e+("1"===n?"":"^"+n)},w.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t],r=e.symbols[t];if(!r)return!1;if(n.value!==r.value)return!1}return!0},w.prototype.groupTerms=function(n){var r,i,s;n=String(n);var o=[];return this.each((function(a){if(a.group===u){s=a.groupTerms(n);for(var l=0;l<s.length;l++){var c=s[l];c&&(o[l]=c)}}else r=e.Utils.decompose_fn(a,n,!0),i=r.x.value===n?Number(r.x.power):0,o[i]=t.add(o[i]||new w(0),r.a)})),o},w.prototype.collectFactors=function(){var e=[];return this.group===c?this.each((function(t){e.push(t.clone())})):e.push(this.clone()),e},M.prototype.getNumberSymbolics=function(){var e=0;return this.each((function(t){t.isConstant(!0)||e++})),e},M.prototype.add=function(n){if(n.equals(0))return this;if(n.equals(-1)&&this.length>0){var r=e.Utils.firstObject(this.factors,null,!0);return this.add(t.symfunction(e.Settings.PARENTHESIS,[r.obj]).negate()),delete this.factors[r.key],this.length--,this}if(n.group===c){var i=this;n.multiplier.equals(1)||i.add(new w(n.multiplier)),n.each((function(e){i.add(e)}))}else{this.preAdd&&(n=this.preAdd(n)),this.pFactor&&(n=t.pow(n,new w(this.pFactor)));var s=n.isConstant();if(s&&n.equals(1))return this;var o=s?n.value:n.text();o in this.factors?(this.factors[o]=t.multiply(this.factors[o],n),this.factors[o].equals(1)&&(delete this.factors[o],this.length--)):(this.factors[o]=n,this.length++)}return this},M.prototype.toSymbol=function(){for(var n=new w(1),r=Object.values(this.factors).sort((function(e,t){return e.group>t.group})),i=0,s=r.length;i<s;i++){var o=r[i],a=o.power.equals(1)&&""!==o.fname?t.symfunction(e.PARENTHESIS,[o]):o;n=t.multiply(n,a)}return""===n.fname&&(n=w.unwrapPARENS(n)),n},M.prototype.merge=function(e){for(var n in e)n in this.factors?this.factors[n]=t.multiply(this.factors[n],e[n]):this.factors[n]=e[n];return this},M.prototype.each=function(t){for(var n in this.factors){var r=this.factors[n];r.fname===e.PARENTHESIS&&r.isLinear()&&(r=r.args[0]),t.call(this,r,n)}return this},M.prototype.count=function(){return p(this.factors).length},M.prototype.clean=function(){try{var t=e.Settings.CONST_HASH;this.factors[t].lessThan(0)&&(this.factors[t].equals(-1)?delete this.factors[t]:this.factors[t].negate(),this.each((function(e){e.negate()})))}catch(e){}},M.prototype.toString=function(){return this.toSymbol().toString()},N.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},N.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap(),n.equals(0)||e.push(this.rev_map[t])}return e.join(" ")},N.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},N.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var n=new w(this.coeff),r=0;r<this.terms.length;r++){var i=e[r],s=this.terms[r];if(!s.equals(0)&&i!==y){var o=new w(i);o.power=s,n=t.multiply(n,o)}}return n},N.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e={};for(var t in this.map)e[this.map[t]]=t;return this.rev_map=e,e},N.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},N.prototype.getImg=function(){return this.image||this.generateImage(),this.image},N.prototype.fill=function(){for(var t=this.map.length,n=0;n<t;n++)void 0===this.terms[n]?this.terms[n]=new e.Frac(0):this.sum=this.sum.add(this.terms[n]);return this},N.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new N(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},N.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new N(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},N.prototype.isZero=function(){return this.coeff.equals(0)},N.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},e.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},e.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},e.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},e.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some((function(e){return t.indexOf(e)>-1}))},e.Utils.subFunctions=function(t,n){n=n||{};var r=[];return t.each((function(t){if(t.group===a||t.previousGroup===a){var i=e.Utils.text(t,"hash"),s=n[i];if(s)r.push(t.altVar(s));else{var o=t.fname+p(n).length;n[i]=o,r.push(t.altVar(o))}}else t.group===c||t.group===u||t.group===l?r.push(e.Utils.subFunctions(t,n)):r.push(t.text())})),t.group===l||t.group===u?t.altVar(e.Utils.inBrackets(r.join("+"))):t.group===c?t.altVar(e.Utils.inBrackets(r.join("*"))):t.text()},e.Utils.getFunctionsSubs=function(e){var n={};for(var r in e)n[e[r]]=t.parse(r);return n};var E=e.Algebra={version:"1.4.6",proots:function(n,r){r=r||7;var i=[],o=function(e,t,n){for(var r=I(e,0,n).concat(i),s=0;s<0;s++)r.unshift(0);return r};if(n instanceof w&&n.isPoly()){if(n.distributeMultiplier(),n.group===u){var a=e.Utils.arrayMin(p(n.symbols)),l=n.symbols[a].clone().toUnitMultiplier();n=t.expand(t.divide(n,l)),i.push(0)}if(n.group===e.groups.S)return[0];if(n.group===e.groups.PL){var c=p(n.symbols),f=e.Utils.arrayMin(c);n=e.PARSER.divide(n,e.PARSER.parse(n.value+"^"+f))}for(var h=p(n.symbols).sort().pop(),m=n.group===e.groups.PL?n.symbols:n.symbols[h],v=m.group,d=(c=v===s?[m.power.toDecimal()]:p(m.symbols),[]),b=e.Utils.arrayMax(c),S=1;S<=b;S++){var M=0;-1!==c.indexOf(S+"")&&(M=v===s?m.multiplier:m.symbols[S].multiplier),d.unshift(M)}return d.push(n.symbols[y].multiplier),m.group===s&&(d[0]=m.multiplier),o(d,0,b)}if(e.Utils.isArray(n)){var N=n,E=(d=[],c=[],0);for(S=0;S<N.length;S++){for(var x=N[S][0],q=N[S][1],A=q-E-1,C=0;C<A;C++)d.unshift(0);d.unshift(x),0!==q&&c.push(q),E=q}return o(d,0,b=Math.max.apply(void 0,c))}throw new e.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!");function I(t,n,i){var s=t.slice(0);if(t.unshift(i),i>100)throw new e.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to 100. ");var o=[],a={};for(a.Degree=i,S=0;S<i;S++)o.push(0);var u=o.slice(0);function l(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-t*s.b+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function c(e,t,n,r,i,s,o,a,u){var c=new Object,p=3;return c.b=c.a=0,l(t,o,a,s,u,c),i.c=c.a,i.d=c.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=a*r,Math.abs(i.d)>=Math.abs(i.c)?(p=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(p=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-n*(i.d/i.c)+r,i.a7=i.g*i.d+i.h*i.f+n)),p}function p(e,t,n,r,i,s,o,a,u){var l;if(3!=n)if(l=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(l))for(s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-u[0]*s.a7+u[1],c=2;c<t;c++)o[c]=-u[c-1]*s.a7+a[c-2]*s.a3+u[c];else for(o[0]=0,o[1]=-u[0]*s.a7,c=2;c<t;c++)o[c]=-u[c-1]*s.a7+a[c-2]*s.a3;else{o[1]=o[0]=0;for(var c=2;c<t;c++)o[c]=a[c-2]}}function f(e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g,v){var d,w,y,b,S,M,N,E;t.b=t.a=0,3!=e&&(2!=e?(d=n+f*o+p*l,w=a+(f+h*l)*u):(d=(n+c)*l+p,w=(l+f)*a+h*u),0!=(E=-(N=-((S=(y=-m[g-1]/v[g])*s)+(M=y*y*i))+h*(b=-(m[g-2]+y*v[g-1])/v[g])*r)+w+y*d)&&(t.a=-(f*(M+S)+h*(y*r+b*s))/E+f,t.b=h*(1+N/E)))}function h(e,t,n,r){var i,s,o;r.sr=r.si=r.lr=r.li=0,0!=e?0!=n?(i=t/2,Math.abs(i)<Math.abs(n)?(o=-(o=n>=0?e:-e)+i*(i/Math.abs(n)),s=Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,s=Math.sqrt(Math.abs(o))*Math.abs(i)),o>=0?(s=i>=0?-s:s,r.lr=(-i+s)/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function m(e,t,n,r,i,s,o,a,u,m,g,v){var d,w,y,b,S,M,N,E,x,q,A,C=new Object,I=0,U=0;n.NZ=0,M=r,E=i;do{if(C.li=C.lr=C.si=C.sr=0,h(1,M,E,C),n.szr=C.sr,n.szi=C.si,n.lzr=C.lr,n.lzi=C.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(l(o,M,E,u,s,a),w=Math.abs(-n.szr*a.b+a.a)+Math.abs(n.szi*a.b),q=Math.sqrt(Math.abs(E)),d=2*Math.abs(s[0]),S=-n.szr*a.b,A=1;A<t;A++)d=d*q+Math.abs(s[A]);if(w<=20*(d=(9*(d=d*q+Math.abs(S+a.a))+2*Math.abs(S)-7*(Math.abs(a.a+S)+q*Math.abs(a.b)))*e)){n.NZ=2;break}if(++I>20)break;if(I>=2&&b<=.01&&w>=y&&!U){for(l(o,M-=M*(b=b<e?Math.sqrt(e):Math.sqrt(b)),E+=E*b,u,s,a),A=0;A<5;A++)p(e,t,c(e,t,a.a,a.b,g,v,M,E,m),a.a,a.b,g,v,m,s);U=1,I=0}y=w,p(e,t,c(e,t,a.a,a.b,g,v,M,E,m),a.a,a.b,g,v,m,s),f(c(e,t,a.a,a.b,g,v,M,E,m),a,a.a,g.a1,g.a3,g.a7,a.b,g.c,g.d,g.f,g.g,g.h,M,E,v,t,u),N=a.a,0!=(x=a.b)&&(b=Math.abs((-E+x)/x),M=N,E=x)}while(0!=x)}function v(e,t,n,r,i,s,o,a,u){var l,c,p,f,h,m,g,v,d,w,y,b=r-1;for(t.NZ=y=d=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(p=Math.abs(m),f=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*f+Math.abs(o[w]);if(p<=20*e*(2*l-p)){t.NZ=1,t.szr=g,t.szi=0;break}if(++y>10)break;if(y>=2&&Math.abs(v)<=.001*Math.abs(-v+g)&&p>h){d=1,t.a=g;break}for(h=p,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(v=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=v*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=v=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return d}function d(e,t,n,r,i,s,o,a,u,h,g,d){var w,y,b,S,M,N,E,x,q,A,C,I,U,L,_,O,R,T,P,k,D,F,B,G,V,j=new Object,H=new Object,X=new Array(t),Z=new Array(t),z=1;for(d.NZ=0,S=b=.25,M=r,x=i,j.b=j.a=0,l(u,g,i,a,h,j),w=j.a,y=j.b,H.h=H.g=H.f=H.e=H.d=H.c=H.a7=H.a3=H.a1=0,B=c(e,o,w,y,H,s,g,i,X),k=0;k<n;k++){if(T=1,p(e,o,B,w,y,H,s,X,h),f(B=c(e,o,w,y,H,s,g,i,X),j,w,H.a1,H.a3,H.a7,y,H.c,H.d,H.f,H.g,H.h,g,i,s,o,a),_=j.a,R=O=j.b,A=0!=s[o-1]?-a[o]/s[o-1]:0,C=U=1,0!=k&&3!=B&&(G=(L=(U=0!=R?Math.abs((R-x)/R):U)<E?U*E:1)<S?1:0,(D=(I=(C=0!=A?Math.abs((A-M)/A):C)<N?C*N:1)<b?1:0)||G)){for(P=0;P<o;P++)Z[P]=s[P];for(q=A,F=V=0;;){if(T&&0==(T=0)&&D&&(!G||I<L));else{if(m(e,o,d,_,O,h,u,j,a,X,H,s),w=j.a,y=j.b,d.NZ>0)return;if(z=V=1,S*=.25,F||!D)z=0;else for(P=0;P<o;P++)s[P]=Z[P]}if(0!=z){if(j.a=q,z=v(e,d,j,o,a,u,h,s,X),q=j.a,d.NZ>0)return;if(F=1,b*=.25,0!=z){_=-(q+q),O=q*q;continue}}for(P=0;P<o;P++)s[P]=Z[P];if(!G||V)break}l(u,g,i,a,h,j),B=c(e,o,w=j.a,y=j.b,H,s,g,i,X)}x=R,M=A,E=U,N=C}}!function(e,t,n,r){var i,s,o,a,u,l,c,p,f,m,g,v,w,y,b,S,M,N,E,x,q,A,C,I=e.Degree,U=.017453292519943295,L=Math.LN2,_=e.Degree+1,O=new Array(_),R=new Array(_),T=new Array(_),P=new Array(_),k=new Object,D=new Object;v=1;do{s=v,w=1+(v/=2)}while(w>1);var F=Number.MIN_VALUE/s,B=Math.cos(94*U),G=Math.sin(94*U),V=Math.sqrt(.5),j=-V;for(D.NZ=N=0,D.szr=D.szi=D.lzr=D.lzi=0;0==t[I];)n[N]=r[N]=0,I--,N++;for(A=I+1;I>=1;){if(I<=2){I<2?(n[e.Degree-1]=-t[1]/t[0],r[e.Degree-1]=0):(k.li=k.lr=k.si=k.sr=0,h(t[0],t[1],t[2],k),n[e.Degree-2]=k.sr,r[e.Degree-2]=k.si,n[e.Degree-1]=k.lr,r[e.Degree-1]=k.li);break}for(c=0,p=Number.MAX_VALUE,H=0;H<A;H++)(m=Math.abs(t[H]))>c&&(c=m),0!=m&&m<p&&(p=m);if(((f=F/p)<=1&&c>=10||f>1&&Number.MAX_VALUE/f>=c)&&(f=0==f?Number.MIN_VALUE:f,x=Math.floor(Math.log(f)/L+.5),1!=(u=Math.pow(2,x))))for(H=0;H<A;H++)t[H]*=u;for(var H=0;H<A;H++)R[H]=Math.abs(t[H]);R[I]=-R[I],q=I-1,m=Math.exp((Math.log(-R[I])-Math.log(R[0]))/I),0!=R[q]&&(m=(g=-R[I]/R[q])<m?g:m),g=m;do{for(g=.1*(m=g),l=R[0],H=1;H<A;H++)l=l*g+R[H]}while(l>0);a=m;do{for(o=l=R[0],H=1;H<I;H++)o=m*o+(l=m*l+R[H]);m-=a=(l=m*l+R[I])/o}while(Math.abs(a/m)>.005);for(i=m,H=1;H<I;H++)O[H]=(I-H)*t[H]/I;for(O[0]=t[0],v=t[I],w=t[q],C=0==O[q]?1:0,E=0;E<5;E++)if(y=O[q],C){for(H=0;H<q;H++)O[N=q-H]=O[N-1];O[0]=0,C=0==O[q]?1:0}else{for(S=-v/y,H=0;H<q;H++)O[N=q-H]=S*O[N-1]+t[N];O[0]=t[0],C=Math.abs(O[q])<=Math.abs(w)*s*10?1:0}for(H=0;H<I;H++)P[H]=O[H];for(E=1;E<=20;E++){if(M=-G*j+B*V,j=G*V+B*j,d(s,_,20*E,b=i*(V=M),i,O,I,t,A,T,-2*b,D),0!=D.NZ){for(n[N=e.Degree-I]=D.szr,r[N]=D.szi,I=(A-=D.NZ)-1,H=0;H<A;H++)t[H]=T[H];1!=D.NZ&&(n[N+1]=D.lzr,r[N+1]=D.lzi);break}for(H=0;H<I;H++)O[H]=P[H]}if(E>20){e.Degree-=I;break}}}(a,s,u,o);var w=o.length;for(S=0;S<w;S++){var y=g(o[S],r+8),b=g(u[S],r+8),M=y<0?"-":"";0===(b=r-String(b).length>2?b:u[S])&&(b=""),0===y&&(y=""),y=1===Math.abs(y)?M+"i":y?y+"*i":"";var N=b&&y?b+"+"+y:b+y;u[S]=N.replace(/\+\-/g,"-")}return u}},roots:function(n){if(n.isConstant(!0,!0))return e.Utils.nroots(n);var r=E.proots(n).map((function(e){return t.parse(e)}));return e.Vector.fromArray(r)},froot:function(t,n,r){return function(n){for(var i=r||e.Utils.build(e.Calculus.diff(t.clone())),s=t instanceof Function?t:e.Utils.build(t),o=!1,a=0;!o;){var u=n-s(n)/i(n),l=Math.abs(u)-Math.abs(n);n=u,Math.abs(l)<1e-12?o=!0:a>1e4&&(n=null,o=!0),a++}return n}(Number(n))},quad:function(e,n,r){var i=function(e,n,r,i){return t.parse("-("+n+"+"+i+"*sqrt(("+n+")^2-4*("+e+")*("+r+")))/(2*"+e+")")};return[i(e,n,r,1),i(e,n,r,-1)]},sumProd:function(e,t){return E.quad(-t,e,-1).map((function(e){return e.invert()}))},coeffs:function(e,n,r){n=String(n),e=t.expand(e),r=r||[new w(0)],e.group===o&&e.contains(n,!0)&&t.error("Unable to get coefficients using expression "+e.toString());var i=h(e);if(1!==i.length||i[0]!==n||e.isImaginary())if(n||t.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),-1===i.indexOf(n))r[0]=t.add(e,r[0]);else if(r=r||[new w(0)],e.group===c){var s=e.symbols[n];s||t.error("Expression is not a polynomial!");var a=Number(s.power);((g=t.divide(e.clone(),s.clone())).contains(n,!0)||a<0||!d(a))&&t.error("Expression is not a polynomial!"),(m=r[a])&&(g=t.add(m,g)),r[a]=g}else e.group===l&&e.each((function(e){E.coeffs(e.clone(),n,r)}),!0);else for(var u=new S(e).coeffs.map((function(e){return new w(e)})),p=0,f=u.length;p<f;p++){var m,g=u[p];(m=r[p])&&(g=t.add(m,g)),r[p]=g}for(p=0,f=r.length;p<f;p++)void 0===r[p]&&(r[p]=new w(0));return r},polyPowers:function(t,r,i){if(i=i||[],(f=f=t.group)===u&&r===t.value)i=i.concat(p(t.symbols));else if(f===l)for(var o in t.symbols){var a=t.symbols[o],f=a.group,h=a.value;if(f===s&&r===h)i.push(a.power);else if(f===u||f===l)i=E.polyPowers(a,r,i);else if(f===c&&a.contains(r)){var m=a.symbols[r];m&&i.push(m.power)}else f!==n&&r===h||i.push(0)}else f===c&&t.contains(r)&&i.push(e.Utils.decompose_fn(t,r,!0).x.power);return e.Utils.arrayUnique(i).sort()},Factor:{split:function(e){var n=new w(1),r=new w(1);return E.Factor.factor(e,new M).each((function(e){var i=t.parse(e);e.isConstant(!0)?n=t.multiply(n,i):r=t.multiply(r,i)})),[n,r]},mix:function(e,t){for(var n=p(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(n,r){try{if(n.group===l){for(var i=t.expand(n.clone(),!0).collectSymbols(null,null,(function(e,t){return(t.length||1)-(e.length||1)})),s={},o=[],a=0;a<i.length;a++){var u=i[a];o.push(u.multiplier.clone()),u.each((function(e){var t=Number(e.power);if(isNaN(t))throw new Error("exiting");e.value in s?(t<s[e.value][0]&&(s[e.value][0]=t),s[e.value][1].push(e)):s[e.value]=[t,[e]]}))}var c=new w(1);for(var p in s)s[p][1].length===i.length&&(c=t.multiply(c,t.pow(new w(p),new w(s[p][0]))));var f=e.Math2.QGCD.apply(null,o);if(!f.equals(1))for(r.add(new w(f)),a=0;a<i.length;a++)i[a].multiplier=i[a].multiplier.divide(f);if(!c.equals(1))for(r.add(c),n=new w(0),a=0;a<i.length;a++)n=t.add(n,t.divide(i[a],c.clone()))}}catch(e){}return n},zeroes:function(n,r){var i=function(){throw new e.exceptions.ValueLimitExceededError("Exiting")};try{var s,o,a,u,c;c=(n=t.expand(n.clone())).toString(),s=h(n),a=new w(0);for(var p=[],f=[],m=0,g=s.length;m<s.length;m++){for(var y={},b=0;b<g;b++)m!==b&&(y[s[b]]=0);var S=(o=t.parse(c,y)).power;d(S)||i(),p.push(o),f.push(o.power)}if(e.Utils.allSame(f)){var M=n.length,N=p.length;2===N&&(u=new v(f[0]/(M-1))),3===N&&(u=new v(f[0]/Math.round((Math.sqrt(8*M-1)-3)/2)))}else u=e.Math2.QGCD.apply(null,f);for(d(u)||i(),m=0;m<p.length;m++){var x=p[m],q=x.power.clone().divide(u);x.multiplier=new v(Math.pow(x.multiplier,1/q)),x.power=u.clone(),a=t.add(a,x)}if(a.group!==l)return n;for(;;){var A=E.div(n.clone(),a.clone());if(!A[1].equals(0))break;if(n=A[0],r.add(a.clone()),n.equals(1))break}}catch(c){}return n},factor:function(n,r){if(n.isConstant())return e.Math2.factor(n);var i=t.parse(n),s=E.Factor._factor(i,r);if(s.equals(n))return s;if(s.group===c){var o=new w(1),a=t.parse(s.power),u=t.parse(s.multiplier);s.toUnitMultiplier(),s.multiplier.lessThan(0)&&(o.negate(),s.negate()),s.each((function(e){var n=t.parse(E.Factor._factor(e));n.group===c?(u=t.multiply(u,w.create(n.multiplier)),n.each((function(e){var n=t.parse(E.Factor._factor(e));o=t.multiply(o,n),n.group===c&&(u=t.multiply(u,w.create(n.multiplier)))}))):o=t.multiply(o,n)})),s=t.pow(t.multiply(u,o),a)}return s},quadFactor:function(n,r){if(n.isPoly()&&E.degree(n.equals(2))){var i=e.Utils.variables(n)[0],s=E.coeffs(n,i),o=E.Factor._factor(s[2].clone());if(o.group===c){var a=o.collectSymbols();if(a.length>2)return n;var u=t.multiply(t.parse(s[0]),t.parse(a[0])),l=t.parse(s[1]).negate(),p=t.parse(a[1]),f=E.quad(p,l,u).filter((function(t){if(e.Utils.isInt(t))return t}));if(1===f.length){var h=f[0],g=t.divide(s[0],t.parse(h));e.Utils.isInt(g)&&(r.add(t.parse(m("({0})*({1})+({2})",a[1],i,g))),r.add(t.parse(m("({0})*({1})+({2})",a[0],i,h))),n=new w(1))}}}return n},cubeFactor:function(e,n){if(e.isComposite()){var r=e.collectSymbols();if(2===r.length){var i=r[0].sign(),s=r[0].clone().abs(),o=r[1].sign(),a=r[1].clone().abs();if(s.isCube()&&a.isCube()){i<o&&([i,o]=[o,i],[s,a]=[a,s]);var u=t.parse(s.getNth(3)),l=t.parse(a.getNth(3)),c=t.multiply(t.expand(t.pow(s.clone().toUnitMultiplier(),t.parse("1/3"))),u),p=t.multiply(t.expand(t.pow(a.clone().toUnitMultiplier(),t.parse("1/3"))),l);1===i&&-1===o?(n.add(t.parse(m("(({0})-({1}))",c,p))),n.add(t.parse(m("(({0})^2+({0})*({1})+({1})^2)",c,p))),e=w(1)):1===i&&1===o&&(n.add(t.parse(m("(({0})+({1}))",c,p))),n.add(t.parse(m("(({0})^2-({0})*({1})+({1})^2)",c,p))),e=w(1))}}}return e},_factor:function(n,r){if(n.group,n.group===a){var i=n.args[0];if(i.group===s&&i.isSimple())return n}else if(n.group===s&&n.isSimple())return n;if(n.group===l){n.distributeMultiplier(!0);var o=new w(0);n.each((function(e){(e.group===l&&e.power.greaterThan(1)||e.group===c)&&(e=t.expand(e)),o=t.add(o,e)})),o.power=n.power,n=o}n.group===a&&"sqrt"!==n.fname&&(n=e.Utils.evaluate(n));var u=n.clone();try{if(n.group===c){var m,g,v,y,b,S,N=t.parse(n.power);if(m=E.Simplify.strip(n.getDenom()),g=E.Simplify.strip(n.getNum()),v=m.pop(),(y=g.pop()).equals(n))return n;S=E.Factor.factor(y),b=E.Factor.factor(v);var x=E.Simplify.unstrip(g,S),q=E.Simplify.unstrip(m,b);return t.divide(x,q)}if(n.group===s)return n;if(n.isConstant())return n.equals(1)?n.clone():e.Math2.factor(n);if(N=n.power.clone(),d(N)&&(!N.lessThan(0)||n.group!==a)){var A=N.sign();n.toLinear(),r=r||new M;var C={};n=t.parse(e.Utils.subFunctions(n,C)),p(C).length>0&&(r.preAdd=function(n){return t.parse(n,e.Utils.getFunctionsSubs(C))}),n.isLinear()||(r.pFactor=n.power.toString(),n.toLinear());var I=h(n);n.isImaginary()&&I.push(e.Settings.IMAGINARY);var U=I.length>1;if(U){var L=!0,_=!0;if(n.each((function(e){e.group!==s&&(L=!1),e.multiplier.equals(1)||(_=!1)})),L&&_)return t.pow(t.parse(n,e.Utils.getFunctionsSubs(C)),t.parse(N))}var O=new M;n=E.Factor.coeffFactor(n,O),O.each((function(e){f(N)&&e.lessThan(0)&&e.negate(),A<0&&e.invert(),r.add(e)}));var R=new M;if(n=E.Factor.powerFactor(n,R),R.each((function(e){A<0&&e.invert(),r.add(e)})),U)n=E.Factor.cubeFactor(n,r),n=E.Factor.mfactor(n,r),r.each((function(e){A<0&&e.power.negate()}));else{var T=I[0];n=E.Factor.squareFree(n,r,T);var P=new M;n=E.Factor.trialAndError(n,P,T);var k=P.toSymbol();if(k.equals(u))return k;for(var D in P.factors){var F=P.factors[D];r.add(t.pow(F,t.parse(N)))}n.equals(u)&&(n=E.Factor.quadFactor(n,r))}n=t.parse(n,e.Utils.getFunctionsSubs(C));var B=1===r.length;r.add(t.pow(n,t.parse(N)));var G=r.toSymbol();return B&&n.equals(1)&&G.isLinear()&&(G=t.pow(G,t.parse(N))),G}return n}catch(e){return u}},reduce:function(e,n){if(e.group===l&&2===e.length){var r=e.collectSymbols().sort((function(e,t){return t.multiplier-e.multiplier}));if(r[0].power.equals(r[1].power)){var i=t.parse(r[0].power),s=r[0].clone().toLinear(),o=r[1].clone().toLinear();n.add(t.add(s.clone(),o.clone())),o.negate();for(var a=Number(i),u=new w(0),c=1;c<=a;c++){var p=t.pow(s.clone(),t.subtract(i.clone(),new w(c))),f=t.pow(o.clone(),t.subtract(new w(c),new w(1)));u=t.add(u,t.multiply(p,f))}return u}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===s)return e;var r=new S(e,n).squareFree(),i=r[2];if(1!==i){var o=r[1].toSymbol();return o.power=o.power.multiply(new v(i)),t.add(E.Factor.factor(o)),E.Factor.squareFree(r[0].toSymbol(),t)}return e},powerFactor:function(n,r){if(n.group!==u||n.previousGroup===o)return n;var i=p(n.symbols);if(!e.Utils.allNumeric(i))return n;var s=e.Utils.arrayMin(i),a=new w(0),l=t.parse(n.value+"^"+s);return n.each((function(e){e=t.divide(e,l.clone()),a=t.add(a,e)})),r.add(l),a},coeffFactor:function(t,n){if(t.isComposite()){var r=e.Math2.QGCD.apply(null,t.coeffs());if(r.equals(1)){var i=function(e){var t;return e.group===c?(t=0,e.each((function(e){t+=e.power}))):t=Number(e.power),t},s=t.collectSymbols(null,null,null,!0).sort((function(e,t){return e.isConstant(!0)?1:t.power-e.power})),o=s[0];(i(o)>i(s[1])||s[1].isConstant(!0))&&o.multiplier.lessThan(0)&&(n.add(new w(-1)),t.each((function(e){e.negate()}),!0))}else t.each((function(e){e.isComposite()?e.each((function(e){e.multiplier=e.multiplier.divide(r)})):e.multiplier=e.multiplier.divide(r)})),t.updateHash();n&&n.add(new w(r))}return t},trialAndError:function(t,n,r){var i=t.clone();try{var o=[];if(t.isConstant()||t.group===s)return t;for(var a=new S(t,r),u=a.coeffs[0],l=e.Math2.ifactor(u),c=E.proots(t),p=0;p<c.length;p++){var f=c[p],h=1;if(!isNaN(f)){for(var m in l){var g=e.Utils.round(Math.log(m)/Math.log(Math.abs(f)),8);if(d(g)){f=m,h=g;break}}var w=new v(f),y=[new v(w.num).negate()];y[h]=new v(w.den);var b=S.fromArray(y,a.variable).fill(),M=a.divide(b);M[1].equalsNumber(0)&&(a=M[0],o.push(b.toSymbol()))}}return a.equalsNumber(1)||(a=E.Factor.search(a,n)),o.forEach((function(e){n.add(e)})),a.toSymbol()}catch(e){return i}},search:function(t,n,r){r=r||10;var i=t.variable,s=function(e,s,o,a){var u=S.fit(e,s,o,r,a,i);if(u&&u.coeffs.length>1){var l=t.divide(u);if(l[1].equalsNumber(0))return n.add(u.toSymbol()),[l[0],u]}return null},o=t.coeffs[0],a=e.Math2.ifactor(o),u=t.lc(),l=e.Math2.ifactor(u),c=t.sub(r),p=e.Math2.ifactor(c),f=E.Factor.mix(p,c<0),h=Math.ceil(t.coeffs.length/2),m=u.lessThan(0),g=o.lessThan(0);for(l[1]=1,a[1]=1;h--;)for(var v in l)for(var d in a)for(var w=0;w<f.length;w++){var y=s(v,d,f[w],h);if(y)return t=y[0],e.Utils.isPrime(t.sub(r))||(t=E.Factor.search(t,n)),t;y||(m&&g?y=s(-v,-d,f[w],h):m?y=s(-v,d,f[w],h):g&&(y=s(v,-d,f[w],h)))}return t},mSqfrFactor:function(t,n){if(t.group!==a)for(var r=h(t).reverse(),i=0;i<r.length;i++)do{if(r[i]!==t.value){var s=e.Calculus.diff(t,r[i]),o=E.Factor.coeffFactor(s);if(o.equals(0))break;var u=!0;if(o.isConstant()&&t.isComposite()&&t.each((function(e){e.multiplier%o!=0&&(u=!1)}),!0),u){var l=E.div(t,o.clone()),c=l[1].equals(0);if(t.equals(l[0])&&l[1].equals(0))break;if(l[0].isConstant()){n.add(l[0]);break}}else c=!1;c&&(n.add(l[0]),t=o)}else n.add(t),t=new w(1)}while(c);return t},sqdiff:function(n,r){if(n.isConstant("all"))return n;try{var i=function(t){return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){return w.unwrapPARENS(b.sqrt(b.abs(t)))}),!0)},o=e.Utils.separate(n.clone()),a=[];for(var u in o)"constants"!==u&&a.push(o[u]);if(a.sort((function(e,t){return t.power-e.power})),2===a.length){var l,c;if(l=a.pop(),c=a.pop(),f(l.power)&&f(c.power)&&l.sign()===c.sign()&&l.group===s&&c.group===s)throw new Error("Unable to factor");if(l.isComposite()&&c.power.equals(2)){c=i(c);var p=E.Factor.factor(t.add(l,o.constants));p.power.equals(2)&&(p.toLinear(),r.add(t.subtract(p.clone(),c.clone())),r.add(t.add(p,c)),n=new w(1))}else if(l=l.powSimp(),c=c.powSimp(),(l.group===s||""===l.fname)&&l.power.equals(2)&&(c.group===s||""===c.fname)&&c.power.equals(2)&&!o.constants){if(l.multiplier.lessThan(0)){var h=c;c=l,l=h}l.multiplier.greaterThan(0)&&(l=i(l),c=i(c)),r.add(t.subtract(l.clone(),c.clone())),r.add(t.add(l,c)),n=new w(1)}}}catch(e){}return n},mfactor:function(n,r){if(n.group===a)if("sqrt"===n.fname){var i=new M,s=E.Factor.common(n.args[0].clone(),i);s=E.Factor.coeffFactor(s,i),n=t.multiply(t.symfunction("sqrt",[s]),t.parse(n.multiplier)),i.each((function(r){n=t.multiply(n,t.parse(e.Utils.format("sqrt({0})",r)))}))}else r.add(n);else{n=E.Factor.mSqfrFactor(n,r);for(var o=h(n),u=n.collectSymbols().map((function(e){return w.unwrapSQRT(e)})),l={},c={},p=o.length,f=u.length,m=0;m<p;m++){var g=o[m];l[g]=new w(0);for(var v=0;v<f;v++){var y=u[v];if(y.contains(g)){var b=y.value===g?y.power.toDecimal():y.symbols[g].power.toDecimal();(!c[g]||b<c[g])&&(c[g]=b),l[g]=t.add(l[g],y.clone())}}}for(var S in l){var N=t.parse(S+"^"+c[S]),x=t.divide(l[S],N),q=t.expand(x);if(q.equals(1))break;var A=E.div(n.clone(),q);if(A[0].equals(0))break;if(A[1].equals(0)){var C=!1;if(A[0].each((function(e){d(e.multiplier)||(C=!0)})),C){A[1]=t.expand(t.multiply(A[1],q));break}}var I=d(q)&&q.lessThan(0);if(A[1].equals(0)&&!I){var U=E.div(n.clone(),A[0].clone());if((N=U[0]).equals(0))return n;if(n=U[1],N.equals(-1)&&!n.equals(0))return n;var L=A[0];if(n.equals(L)){var _=E.Factor.reduce(L,r);return n.equals(_)?_:E.Factor.mfactor(_,r)}return r.add(L),n.equals(0)?N:N.isConstant("all")?(r.add(N),N):E.Factor.mfactor(N,r)}}}return n=E.Factor.sqdiff(n,r),n=E.Factor.zeroes(n,r)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!E.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,r=e.group;if(r===u||r===l)for(var i in t=!0,e.symbols){var p=e.symbols[i],f=p.group;if(f!==a&&f!==o||(t=!1),f===c)t=1===h(p).length;else if(f===u||f===l)t=E.isLinear(p);else if(p.group!==n&&"1"!==p.power.toString()){t=!1;break}}else r===s&&1===e.power&&(t=!0);return t},gcd:function(){var n;if(0===(n=1===arguments.length&&arguments[0]instanceof e.Vector?arguments[0].elements:e.Utils.arguments2Array(arguments)).length)return new w(1);if(1===n.length)return n[0];for(var r=[],i=!1,s=0;s<n.length;s++)if(n[s].group===a&&"gcd"===n[s].fname)(n=n.concat(arguments[s].args)).splice(s,1);else{var o=h(n[s]);if(e.Utils.haveIntersection(o,r)){i=!0;break}r=r.concat(o)}if(i||0===r.length){if(n.every((function(e){return e.getDenom().equals(1)}))){var u=n[0];for(s=1;s<n.length;s++)u=E.gcd_(n[s],u);return u}return t.divide(E.gcd.apply(null,n.map((function(e){return e.getNum()}))),E.lcm.apply(null,n.map((function(e){return e.getDenom()}))))}return t.symfunction("gcd",n)},gcd_:function(n,r){if(n.group!==a&&n.group!==i||(n=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(n)}))),r.group===a&&(r=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(r)}))),n.isConstant()&&r.isConstant())return new w(e.Math2.QGCD(new v(+n),new v(+r)));var s=t.multiply(n.getDenom()||new w(1),r.getDenom()||new w(1)).invert();if(n=t.multiply(n.clone(),s.clone()),r=t.multiply(r.clone(),s.clone()),n=t.expand(n),r=t.expand(r),n.group===c||r.group===c){var u=t.divide(n.clone(),r.clone());if(!(m=t.multiply(r.clone(),u.getDenom().invert())).equals(1))return m}if(n.group===o||r.group===o){var l=new w(e.Math2.GCD(n.multiplier,r.multiplier)),p=E.gcd_(n.value===y?new w(1):t.parse(n.value),r.value===y?new w(1):t.parse(r.value)),f=E.gcd_(t.parse(n.power),t.parse(r.power));return t.multiply(l,t.pow(p,f))}if(n.length<r.length){var m=n;n=r,r=m}var g=h(n),d=h(r);if(g.length===d.length&&1===g.length&&g[0]===d[0]||1===g.length&&0===d.length||0===g.length&&1===d.length)return n=new S(n),r=new S(r),t.divide(n.gcd(r).toSymbol(),s);var b,M=[];for(n.each((function(e){M.push(e.multiplier)})),r.each((function(e){M.push(e.multiplier)}));!r.equals(0);){if(m=r.clone(),n=n.clone(),b=E.div(n,m),r=b[1],b[0].equals(0))return t.divide(new w(e.Math2.QGCD(n.multiplier,r.multiplier)),s);n=m}var N=e.Math2.QGCD.apply(void 0,M);return N.equals(1)||n.each((function(e){e.multiplier=e.multiplier.divide(N)})),!n.equals(1)||n.isConstant()||r.isConstant()?t.divide(n,s):t.divide(t.symfunction("gcd",arguments),s)},lcm:function(){var n;1===arguments.length?arguments[0]instanceof e.Vector?n=arguments[0].elements:t.error("lcm expects either 1 vector or 2 or more arguments"):n=e.Utils.arguments2Array(arguments);var r,i=n.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1)),s=function(e,t){t=Number(t);var n,r,i,s=[],o=Math.pow(2,e.length);for(r=t;r<o;r++){n=[],i=e.length-1;do{0!=(r&1<<i)&&n.push(e[i])}while(i--);n.length===t&&s.push(n)}return s}(arguments,arguments.length-1).map((function(e){return e.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1))}));return r=n.every((function(t){return e.Utils.isVariableSymbol(t)}))?t.symfunction("gcd",e.Utils.arrayUnique(s)):E.gcd.apply(null,s),t.divide(i,r)},divide:function(n,r){var i,s,o,a;return(a=(o=e.Algebra.Factor.factor(n.clone())).getDenom()).isConstant("all")?a=new w(1):n=t.expand(w.unwrapPARENS(t.multiply(o,a.clone()))),i=E.div(n,r),s=t.divide(i[1],r),t.divide(t.add(i[0],s),a)},div:function(n,r){var i,o,a=[new w(0),n.clone()];try{if(r.isConstant("all"))return n.each((function(e){e.multiplier=e.multiplier.divide(r.multiplier)})),[n,new w(0)];if(n=t.expand(n),r=t.expand(r),n.group===s&&r.group===l){var u=n.value,c=e.Utils.decompose_fn(r.clone(),u,!0);if(n.isLinear()&&c.x&&c.x.isLinear()&&r.isLinear()){var p=w.create(n.multiplier);return[t.divide(p.clone(),c.a.clone()),t.divide(t.multiply(p,c.b),c.a).negate()]}}if(n.group===s&&r.group===s){var f=t.divide(n.clone(),r.clone());return f.isConstant()?[f,new w(0)]:[new w(0),n.clone()]}var m=n.hasFunc(),g=r.hasFunc(),d=!1;if(m||g){d=!0;var b={},M=(n=t.parse(e.Utils.subFunctions(n,b)),r=t.parse(e.Utils.subFunctions(r,b)),e.Utils.getFunctionsSubs(b))}var E,x,q=e.Utils.arrayUnique(h(n).concat(h(r)));if((n.isImaginary()||r.isImaginary())&&q.push(e.Settings.IMAGINARY),1===q.length)E=(Q=new S(n).divide(new S(r)))[0].toSymbol(),x=Q[1].toSymbol();else{q.push(y);var A=function(e){for(var n=new w(0),r=0;r<e.length;r++){var i=e[r].toSymbol();n=t.add(n,i)}return n},C=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),i>1)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},I=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s,o=C(n),a=t+1;a<r;a++){var u=e[a],l=n.sum.equals(u.sum);if(!l&&o)break;if(l){for(var c,p,f,h,m=n.terms.length,g=0;g<m;g++){var v=n.terms[g],d=u.terms[g];(void 0===c||v.greaterThan(c))&&(c=v,f=g),(void 0===p||d.greaterThan(p))&&(p=d,h=g)}var w=c.subtract(u.terms[f]),y=p.subtract(n.terms[h]);if(y>w){o=[p,h,u];break}if(w>y){o=[c,f,n];break}}else if(o=C(u))break;o=C(u)}if(!o)return C(e[0],!0);for(a=0;a<R.length;a++){var b=R[a].terms;if((s=o[1])===b.length-1)return;if(!(i=b[s]).equals(0))break}return i.equals(0)?I(e,++t):o}},U=e.Utils.toMapObj(q),L=function(e,t){return t.sum.subtract(e.sum)},_=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},O=n.tBase(U).sort(L),R=r.tBase(U).sort(L),T=_(O[0],R[0])&&O[0].count>R[0].count?R:O,P=I(T),k=[];if(P){var D=P[1],F=function(e,t){var n=e.len(),r=t.len(),i=t.terms[D],s=e.terms[D];return r>n&&i.greaterThan(s)?r-n:i.subtract(s)};D=function(e,t,n){for(var r=[],i=0;i<e.length;i++)for(var s=e[i],o=0;o<s.terms.length;o++){var a=r[o],u=s.terms[o];0===i?r[o]=u:a&&!a.equals(u)&&(r[o]=void 0)}for(i=0;i<r.length;i++)if((s=r[i])&&!s.equals(0))return i;return n}(O,0,D),O.sort(F),R.sort(F);var B=R[0],G=O[0],V=new N(new v(1),[],G.map);if(B.sum.greaterThan(G.sum)&&G.len()>1)for(var j=0;j<G.terms.length;j++){var H=B.terms[j].subtract(G.terms[j]);if(H.equals(0))V.terms[j]=new v(0);else{var X=H.add(new v(1));V.terms[j]=H;for(var Z=0;Z<O.length;Z++)O[Z].terms[j]=O[Z].terms[j].add(X)}}for(var z=_(O[0],R[0]),$=0;z&&(o=R,!(i=O)[0].sum.equals(o[0].sum)||i.length>=o.length);){if($++>200)throw new e.exceptions.InfiniteLoopError("Unable to compute!");var Q=O[0].divide(R[0]);for(k.push(Q),O.shift(),j=1;j<R.length;j++){var Y=R[j].multiply(Q).generateImage(),W=O.length;for(0===W&&(Y.coeff=Y.coeff.neg(),O.push(Y),O.sort(F)),Z=0;Z<W;Z++){var J=O[Z];if(J.getImg()===Y.getImg()){J.coeff=J.coeff.subtract(Y.coeff),J.coeff.equals(0)&&(e.Utils.remove(O,Z),Z--);break}Z===W-1&&(Y.coeff=Y.coeff.neg(),O.push(Y),O.sort(F))}}if(!(z=_(O[0],R[0]))&&O.length>=R.length)for(j=1;j<O.length;j++)if(z=_(O[j],R[0])){O.unshift(e.Utils.remove(O,j));break}}}E=A(k),x=A(O),void 0!==V&&(V=V.toSymbol(),E=t.divide(E,V.clone()),x=t.divide(x,V))}return d&&(E=t.parse(E.text(),M),x=t.parse(x.text(),M)),[E,x]}catch(e){return a}},line:function(n,r,i){e.Utils.isArray(n)&&(n=e.Utils.convertToVector(n)),e.Utils.isArray(r)&&(r=e.Utils.convertToVector(r)),i=t.parse(i||"x"),e.Utils.isVector(n)&&e.Utils.isVector(r)||t.error('Line expects a vector! Received "'+n+'" & "'+r+'"');var s=t.subtract(r.e(1).clone(),n.e(1).clone()),o=t.subtract(r.e(2).clone(),n.e(2).clone()),a=t.divide(o,s),u=t.multiply(i,a.clone()),l=t.multiply(n.e(1).clone(),a);return t.add(t.subtract(u,l),n.e(2).clone())},PartFrac:{createTemplate:function(e,n,r,i){var o,u,l,c,p,f,h;(e=E.Factor.factor(e)).each((function(t,n){if(t.group===a&&""===t.fname&&t.args[0].group===s){var r=t.args[0];this.symbols?(delete this.symbols[n],this.symbols[r.value]=r):e=t.args[0]}})),o=n.collectFactors(),u=[],f=[],h=new w(1);for(var m=0;m<o.length;m++){var g=w.unwrapPARENS(o[m]);if(g.power.greaterThan(1)){c=Number(g.power),l=g.clone().toLinear(),p=Number(E.degree(l,i));for(var v=0;v<c;v++){var d=t.pow(l.clone(),new w(v+1));r.push(d.clone());var y=t.divide(e.clone(),d.clone());f.push(p),u.push(y)}}else p=Number(E.degree(g,i)),r.push(g),y=t.divide(e.clone(),g.clone()),y=t.expand(w.unwrapPARENS(y)),f.push(p),u.push(y)}return[r=r.map((function(e){return t.multiply(e,h.clone())})),u,f]},partfrac:function(n,r,i){var s=h(n);r=r||t.parse(s[0]);try{var o,a,u,l,c,p,f,m,g,v,d,y,b,S,M,N,x,q,A;if(o=t.expand(n.getNum()),a=t.expand(n.getDenom().toUnitMultiplier()),o.multiplier=n.multiplier,c=o.groupTerms(r),Number(E.degree(o,r))>=Number(E.degree(a,r))?(b=(y=E.div(o.clone(),t.expand(a.clone())))[0],c=(o=y[1]).groupTerms(r)):b=new w(0),1===Number(E.degree(a,r))){var C=t.divide(o,a);return i?[b,C]:t.add(b,C)}l=E.Factor.factor(a),N=E.PartFrac.createTemplate(a.clone(),l,[],r),x=N[0],S=N[1],p=N[2],d=[c.length],f=[],u=[],M=[],S.map((function(e,n){q=x[n],A=p[n];for(var i=0;i<A;i++){u.push(q.clone());var s=w.create(r,i),o=t.expand(t.multiply(e,s.clone())).groupTerms(r),a=o.length;d.push(a),f.push(o),M.push(s.clone())}})),m=e.Utils.arrayMax(d),v=new e.Matrix(e.Utils.fillHoles(c,m)).transpose(),g=new e.Matrix;for(var I=0;I<f.length;I++)g.elements.push(e.Utils.fillHoles(f[I],m));var U=t.multiply(g.transpose().invert(),v),L=i?[b]:b;return U.each((function(e,n){var r=t.multiply(M[n],t.divide(e,u[n]));i?L.push(r):L=t.add(L,r)})),L}catch(e){try{if(n.isComposite()){var _={};n.each((function(e){var n=e.getDenom(),r=e.getNum(),i=_[n];_[n]=i?t.add(i,r):r}));var O=new w(0);for(var R in _)O=t.add(O,t.divide(_[R],t.parse(R)));n=O}}catch(e){}}return n}},degree:function(n,r,i){if(i=i||{nd:[],sd:[],depth:0},!r){var a=h(n);if(a.length>1)throw new Error("You must specify the variable for multivariate polynomials!");if(0===a.length)return new w(0);r=t.parse(a[0])}var u=n.group;n.isComposite()?((n=n.clone()).distributeExponent(),n.each((function(e){i.depth++,E.degree(e,r,i),i.depth--}))):n.group===c?n.each((function(e){i.depth++,E.degree(e,r,i),i.depth++})):u===o&&n.value===r.value?i.sd.push(n.power.clone()):u===s&&n.value===r.value?i.nd.push(t.parse(n.power)):i.nd.push(new w(0));var l=i.nd.length>0?e.Utils.arrayMax(i.nd):void 0;return 0===i.depth&&i.sd.length>0?(void 0!==l&&i.sd.unshift(l),t.symfunction("max",i.sd)):(e.Utils.isSymbol(l)||(l=t.parse(l)),l)},sqComplete:function(n,r,i){e.Utils.isSymbol(r)||(r=t.parse(r));var s,o,a,u,l,c,p,f,h,m,g,v=function(t){throw t=t||"Stopping",new e.exceptions.ValueLimitExceededError(t)};return n.isPoly(!0)||v("Must be a polynomial!"),h=e.Utils.inBrackets,n=n.clone(),(s=e.Algebra.degree(n,r)).equals(2)||v("Cannot complete square for degree "+s),o=(p=e.Algebra.coeffs(n,r))[2],f=p[1].sign(),a=t.divide(p[1],new w(2)),u=t.pow(a.clone(),new w(2)),i?[o,a,l]:(g=b.sqrt(o),c=t.divide(b.sqrt(u),g.clone()),l=t.subtract(p[0],t.pow(c.clone(),new w(2))),{a:m=t.parse(h(g.clone()+"*"+r+(f<0?"-":"+")+c)),c:l,f:t.add(t.pow(m.clone(),new w(2)),l.clone())})},Simplify:{strip:function(e){var n=t.parse(e.multiplier);e.toUnitMultiplier();var r=t.parse(e.power);return e.toLinear(),[n,r,e]},unstrip:function(e,n){var r=e[0],i=e[1];return t.multiply(r,t.pow(n,i))},complexSimp:function(e,n){var r,i,s,o,a,u,l,c,p;return u=e.realpart(),c=e.imagpart(),l=n.realpart(),p=n.imagpart(),r=t.multiply(u.clone(),l.clone()),i=t.multiply(c.clone(),p.clone()),s=t.multiply(l.clone(),c),o=t.multiply(u,p.clone()),a=t.add(t.pow(l,new w(2)),t.pow(p,new w(2))),t.divide(t.add(t.add(r,i),t.multiply(t.subtract(s,o),w.imaginary())),a)},trigSimp:function(n){if(n.containsFunction(["cos","sin","tan"])){n=n.clone();var r=E.Simplify.strip(n),i=(n=r.pop()).clone();if(n.group===l){var s=new w(0);n.each((function(e){var n=E.Simplify.trigSimp(e.fnTransform());s=t.add(s,n)}),!0),i=t.pow(t.multiply(new w(n.multiplier),s),new w(n.power))}else if(n.group===c){var o=n.getNum(),a=n.getDenom();if("sin"===o.fname&&"cos"===a.fname&&o.args[0].equals(a.args[0])&&o.power.equals(a.power)&&(i=t.parse(e.Utils.format("({0})*({1})*tan({2})^({3})",a.multiplier,o.multiplier,o.args[0],o.power))),i.group===c){var u=new w(1);i.each((function(n){"tan"===n.fname&&(n=t.parse(e.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",n.multiplier,E.Simplify.simplify(n.args[0]),n.power))),u=t.multiply(u,n)})),i=u}}n=i=E.Simplify.unstrip(r,i).distributeMultiplier()}return n},fracSimp:function(e){var n=e.getDenom();if((m=e.getNum()).isImaginary()&&n.isImaginary()&&(e=E.Simplify.complexSimp(m,n)),e.isComposite()){e.power>1&&(e=t.expand(e));var r,i,s,o,a,u,l,c,p,f,h,m,g=e.collectSymbols();for(i=g.pop();g.length;)s=g.pop(),o=t.parse(i.getDenom()),a=t.parse(s.getDenom()),u=i.getNum(),l=s.getNum(),h=t.multiply(o.clone(),a.clone()),p=t.multiply(u,a),f=t.multiply(l,o),c=t.add(p,f),i=t.divide(c,h);return n=t.expand(i.getDenom()),(r=(m=t.expand(i.getNum())).isImaginary()&&n.isImaginary()?E.Simplify.complexSimp(m,n):t.divide(m,n)).equals(e)?e:E.Simplify.simplify(r)}return e},ratSimp:function(e){if(e.group===c){var n=e.getDenom(),r=e.getNum().distributeMultiplier(),i=E.Simplify.fracSimp(n),s=E.Simplify.fracSimp(r);e=t.divide(s,i)}return e},sqrtSimp:function(e,r){if(e.isSQRT()){var i,s=E.Factor.factor(e.args[0].clone()),o=t.parse(s.multiplier),a=o.sign(),u=t.sqrt(o.abs());if(d(u)){if(s.group===c){var l=new w(1);s.each((function(e){if(e.group===n){var r=t.sqrt(e.clone());d(r)?u=t.multiply(u,r):l=t.multiply(l,e)}else l=t.multiply(l,e)}));var p=t.multiply(l,t.parse(a));(i=t.sqrt(p.clone())).isImaginary&&(i=t.sqrt(t.expand(p.clone())))}else i=t.sqrt(s.clone().toUnitMultiplier());return t.multiply(u,i)}}else e.isComposite()&&e.isLinear()?(u=new w(0),e.each((function(e){u=t.add(u,E.Simplify.sqrtSimp(e))}),!0),u=t.multiply(u,t.parse(e.multiplier))):e.group===c&&(u=t.parse(e.multiplier),e.each((function(e){var n=E.Simplify.sqrtSimp(e);u=t.multiply(u,n)}),!0),u=t.pow(u,t.parse(e.power)));return u||t.parse(e)},patternSub:function(t){var n={},r=function(e){var t=!1;return e.each((function(e){e.group===l?t=!0:e.symbols&&(t=r(e))})),t},i=function(s){s.each((function(s){if(s.symbols||s.group===a)if(r(s))i(s);else if(!n[s.value]){var o=e.Utils.getU(t);n[s.value]=o,t=t.sub(s.value,o)}}),!0)};return i(t),[t,n]},simplify:function(n){var r=E.Simplify.strip(n);if(n=r.pop(),(n=E.Simplify.fracSimp(n)).isConstant()||n.group===e.groups.S)return r.push(n),E.Simplify.unstrip(r,n);var i=n.clone();if(i=E.Simplify.trigSimp(i),i=E.Simplify.ratSimp(i),(i=E.Factor.factor(i)).group===e.groups.CP&&i.isLinear()){var s=i.multiplier.clone();i.toUnitMultiplier();var o=new w(0);i.each((function(e){var n=E.Simplify.simplify(e);o=t.add(o,n)})),i=o,o.multiplier=o.multiplier.multiply(s)}return E.Simplify.unstrip(r,i)}},Classes:{Polynomial:S,Factors:M,MVTerm:N}};e.Expression.prototype.simplify=function(){return E.Simplify.simplify(this.symbol)},r.useAlgebraDiv=function(){var n=E.divideFn=t.divide,r=0;t.divide=function(t,i){var s;return s=1==++r?e.Algebra.divide(t,i):n(t,i),r=0,s}},r.useParserDiv=function(){E.divideFn&&(t.divide=E.divideFn),delete E.divideFn},r.register([{name:"factor",visible:!0,numargs:1,build:function(){return E.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return E.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return E.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return E.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return E.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return E.divide}},{name:"div",visible:!0,numargs:2,build:function(){return E.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return E.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return E.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){return function(){var t=E.coeffs.apply(E,arguments);return new e.Vector(t)}}},{name:"line",visible:!0,numargs:[2,3],build:function(){return E.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){return function(e,t){try{return t=t||h(e)[0],E.sqComplete(e.clone(),t).f}catch(t){return e}}}}]),r.updateAPI()}()},238:(e,t,n)=>{if(void 0===r){var r=n(182);n(684)}!function(){"use strict";var e=r.getCore(),t=e.PARSER,n=e.Frac,i=e.Settings,s=e.Utils.isSymbol,o=e.groups.FN,a=e.Symbol,u=e.Utils.text,l=e.Utils.inBrackets,c=e.Utils.isInt,p=e.Utils.format,f=e.Utils.even,h=e.Utils.evaluate,m=e.groups.N,g=e.groups.S,v=(o=e.groups.FN,e.groups.PL),d=e.groups.CP,w=e.groups.CB,y=e.groups.EX,b=e.groups.P,S=i.LOG,M="abs",N="sqrt",E="sin",x="cos",q="tan",A="sec",C="csc",I="cot",U="asin",L="acos",_="atan",O="asec",R="acsc",T="acot",P="sinh",k="cosh",D="tanh",F="csch",B="sech",G="coth",V="asech",j="acsch",H="acoth";function X(e){this.message=e||""}X.prototype=new Error,a.prototype.hasIntegral=function(){return this.containsFunction("integrate")},a.prototype.fnTransform=function(){if(this.group!==o)return this;var e,n=this.args[0],r=new a(this.multiplier),i=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case P:e=t.parse(p("(e^({0})-e^(-({0})))/2",n));break;case k:e=t.parse(p("(e^({0})+e^(-({0})))/2",n));break;case D:e=t.parse(p("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",n));break;case q:e=t.parse(p("sin({0})/cos({0})",n));break;case C:e=t.parse(p("1/sin({0})",n));break;case A:e=t.parse(p("1/cos({0})",n));break;default:e=i}else if(this.power.equals(2))switch(this.fname){case E:e=t.parse(p("1/2-cos(2*({0}))/2",n));break;case x:e=t.parse(p("1/2+cos(2*({0}))/2",n));break;case q:e=t.parse(p("sin({0})^2/cos({0})^2",n));break;case k:e=t.parse(p("1/2+cosh(2*({0}))/2",n));break;case P:e=t.parse(p("-1/2+cosh(2*({0}))/2",n));break;case D:e=t.parse(p("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",n));break;case A:e=t.parse(p("(1-cos(2*({0})))/(1+cos(2*({0})))+1",n));break;default:e=i}else if(this.fname===A)e=t.parse(p("1/cos({0})^({1})",this.args[0],this.power));else if(this.fname===C)e=t.parse(p("1/sin({0})^({1})",this.args[0],this.power));else if(this.fname===q)e=this.power.lessThan(0)?t.parse(p("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):t.parse(p("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power));else if(this.fname===E&&this.power.lessThan(0))e=t.parse(p("csc({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===x&&this.power.lessThan(0))e=t.parse(p("sec({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===E&&this.power.equals(3))e=t.parse(p("(3*sin({0})-sin(3*({0})))/4",this.args[0]));else if(this.fname===x&&this.power.equals(3))e=t.parse(p("(cos(3*({0}))+3*cos({0}))/4",this.args[0]));else if(this.fname!==x&&this.fname!==E||!f(this.power))e=i;else{var s=this.power/2,u=t.pow(this.clone().toLinear(),t.parse(2)).fnTransform(),l=t.expand(t.pow(u,t.parse(s)));e=new a(0),l.each((function(n){var r=n.fnTransform();e=t.add(e,r)}),!0)}return t.multiply(e,r)},a.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===g)return!1;if(this.fname&&(e.Utils.in_trig(this.fname)||e.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].hasTrig())return!0;return!1},e.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},e.Utils.toCommonDenominator=function(n){if(n.isComposite()&&n.isLinear()){var r=new a(n.multiplier),i=new a(1),s=new a(0);return n.each((function(e){i=t.multiply(i,e.getDenom())}),!0),n.each((function(e){var n=e.getNum(),r=e.getDenom(),o=t.multiply(n,t.divide(i.clone(),r));s=t.add(s,o)})),t.multiply(r,e.Algebra.divide(t.expand(s),t.expand(i)))}return n},e.Utils.in_inverse_trig=function(e){return-1!==[U,L,_,R,O,T].indexOf(e)},e.Utils.in_trig=function(e){return-1!==[x,E,q,A,C,I].indexOf(e)},e.Utils.in_htrig=function(e){return-1!==[P,k,D,j,V,H].indexOf(e)},e.Matrix.jacobian=function(t,n){var r=new e.Matrix;return n||(n=e.Utils.arrayGetVariables(t)),n.forEach((function(n,i){t.forEach((function(t,s){var o=e.Calculus.diff(t.clone(),n);r.set(s,i,o)}))})),r},e.Matrix.prototype.max=function(){var e=new a(0);return this.each((function(t){var n=t.abs();n.gt(e)&&(e=n)})),e},e.Matrix.cMatrix=function(n,r){var i=new e.Matrix;return r.forEach((function(e,r){i.set(r,0,t.parse(n))})),i};var Z=e.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==o)return!1;return!0},z=e.Utils.cosAsinBtranform=function(e,n){var r,i;return r=e.args[0],i=n.args[0],t.parse(p("(sin(({0})+({1}))-sin(({0})-({1})))/2",r,i))},$=e.Utils.cosAsinAtranform=function(e,n){return 1!==Number(n.power)?t.multiply(e,n):(r=e.args[0],t.parse(p("(sin(2*({0})))/2",r)));var r},Q=e.Utils.cosAsinBtranform=function(e,n){var r,i;return r=e.args[0],i=n.args[0],t.parse(p("(cos(({0})+({1}))-cos(({0})-({1})))/2",r,i))},Y=e.Utils.trigTransform=function(e){for(var n,r,i={},s=new a(1),u=0,l=e.length;u<l;u++)if((n=e[u]).group===o){var c=n.fname;c===x&&i[E]?(r=i[E].args[0].toString()!==n.args[0].toString()?z(n,i[E]):$(n,i[E]),delete i[E],s=t.multiply(s,r)):c===E&&i[x]?(r=i[x].args[0].toString()!==n.args[0].toString()?z(n,i[x]):$(n,i[x]),delete i[x],s=t.multiply(s,r)):c===E&&i[E]?(i[E].args[0].toString()!==n.args[0].toString()?(r=Q(n,i[E]),delete i[E]):(r=t.multiply(n,i[E]),delete i[E]),s=r):i[c]=n}else s=t.multiply(s,n);for(var p in i)s=t.multiply(s,i[p]);return s};e.Settings.integration_depth=10,e.Settings.max_lim_depth=10;var W=e.Calculus={version:"1.4.6",sum:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");var o;if(r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)){var l=s-i<200?"":"PARSE2NUMBER";i=Number(i),s=Number(s),o=e.Utils.block(l,(function(){for(var o=n.text(),u={"~":!0},l=new e.Symbol(0),c=i;c<=s;c++){u[r]=new a(c);var p=t.parse(o,u);l=t.add(l,p)}return l}))}else o=t.symfunction("sum",arguments);return o},product:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");var o;if(r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)){var l=s-i<200?"":"PARSE2NUMBER";o=e.Utils.block(l,(function(){i=Number(i),s=Number(s.multiplier);for(var o=n.text(),u={},l=new e.Symbol(1),c=i;c<=s;c++)u[r]=new a(c),l=t.multiply(l,t.parse(o,u));return l}))}else o=t.symfunction("product",arguments);return o},diff:function(r,c,f){if(e.Utils.isVector(r)){var h=new e.Vector([]);return r.each((function(e){h.elements.push(W.diff(e,c,f))})),h}if(e.Utils.isMatrix(r)){var P=new e.Matrix;return r.each((function(e,t,n){P.set(t,n,W.diff(e,c,f))})),P}var k=s(c)?c.text():c;if(f=s(f)?f.multiplier:f||1,void 0===k&&(k=e.Utils.variables(r)[0]),r.group===o&&r.fname===N){var X=r.args[0],Z=r.power.clone();X.group===m&&X.group===b||(X.power=s(X.power)?t.multiply(X.power,t.multiply(new a(.5)),Z):X.power.multiply(new n(.5)).multiply(Z),X.multiplier=X.multiplier.multiply(r.multiplier)),r=X}if(r.group!==o||s(r.power))r=Y(r);else{var z=Y(t.parse(r)),$=W.diff(r.args[0].clone(),k);r=t.multiply(z,$)}return f>1&&(f--,r=W.diff(r,c,f)),r;function Q(e){return(e.value===k||e.contains(k,!0))&&(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new n(1)),e.power.equals(0)&&(e=a(e.multiplier))),e}function Y(e){var r,f,h=e.group;if(h===m||h===g&&e.value!==k||h===b)e=a(0);else if(h===g)e=Q(e);else{if(h===w){var N=e.multiplier.clone();e.toUnitMultiplier();var P=t.multiply(function(e){for(var n=e.collectSymbols(),r=new a(0),i=n.length,s=0;s<i;s++){for(var o=W.diff(n[s].clone(),k),u=0;u<i;u++)s!==u&&(o=t.multiply(o,n[u].clone()));r=t.add(r,o)}return r}(e),Q(e));return P.multiplier=P.multiplier.multiply(N),P}if(h===o&&e.power.equals(1))switch(e.fname){case S:f=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=f.multiplier.divide(e.multiplier);break;case x:e.fname=E,e.multiplier.negate();break;case E:e.fname=x;break;case q:e.fname=A,e.power=new n(2);break;case A:e=J(e,q);break;case C:e=J(e,"-cot");break;case I:e.fname=C,e.multiplier.negate(),e.power=new n(2);break;case U:e=t.parse("(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case L:e=t.parse("-(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case _:e=t.parse("(1+("+u(e.args[0])+")^2)^(-1)");break;case M:N=e.multiplier.clone(),e.toUnitMultiplier(),(r=e.args[0].clone()).toUnitMultiplier(),(e=t.parse(l(u(e.args[0]))+"/abs"+l(u(r)))).multiplier=N;break;case"parens":e=a(1);break;case"cosh":e.fname="sinh";break;case"sinh":e.fname="cosh";break;case D:e.fname=B,e.power=new n(2);break;case B:e=J(e,"-tanh");break;case F:var X=String(e.args[0]);return t.parse("-coth("+X+")*csch("+X+")");case G:return X=String(e.args[0]),t.parse("-csch("+X+")^2");case"asinh":e=t.parse("(sqrt(1+("+u(e.args[0])+")^2))^(-1)");break;case"acosh":e=t.parse("(sqrt(-1+("+u(e.args[0])+")^2))^(-1)");break;case"atanh":e=t.parse("(1-("+u(e.args[0])+")^2)^(-1)");break;case V:X=String(e.args[0]),e=t.parse("-1/(sqrt(1/("+X+")^2-1)*("+X+")^2)");break;case H:e=t.parse("-1/(("+e.args[0]+")^2-1)");break;case j:X=String(e.args[0]),e=t.parse("-1/(sqrt(1/("+X+")^2+1)*("+X+")^2)");break;case O:X=String(e.args[0]),e=t.parse("1/(sqrt(1-1/("+X+")^2)*("+X+")^2)");break;case R:X=String(e.args[0]),e=t.parse("-1/(sqrt(1-1/("+X+")^2)*("+X+")^2)");break;case T:e=t.parse("-1/(("+e.args[0]+")^2+1)");break;case"S":X=String(e.args[0]),e=t.parse("sin((pi*("+X+")^2)/2)");break;case"C":X=String(e.args[0]),e=t.parse("cos((pi*("+X+")^2)/2)");break;case"Si":X=e.args[0],e=t.parse("sin("+X+")/("+X+")");break;case"Shi":X=e.args[0],e=t.parse("sinh("+X+")/("+X+")");break;case"Ci":X=e.args[0],e=t.parse("cos("+X+")/("+X+")");break;case"Chi":X=e.args[0],e=t.parse("cosh("+X+")/("+X+")");break;case"Ei":X=e.args[0],e=t.parse("e^("+X+")/("+X+")");break;case"Li":X=e.args[0],e=t.parse("1/"+i.LOG+"("+X+")");break;case"erf":e=t.parse("(2*e^(-("+e.args[0]+")^2))/sqrt(pi)");break;case"atan2":var Z=String(e.args[0]),z=String(e.args[1]);e=t.parse("("+z+")/(("+z+")^2+("+Z+")^2)");break;case"sign":e=new a(0);break;case"sinc":e=t.parse(p("(({0})*cos({0})-sin({0}))*({0})^(-2)",e.args[0]));break;case i.LOG10:e=t.parse("1/(("+e.args[0]+")*"+i.LOG+"(10))");break;default:e=t.symfunction("diff",[e,c])}else if(h===y||h===o&&s(e.power)){var $;$=h===y?e.value:h===o&&e.contains(k)?e.fname+l(u(e.args[0])):e.value+l(u(e.args[0])),t.multiply(t.parse(S+l($)),e.power.clone()),r=W.diff(t.multiply(t.parse(S+l($)),e.power.clone()),k),e=t.multiply(e,r)}else if(h!==o||e.power.equals(1)){if(h===d||h===v){var K=e.clone(),ee=new a(0);for(var te in e.symbols)ee=t.add(ee,W.diff(e.symbols[te].clone(),k));e=t.multiply(Q(K),ee)}}else(r=e.clone()).toLinear(),r.toUnitMultiplier(),e=t.multiply(Q(e.clone()),Y(r))}return e.updateHash(),e}function J(e,n,r){return t.multiply(e,t.parse(n+l(r||u(e.args[0]))))}},integration:{u_substitution:function(n,r){function i(e,n,i){var s=W.diff(n,r),o=i?i(e,n):t.divide(e.clone(),s);return o.contains(r,!0)?null:o}function s(e,n){var r=W.integrate(t.symfunction(e,[new a(h)]),h,0);return(r=r.sub(new a(h),n)).updateHash(),r}var u,l=n[0].clone(),c=n[1].clone(),p=l.group,f=c.group,h="__u__";if(p===o&&f!==o){if(u=i(c,(m=l.args[0]).clone()))return t.multiply(u,s(l.fname,m));if(u=i(c,l))return W.integration.poly_integrate(l)}else if(f===o&&p!==o){var m;if(u=i(l,(m=c.args[0]).clone()))return t.multiply(u,s(c.fname,m))}else if(p===o&&f===o){if(u=i(l.clone(),c.clone()))return t.multiply(W.integration.poly_integrate(c),u);if(u=i(c.clone(),l.clone()))return t.multiply(W.integration.poly_integrate(c),u)}else{if(p===y&&f!==y){if(!(u=i(c,(M=l.power).clone()))){var g=W.integration.decompose_arg(M.clone(),r),v=W.diff(g[2].clone(),r),d=W.integration.decompose_arg(v.clone(),r);if(t.multiply(g[1],d[1]).power.equals(c.power)){var w=t.divide(g[0].clone(),d[0].clone()),b=t.multiply(w.clone(),t.pow(new a(l.value),t.multiply(g[0],new a(h))));return b=t.multiply(b,new a(h)),W.integration.by_parts(b,h,0,{}).sub(h,g[1].clone())}}var S=W.integrate(l.sub(M.clone(),new a(h)),h,0);return t.multiply(S.sub(new a(h),M),u)}var M;if(f===y&&p!==y)return u=i(l,(M=c.power).clone()),S=W.integrate(c.sub(M,new a(h)),h,0),t.multiply(S.sub(new a(h),M),u);if(l.isComposite()||c.isComposite()){var N=function(n,i){var s=W.diff(i,r),o=e.Algebra.Factor.factor(n),a=e.Algebra.Factor.factor(s);return t.divide(o,a)},E=l.isComposite()?l.clone().toLinear():l.clone(),x=c.isComposite()?c.clone().toLinear():c.clone();if(u=i(E.clone(),x.clone(),N))return t.multiply(W.integration.poly_integrate(c),u);if(u=i(x.clone(),E.clone(),N))return t.multiply(W.integration.poly_integrate(l),u)}}},poly_integrate:function(e){var n=e.power.toString(),r=e.multiplier.toDecimal(),i=e.toUnitMultiplier().toLinear();return-1===Number(n)?t.multiply(new a(r),t.symfunction(S,[i])):t.parse(p("({0})*({1})^(({2})+1)/(({2})+1)",r,i,n))},stop:function(t){throw t=t||"Unable to compute integral!",e.Utils.warn(t),new X(t)},partial_fraction:function(n,r,i,o){var u,l;return s(r)||(r=t.parse(r)),u=new a(0),(l=e.Algebra.PartFrac.partfrac(n,r)).group===w&&l.isLinear()?(l.each((function(e){e.isLinear()||W.integration.stop()})),l.each((function(e){u=t.add(u,W.integrate(e,r,i,o))}))):u=t.add(u,W.integrate(l,r,i,o)),u},get_udv:function(n){var r=[[],[],[],[],[]],i=function(t){var n=t.group;if(n===o){var i=t.fname;e.Utils.in_trig(i)||e.Utils.in_htrig(i)?r[3].push(t):e.Utils.in_inverse_trig(i)?r[1].push(t):i===S?r[0].push(t):W.integration.stop()}else n===g||t.isComposite()&&t.isLinear()||n===w&&t.isLinear()?r[2].push(t):n===y||t.isComposite()&&!t.isLinear()?r[4].push(t):W.integration.stop()};n.group===w?n.each((function(e){i(a.unwrapSQRT(e,!0))})):i(n);for(var s,u=new a(1),l=0;l<5;l++){var c,p=r[l],f=p.length;if(f>0){if(f>1){c=new a(1);for(var h=0;h<f;h++)c=t.multiply(c,p[h].clone())}else c=p[0].clone();s?u=t.multiply(u,c):(s=c).multiplier=s.multiplier.multiply(n.multiplier)}}return[s,u]},trig_sub:function(n,r,i,s,o,a){(o=o||W.integration.decompose_arg(n.clone().toLinear(),r))[3],o[2];var u=o[0],c=o[1];if(c.power.equals(2)&&u.greaterThan(0)){var p=e.Utils.getU(n),f=t.parse(q+l(p)),h=t.parse(A+l(p)+"^2"),m=t.multiply(n.sub(c,f),h),g=W.integrate(m,p,i,s).sub(f,c);return e.Utils.clearU(f),g}},by_parts:function(n,r,i,s){var o,u,l,c,p,f,h,m,g,v,d,w;if(s.previous=s.previous||[],u=(o=W.integration.get_udv(n))[0],l=o[1],d=(c=a.unwrapSQRT(t.expand(W.diff(u.clone(),r)),!0)).clone().stripVar(r),c=t.divide(c,d.clone()),p=W.integrate(l.clone(),r,i||0),w=(f=t.multiply(p.clone(),c)).toString(),-1!==s.previous.indexOf(w)&&e.Utils.in_trig(u.fname)&&l.isE())return s.is_cyclic=!0,new a(1);if(s.previous.push(w),h=t.multiply(u,p),v=f.multiplier.clone(),f.toUnitMultiplier(),(g=t.multiply(W.integrate(f.clone(),r,i,s),d)).multiplier=g.multiplier.multiply(v),m=t.subtract(h,g),s.is_cyclic&&(s.previous.pop(),0===s.previous.length)){m=t.expand(m);var y=new a(0);m.each((function(e){e.contains(r)||(y=t.add(y,e.clone()))})),m=t.divide(t.subtract(m,y.clone()),t.subtract(new a(1),y))}return m},decompose_arg:e.Utils.decompose_fn},integrate:function(r,u,h,m){if(!u){var b=e.Utils.variables(r);1===b.length&&(u=b[0]),u=u||"x"}if(e.Utils.isVector(r)){var z=new e.Vector([]);return r.each((function(e){z.elements.push(W.integrate(e,u))})),z}return isNaN(u)||t.error("variable expected but received "+u),r.isConstant(!0)?t.multiply(r.clone(),t.parse(u)):(m=m||{},e.Utils.block("PARSE2NUMBER",(function(){h=h||0;var b,z=s(u)?u.toString():u,$=a.unwrapSQRT(r.clone(),!0),Q=$.group;try{if(++h>e.Settings.integration_depth&&W.integration.stop("Maximum depth reached. Exiting!"),$.contains(z,!0)){if(Q===g)b=W.integration.poly_integrate($,z,h);else if(Q===y)if($.previousGroup===o&&"sqrt"!==$.fname&&$.fname!==i.PARENTHESIS&&W.integration.stop(),$.contains(z)&&$.previousGroup!==o)$.power.contains(z)?W.integration.stop():((Qe=W.diff($.clone().toLinear(),z)).contains(z)&&W.integration.stop(),b=W.integration.poly_integrate($,z,h));else{if((se=W.diff($.power.clone(),z)).contains(z)){var J=se.stripVar(z);if((oe=t.divide(se.clone(),J.clone())).group===g&&oe.isLinear())return J.multiplier=J.multiplier.divide(new n(2)),t.parse(p("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",J,z,$.multiplier));W.integration.stop()}if($.isE())se.isLinear()?b=$:se.isE()&&se.power.group===g&&se.power.power.equals(1)?b=t.multiply(t.symfunction("Ei",[$.power.clone()]),$.power):W.integration.stop();else{var K=t.symfunction(S,[t.parse($.value)]);b=t.divide($,K)}b=t.divide(b,se)}else if($.isComposite()&&$.isLinear()){var ee=t.parse($.multiplier);$.toUnitMultiplier(),b=new a(0),$.each((function(e){b=t.add(b,W.integrate(e,z,h))})),b=t.multiply(ee,b)}else if(Q===d)if($.power.greaterThan(1)&&($=t.expand($)),$.power.equals(1))b=new a(0),$.each((function(e){b=t.add(b,W.integrate(e,z,h))}),!0);else{var te=Number($.power);ee=$.multiplier.clone(),$.toUnitMultiplier();var ne=$.clone().toLinear(),re=(Rt=W.integration.decompose_arg(ne,z))[3],ie=Rt[2],se=Rt[0],oe=Rt[1];if(-1===te&&oe.group!==v&&oe.power.equals(2)){var ae=!c(re)||re>0;if(oe.group===g&&oe.power.equals(2)&&ae){var ue=function(e){var n=new a(1);return e.each((function(e){n=t.multiply(n,"abs"===e.fname?e.args[0]:e)})),n},le=se.clone(),ce=re.clone();le=t.pow(le,new a(.5)),ce=t.pow(ce,new a(.5)),K=t.multiply(ue(ce),ue(le));var pe=t.symfunction(_,[t.divide(t.multiply(se,oe.toLinear()),K.clone())]);b=t.divide(pe,K)}else if(oe.group===g&&oe.isLinear())b=t.divide(W.integration.poly_integrate($),se);else if(oe.power.equals(4)){var fe,he,me,ge,ve,de,we=l;le=t.parse(N+we(se)+"*"+z+"^2"),ce=t.parse(N+we(2)+"*"+we(se)+"^"+we("1/4")+"*"+we(re)+"^"+we("1/4")+"*"+z),fe=t.parse(N+we(re)),Le=t.add(t.add(le.clone(),ce.clone()),fe.clone()),et=t.add(t.subtract(le,ce),fe),he=t.parse(N+we(2)+"*"+we(re)+"^"+we("3/4")),me=t.parse(N+we(re)+"*"+we(re)+"^"+we("1/4")+"*"+z),ge=t.parse("2*"+we(re)+"*"+N+we(2)+"*"+we(re)+"^"+we("1/4")),ve=t.divide(t.subtract(he.clone(),me.clone()),t.multiply(ge.clone(),et)),de=t.divide(t.add(he,me),t.multiply(ge,Le.clone())),b=t.add(W.integrate(ve,z,h,m),W.integrate(de,z,h,m))}else b=W.integration.partial_fraction($,z,h)}else if(-.5===te)if(oe.group===g&&oe.power.equals(2))if(ie.multiplier.lessThan(0)&&!re.multiplier.lessThan(0))if(se.negate(),re.isConstant()&&se.isConstant()){K=t.symfunction(N,[se.clone()]);var ye=t.symfunction(N,[t.multiply(se.clone(),re)]);b=t.divide(t.symfunction(U,[t.divide(ie.toLinear(),ye)]),K)}else{var be=t.symfunction(N,[se]),Se=t.multiply(be.clone(),oe.clone().toLinear());b=t.divide(t.symfunction(_,[t.divide(Se,t.symfunction(N,[ne.clone()]))]),be)}else W.integration.stop();else W.integration.stop();else if(.5===te&&oe.power.equals(2)&&se.greaterThan(0))W.integration.stop();else if(oe.isLinear()&&oe.group!==v)b=t.divide(W.integration.poly_integrate($),se);else{if(oe.power.equals(2)&&se.greaterThan(0)){var Me,Ne,Ee,xe,qe,Ae;Me=t.parse(N+l(se)),Ne=t.parse(N+l(re)),Ee=t.multiply(Me.clone(),Ne.clone()).invert(),xe=t.pow(re,new a($.power)),Ae=e.Utils.getU($),Pe=t.multiply(Ee,oe.clone().toLinear()),qe=t.parse(_+l(Pe));var Ce=2*(Math.abs($.power)-1),Ie=W.integrate(t.parse(x+l(Ae)+"^"+Ce));return e.Utils.clearU(Ae),t.multiply(Ie.sub(Ae,qe),xe)}if($.group===w||$.power.lessThan(0)){pe=$.clone().toLinear();var Ue=e.Algebra.Factor.factor(pe).toString()!==pe.toString();if(e.Algebra.degree(pe,t.parse(z)).equals(2)&&!Ue)try{var Le,_e,Oe;Oe=e.Algebra.sqComplete(pe,z),Pe=e.Utils.getU(pe),Le=Oe.f.sub(Oe.a,Pe),_e=t.pow(Le,t.parse($.power)),b=W.integrate(_e,Pe).sub(Pe,Oe.a)}catch(e){W.integration.stop()}else b=W.integration.partial_fraction($,z,h,m)}else b=W.integration.by_parts($,z,h,m)}b.multiplier=b.multiplier.multiply(ee)}else if(Q===o){var Re=$.args[0];ee=$.multiplier.clone(),$.toUnitMultiplier(),se=(Rt=W.integration.decompose_arg(Re,z))[0],oe=Rt[1];var Te=$.fname;if(Te===S||Te===U||Te===L||Te===_&&oe.isLinear())if(te=$.power.toString(),c(te)&&(h-=te),Re.isComposite()){var Pe=e.Utils.getU($),ke=(pe=t.pow(t.parse(S+l(Pe)),new a(te)),W.diff(Re,z)),De=t.multiply(pe,ke);Ie=W.integrate(De,Pe,h,m),b=t.multiply(t.parse(ee),Ie.sub(Pe,Re))}else b=t.multiply(t.parse(ee),W.integration.by_parts($,z,h,m));else{if(Te===q&&$.power.lessThan(0))return(Xt=$.clone()).power.negate(),Xt.fname=I,t.multiply(t.parse(ee),W.integrate(Xt,z,h));if(!se.contains(z,!0)&&$.isLinear())if(Te===M)if((oe=t.divide(Re.clone(),se.clone())).group!==g||oe.power.lessThan(0))W.integration.stop();else if(e.Utils.even(oe.power))b=W.integrate(Re,z,h);else{var Fe=W.integrate(oe,z,h);Fe.power=Fe.power.subtract(new n(1)),b=t.multiply(t.multiply(t.symfunction(M,[oe.toLinear()]),Fe),se)}else{var Be=$.args[0].group,Ge=W.integration.decompose_arg(Re,z);switch((Be!==d&&Be!==g&&Be!==w||!Ge[1].power.equals(1)||Re.hasFunc())&&W.integration.stop(),Te){case x:b=t.symfunction(E,[Re]);break;case E:(b=t.symfunction(x,[Re])).negate();break;case q:b=t.parse(p(i.LOG+"(sec({0}))",Re));break;case A:b=t.parse(p(i.LOG+"(tan({0})+sec({0}))",Re));break;case C:b=t.parse(p("-"+i.LOG+"(csc({0})+cot({0}))",Re));break;case I:b=t.parse(p(i.LOG+"(sin({0}))",Re));break;case P:b=t.symfunction(k,[Re]);break;case k:b=t.symfunction(P,[Re]);break;case D:b=t.parse(p(i.LOG+"(cosh({0}))",Re));break;case O:case R:case T:case V:case j:case H:b=W.integration.by_parts($,z,h,m);break;case B:b=t.parse(p("atan(sinh({0}))",Re));break;case F:b=t.parse(p(i.LOG+"(tanh(({0})/2))",Re));break;case G:b=t.parse(p(i.LOG+"(sinh({0}))",Re));break;case"exp":b=W.integrate(t.parse(p("e^({0})",Re)),z,h);break;case"S":Re=$.args[0].clone();var Ve=(Bt=W.integration.decompose_arg(Re,z))[1],je=Bt[0],He=Bt[3];b=t.parse(p("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",je,He,oe));break;case"C":Re=$.args[0].clone(),Ve=(Bt=W.integration.decompose_arg(Re,z))[1],je=Bt[0],He=Bt[3],b=t.parse(p("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",je,He,Ve));break;case"erf":Re=$.args[0].clone(),Ve=(Bt=W.integration.decompose_arg(Re,z))[1],je=Bt[0],b=t.parse(p("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",je,Ve,Re));break;case"sign":b=t.multiply($.clone(),Re.clone());break;default:W.integration.stop()}b=t.divide(b,se)}else if(oe.isLinear())if(Te===x||Te===E)if((te=Number($.power))<0)$.fname=Te===E?C:A,$.invert().updateHash(),b=W.integrate($,z,h);else{Re=$.args[0];var Xe=$.clone(),Ze=$.clone(),ze=new a((te-1)/te),$e=t.multiply(se.clone(),new a(te)).invert();Xe.power=Xe.power.subtract(new n(1)),Ze.power=Ze.power.subtract(new n(2));var Qe=t.symfunction(Te===x?E:x,[Re.clone()]);Te===E&&Qe.negate(),b=t.add(t.multiply(t.multiply($e,Xe),Qe),t.multiply(ze,W.integrate(t.parse(Ze),z,h)))}else if(Te===q||Te===I){if($.args[0].isLinear(z)){Ce=$.power.subtract(new n(1)).toString();var Ye=$.clone().toUnitMultiplier(),We=t.parse(p((Te===I?"-":"")+"1/({2}*{0})*{3}({1})^({0})",Ce,Re,se,Te));Ye.power=Ye.power.subtract(new n(2)),Ye.power.equals(0)&&(Ye=t.parse(Ye)),b=t.subtract(We,W.integrate(Ye,z,h))}}else if(Te===A||Te===C){var Je=$.power.subtract(new n(1)).toString(),Ke=$.power.subtract(new n(2)).toString(),et=Te===A?q:I,tt=(Ye=$.clone().toUnitMultiplier(),p((Te===C?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",se,Je,Ke,Re,Te,et));We=t.parse(tt),Ye.power=Ye.power.subtract(new n(2)),Ye.power.equals(0)&&(Ye=t.parse(Ye)),b=t.add(We,t.multiply(new a(Ke/Je),W.integrate(Ye,z,h)))}else Te!==k&&Te!==P||!$.power.equals(2)?W.integration.stop():b=W.integrate($.fnTransform(),z,h);else W.integration.stop();b.multiplier=b.multiplier.multiply(ee)}}else if(Q===v)b=W.integration.partial_fraction($,z,h);else if(Q===w){$.getDenom().group===g&&($=t.expand($));var nt=$.stripVar(z),rt=t.divide($.clone(),nt.clone());if(nt.contains(z)&&(rt=t.multiply(rt,nt),nt=new a(1)),rt.group!==w){if(rt.equals(1))return W.integrate(t.expand($),z,h);rt.clone().toLinear().isPoly(!0)&&e.Utils.variables(rt).length>1&&(rt=e.Algebra.Factor.factor(rt)),b=W.integrate(rt,z,h)}else{var it=rt.collectSymbols().sort((function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group})).map((function(e){var n=a.unwrapSQRT(e,!0);return"exp"===n.fname?t.parse(p("({1})*e^({0})",n.args[0],n.multiplier)):n})),st=it.length;if($.power<0){if(2===st)return W.integrate(t.expand($),z,h,m)}else if(2===st){try{b=W.integration.u_substitution(it,z)}catch(e){}if(!b){var ot=it[0].group,at=it[1].group,ut=it[0],lt=it[1],ct=ut.fname,pt=lt.fname;if($=t.multiply(ut.clone(),lt.clone()),ot===o&&at===o)if(ct===S||pt===S)b=W.integration.by_parts($.clone(),z,h,m);else{it.sort((function(e,t){return t.fname>e.fname}));var ft=ut.args[0];(!ft.isLinear()||ft.group!==d&&ft.group!==w&&ft.group!==g)&&W.integration.stop(),oe=(Rt=W.integration.decompose_arg(ft,z))[1],se=Rt[0],oe.isLinear()||W.integration.stop();var ht=lt.args[0];if(ft.equals(ht))if(ct===E&&pt===x||ct===x&&pt===E)if(ut.power.lessThan(0)&&W.integration.stop(),ct===E&&ut.power.add(lt.power).equals(0))ut.fname=q,ut.updateHash(),b=W.integrate(ut,z,h);else if(f(ut.power)&&pt===x&&lt.power.lessThan(0)){Ce=Number(ut.power)/2;var mt=t.parse(p("(1-cos({0})^2)^({1})",ut.args[0],Ce));b=W.integrate(t.expand(t.multiply(mt,lt.clone())),z,h,m)}else if(f(ut.power)&&pt===E&&lt.power.lessThan(0))Ce=Number(ut.power)/2,mt=t.parse(p("(1-sin({0})^2)^({1})",ut.args[0],Ce)),b=W.integrate(t.expand(t.multiply(mt,lt.clone())),z,h,m);else{var gt=e.Utils.even(ut.power),vt=e.Utils.even(lt.power);if(b=new a(0),gt&&vt){var dt=function(e){var n,r=e.power/2;return n=e.fname===x?"((1/2)+(cos(2*("+e.args[0]+"))/2))^"+r:"((1/2)-(cos(2*("+e.args[0]+"))/2))^"+r,t.parse(n)};return se=dt(ut),re=dt(lt),Qe=t.multiply(se,re),(Xt=t.expand(Qe)).each((function(e){b=t.add(b,W.integrate(e,z,h))})),t.multiply(b,nt)}gt?(Pe=ut,Ye=lt):(Pe=lt,Ye=ut);var wt=Pe.fname===x?-1:1,yt=((Ce=Ye.power)-1)/2,bt=t.parse("(1-"+Pe.fname+e.Utils.inBrackets(ft)+"^2)^"+yt);(Xt=t.expand(t.multiply(new a(wt),t.multiply(Pe.clone(),bt)))).each((function(e){b=t.add(b,W.integration.poly_integrate(e.clone()))}))}else if(ct===A&&pt===q&&oe.isLinear()&&lt.isLinear())b=t.parse(p("sec({0})^({1})/({1})",ut.args[0],ut.power));else if(ct===q&&pt===A&&oe.isLinear())ut.isLinear()&&lt.isLinear()?b=t.divide(t.symfunction(A,[ft.clone()]),se):f(ut.power)?(te=Number(ut.power)/2,Qe=t.parse(p("(sec({0})^2-1)^({1})",ut.args[0],te)),b=W.integrate(t.expand(t.multiply(Qe,lt)),z,h)):W.integration.stop();else if(ct===A&&pt===x)ut.fname=x,ut.invert().updateHash(),b=W.integrate(t.multiply(ut,lt),z,h);else if(ct===E&&pt===C)lt.fname=E,lt.invert().updateHash(),b=W.integrate(t.multiply(ut,lt),z,h);else if(ct!==q||pt!==x&&pt!==E||!lt.power.lessThan(0))Qe=t.multiply(ut.fnTransform(),lt.fnTransform()),b=W.integrate(t.expand(Qe),z,h);else{Qe=t.multiply(ut.fnTransform(),lt);b=W.integrate(t.expand(Qe),z,h)}else if(ct!==E&&ct!==x||pt!==E&&pt!==x)W.integration.stop();else if(ut.isLinear()&&lt.isLinear())if(ut.args[0].isLinear()&&lt.args[0].isLinear())pt===E?(ie=ut.args[0],Gt=lt.args[0]):(Gt=ut.args[0],ie=lt.args[0]),pe=t.parse(p("(sin(({1})+({0}))+sin(({1})-({0})))/2",ie.toString(),Gt.toString())),b=W.integrate(pe,z,h);else{var St=Y(it);b=W.integrate(t.expand(St),z,h)}else St=new a(1),it.map((function(e){var n=e.fnTransform();St=t.multiply(St,n)})),Qe=t.expand(St),(b=W.integrate(Qe,z,h)).hasIntegral()&&(b=W.integrate(Y(St.collectSymbols()),z,h))}else if(ot===o&&at===g){var Mt=ut.isLinear();ut.fname===x&&Mt&&lt.power.equals(-1)?b=t.symfunction("Ci",[ut.args[0]]):ut.fname===x&&lt.power.equals(-1)?b=W.integrate(t.multiply(ut.fnTransform(),lt.clone()),z,h):ut.fname===k&&Mt&&lt.power.equals(-1)?b=t.symfunction("Chi",[ut.args[0]]):ut.fname===k&&lt.power.equals(-1)?b=W.integrate(t.multiply(ut.fnTransform(),lt.clone()),z,h):ut.fname===E&&Mt&&lt.power.equals(-1)?b=t.symfunction("Si",[ut.args[0]]):ut.fname===E&&lt.power.equals(-1)?b=W.integrate(t.multiply(ut.fnTransform(),lt.clone()),z,h):ut.fname===P&&Mt&&lt.power.equals(-1)?b=t.symfunction("Shi",[ut.args[0]]):ut.fname===P&&lt.power.equals(-1)?b=W.integrate(t.multiply(ut.fnTransform(),lt.clone()),z,h):ut.fname===S&&lt.power.equals(-1)?b=W.integration.poly_integrate(ut,z,h):"erf"===ut.fname?lt.power.equals(1)&&(je=(Bt=W.integration.decompose_arg(ut.args[0],z))[0],Ve=Bt[1],Re=ut.args[0].toString(),b=t.parse(p("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",je,Ve,Re))):b=W.integration.by_parts($,z,h,m)}else if(ot===y&&at===g)oe=ct===S?W.integration.decompose_arg(ut.args[0],z)[1]:null,b=ut.isE()&&(ut.power.group===g||ut.power.group===w)&&lt.power.equals(-1)?t.symfunction("Ei",[ut.power.clone()]):ct===S&&oe.value===lt.value?W.integration.poly_integrate(ut,z,h):W.integration.by_parts($,z,h,m);else if(ot===v&&at===g){if(lt.value===ut.value&&ut.power.equals(-1)){var Nt=Math.min.apply(null,e.Utils.keys(ut.symbols)),Et=Math.min(Nt,lt.power),xt=lt.clone();xt.power=new n(Et),lt=t.divide(lt,xt.clone()),Qe=new a(0),ut.each((function(e){Qe=t.add(Qe,t.divide(e.clone(),xt.clone()))})),Qe.multiplier=ut.multiplier,$=t.divide(lt,Qe)}else $=t.expand($);b=W.integration.partial_fraction($,z,h)}else if(ot===d&&at===g){pe=ut.clone().toLinear();var qt=e.Algebra.degree(pe,t.parse(z)).equals(1);if(ut.power.equals(-.5)){se=(Rt=W.integration.decompose_arg(ut.clone().toLinear(),z))[0].negate(),oe=Rt[1],re=Rt[3];var At=Number(ut.power),Ct=Number(lt.power);if(c(Ct)&&e.Utils.even(Ct)&&oe.power.equals(2)){var It=t.divide(t.multiply(t.pow(re.clone(),new a(2)),t.symfunction(N,[t.divide(re.clone(),se.clone())])),t.pow(se.clone(),new a(2)));It=t.multiply(It,t.symfunction(N,[re]).invert());var Ut=t.parse("sin(u)");Ut.power=Ut.power.multiply(lt.power),Ie=W.integrate(Ut,"u",h);var Lt=t.parse(U+"("+N+"("+se+"/"+re+")*"+z+")");b=t.multiply(It,Ie.sub(new a("u"),Lt))}else if(-.5===At){var _t=function(e,n){var r=t.parse(W.integrate(e,z,h,m).sub(z,p(n,z)));if(!r.hasIntegral())return r};-1===Ct?b=_t(t.expand(t.expand(t.pow(t.multiply(ut.invert(),lt.invert()),new a(2)))).invert(),"sqrt(1-1/({0})^2)"):-2===Ct&&(b=_t(t.sqrt(t.expand(t.divide(t.pow($,new a(2)).invert(),t.pow(new a(z),new a(2))).negate())).invert(),"sqrt(1-1/({0})^2)"))}}else if(ut.power.equals(-1)&&lt.isLinear()&&qt)b=W.integration.partial_fraction($,z,h);else if(!ut.power.lessThan(0)&&c(ut.power)){var Ot=t.expand(ut);b=new a(0),Ot.each((function(e){e.group===v?e.each((function(e){b=t.add(b,W.integrate(t.multiply(lt.clone(),e),z,h))})):b=t.add(b,W.integrate(t.multiply(lt.clone(),e),z,h))}))}else if(ut.power.lessThan(-2))b=W.integration.by_parts($,z,h,m);else if(ut.power.lessThan(0)&&lt.power.greaterThan(1)){var Rt;if(se=(Rt=W.integration.decompose_arg(ut.clone().toLinear(),z))[0].negate(),oe=Rt[1],re=Rt[3],ne=ut.clone().toLinear(),oe.group!==v&&oe.isLinear()){te=Number(lt.power),Pe=new a(ke="_u_");var Tt=t.expand(t.divide(t.pow(t.subtract(Pe.clone(),re.clone()),new a(te)),Pe.clone())),Pt={};Pt[ke]=ne;var kt=t.parse(Tt,Pt);b=W.integrate(kt,z,0)}else if(lt.power.greaterThan(oe.power)||lt.power.equals(oe.power)){var Dt=new e.Algebra.Classes.Factors;ut=e.Algebra.Factor.coeffFactor(ut.invert(),Dt);var Ft=e.Algebra.divide(lt,ut);Ft.group!==w?(b=new a(0),Ft.each((function(e){b=t.add(b,W.integrate(e,z,h))})),Dt.each((function(e){b=t.divide(b,e)})),b=t.expand(b)):b=W.integration.by_parts($,z,h,m)}else b=W.integration.partial_fraction($,z,h)}else if(ut.power.den.equals(2)){se=(Bt=W.integration.decompose_arg(ut.clone().toLinear(),z))[3],oe=Bt[1],re=Bt[0];var Bt,Gt=Bt[2];if(oe.power.equals(2)&&re.lessThan(0)){se.equals(1)||(nt=t.multiply(nt,t.pow(se,new a(2)))),Pe=z,It=t.divide(t.pow(re.clone().negate(),new a(.5)),t.pow(se,new a(.5))),ke=t.symfunction(x,[new a(Pe)]);var Vt=t.pow(t.symfunction(x,[new a(Pe)]),new a(ut.power.num)),jt=t.pow(t.symfunction(E,[new a(Pe)]),new a(lt.power)),Ht=t.multiply(t.multiply(Vt,ke),jt);Ie=W.integrate(Ht,Pe,h),b=Ie.sub(Pe,t.symfunction(U,[t.multiply(new a(z),It)]))}else b=W.integration.partial_fraction($,z,h,m)}else qt&&(b=W.integration.partial_fraction($,z,h))}else if(ut.isComposite()&&lt.isComposite())if(b=new a(0),ut.power.greaterThan(0)&&lt.power.greaterThan(0)){var Xt;(Xt=t.expand($)).each((function(e){b=t.add(b,W.integrate(e,z,h))}),!0)}else At=Number(ut.power),Ct=Number(lt.power),At<0&&Ct>0&&(Qe=ut,ut=lt,lt=Qe),-1===At&&-1===Ct?b=W.integration.partial_fraction($,z):ut.each((function(e){var n=t.multiply(e,lt.clone()),r=W.integrate(n,z,h);b=t.add(b,r)}));else if(ot===d&&it[0].power.greaterThan(0))ut=t.expand(ut),b=new a(0),ut.each((function(e){b=t.add(b,W.integrate(t.multiply(e,lt.clone()),z,h))}),!0);else if(ot===o&&at===y&&e.Utils.in_htrig(ut.fname))ut=ut.fnTransform(),b=W.integrate(t.expand(t.multiply(ut,lt)),z,h);else if(ot===o&&at===d||at===o&&ot===d){var Zt,zt,$t;if(at===o&&ot===d&&(Qe=ut,ut=lt,lt=Qe),ke=a.unwrapSQRT(W.diff(ut.clone(),z),!0),Zt=a.unwrapSQRT(lt,!0),ke.power.equals(Zt.power)){if(te=new a(lt.power),zt=ke.clone().toLinear(),$t=lt.clone().toLinear(),(ze=e.Algebra.divide(zt.toLinear(),$t)).isConstant()){var Qt=t.pow(ze,te.negate());b=t.multiply(Qt,W.integration.poly_integrate(ut.clone()))}}else b=W.integration.by_parts($,z,h,m)}else{var Yt=ut.clone().toLinear(),Wt=lt.clone().toLinear();b=ot===y&&at===y&&ut.power.contains(z)&&lt.power.contains(z)&&!Yt.contains(z)&&!Wt.contains(z)?t.parse(p("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",Yt.toString(),Wt.toString(),ut.power.multiplier.toString(),lt.power.multiplier.toString(),z)):W.integration.by_parts($,z,h,m)}}}else if(3===st&&(it[2].group===g&&it[2].power.lessThan(2)||it[0].group===d)){var Jt=it[0];Jt.group===d?(Jt.power.greaterThan(1)&&(Jt=t.expand(Jt)),Ye=t.multiply(it[1],it[2]),b=new a(0),Jt.each((function(e){var n=t.multiply(e,Ye.clone()),r=W.integrate(n,z,h);b=t.add(b,r)}),!0)):b=W.integration.by_parts($,z,h,m)}else if(Z(it)){Qe=new a(1);var Kt=0;for(st=it.length;Kt<st;Kt++)Qe=t.multiply(Qe,it[Kt].fnTransform());Qe=t.expand(Qe),b=W.integrate(Qe,z,h)}else St=Y(it),b=W.integrate(t.expand(St),z,h)}b=t.multiply(b,nt)}}else b=t.multiply($.clone(),t.parse(z));if(b)return b}catch(t){if(!(t instanceof X||t instanceof e.exceptions.DivisionByZero))throw t}return t.symfunction("integrate",[r,u])}),!1))},defint:function(n,r,i,s){s=s||"x";var o,u,l=function(e,n,r){try{return t.parse(e,n)}catch(t){return W.Limit.limit(e,s,r)}},c=e.Utils.variables(n),p=n.hasTrig();if(1!==c.length||s||(s=c[0]),p||(u=W.integrate(n,s)),p||u.hasIntegral())if(1===c.length&&r.isConstant()&&i.isConstant()){var f=e.Utils.build(n);o=new a(e.Math2.num_integrate(f,Number(r),Number(i)))}else o=t.symfunction("defint",[n,r,i,s]);else{var h,m,g={},v={};g[s]=i,v[s]=r,h=l(u,g,i),m=l(u,v,r),o=t.subtract(h,m)}return o},Limit:{interval:function(e,n){return t.parse(p("[{0}, {1}]",e,n))},diverges:function(){return W.Limit.interval("-Infinity","Infinity")},divide:function(n,r,s,o,u){if(!(u++>i.max_lim_depth)){n.clone();var l=r.clone();if(r.fname===M){var c=n.sign(),p=o.sign();if(o.isInfinity)return t.multiply(new a(c),new a(p));if(o.equals(0)){var f=t.parse(n.multiplier),m=t.parse(r.multiplier);return t.divide(t.multiply(f,W.Limit.interval("-1","1")),m)}W.Limit.diverges()}var g=function(t){if(e.Utils.isVector(t)){for(var n=0;n<t.elements.length;n++)if(!t.elements[n].isInfinity)return!1;return!0}return t.isInfinity},v=function(t,n){return!e.Utils.isVector(t)&&t.equals(n)};do{var d=h(W.Limit.limit(n.clone(),s,o,u)),w=h(W.Limit.limit(r.clone(),s,o,u)),y=g(d)&&g(w)||v(d,0)&&v(w,0);if(y){var b=W.diff(n.clone(),s),S=W.diff(r.clone(),s),N=t.expand(t.divide(b,S));n=N.getNum(),r=N.getDenom()}}while(y);var E=w.equals(0),x=Number(l.power);return o.isConstant(!0)&&E?a.infinity(e.Utils.even(x)&&d.lessThan(0)?-1:void 0):E?W.Limit.diverges():t.divide(d,w)}},rewriteToLog:function(e){var n=e.power.clone();return e.toLinear(),t.pow(new a("e"),t.multiply(n,t.symfunction(i.LOG+"",[e])))},getSubbed:function(e,t,n){var r;e.group===y&&(e=W.rewriteToLog(e));try{r=e.sub(t,n)}catch(t){r=e}return r},isInterval:function(t){return e.Utils.isVector(t)},isConvergent:function(e){return!(W.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction("limit"))},limit:function(n,r,s,u){if(n.isLinear()&&n.isComposite()){var l=new a(0);return n.each((function(e){l=t.add(l,W.Limit.limit(e,r,s,u))}),!0),l}if(n=e.Algebra.Simplify.simplify(n),u=u||1,!(u++>i.max_lim_depth)){var c=t.parse(n.multiplier);n.toUnitMultiplier();try{var f;if(n.isConstant(!0))f=n;else{var m={};m[r]=s;try{var v=t.parse(n.sub(r,s),m);(v.isConstant(!0)||v.isInfinity)&&(f=v)}catch(e){}if(!f){var d=n.getNum(),b=n.getDenom();if(b.isConstant(!0)){if(n.group===y){var M=n.clone().toLinear(),N=(n.power.clone(),M.getNum()),A=M.getDenom(),C=e.Utils.decompose_fn(A,r,!0);if(N.group===g&&N.multiplier.isOne()&&C.ax.group===g&&C.b.isConstant(!0)&&C.a.isOne()&&C.b.isConstant(!0))f=t.parse(p("(1/e^({0}))",C.b));else{var I=W.Limit.rewriteToLog(n.clone()),U=I.power.clone(),L=I.clone().toLinear(),_=W.Limit.limit(L,r,s,u),O=W.Limit.limit(U,r,s,u);f=t.pow(_,O)}}else if(n.group===o&&1===n.args.length){var R,T=W.Limit.limit(n.args[0],r,s,u);if(e.Utils.isVector(T))return f=T.map((function(e){return n.clone().args[0]=e,W.Limit.limit(t.symfunction(n.fname,[e]),r,s,u)})),t.multiply(c,f);if(T.isConstant(!0)){var P=t.symfunction(n.fname,[T]);try{h(P),R=!0}catch(e){R=!1}}if(R)f=P;else if(W.Limit.isConvergent(T))if(n.fname===S)switch(T.toString()){case"0":f=a.infinity().negate();break;case"Infinity":case"-Infinity":f=a.infinity()}else if(n.fname!==x&&n.fname!==E||!s.isInfinity){if(n.fname===q){var k=n.args[0],D=k.getNum(),F=k.getDenom(),B=D.toUnitMultiplier();(s.isInfinity||B.equals("pi")&&F.equals(2))&&(f=divergent())}else if(n.fname===i.FACTORIAL&&T.isInfinity)return a.infinity()}else f=W.Limit.interval(-1,1)}else if(n.group===g){if(n.power>0)return t.parse(n,m);f=e.Utils.even(n.power)?a.infinity():W.Limit.diverges()}else if(n.group===w){var G,V;for(M=(X=n.collectSymbols().sort((function(e,t){return e.group-t.group}))).pop(),G=h(W.Limit.limit(M,r,s,u));X.length;){var j=X.pop();V=h(W.Limit.limit(j,r,s,u)),G.isInfinity||!W.Limit.isConvergent(G)&&V.equals(0)||G.equals(0)&&W.Limit.isConvergent(V)?(j.containsFunction(S)&&(j=[M,M=j][0]),j.invert(),G=G.isInfinity&&V.isInfinity?a.infinity():W.Limit.divide(M,j,r,s,u)):(G=t.multiply(G,V),M=t.multiply(M,j))}f=G}else if(n.isComposite()){var H;n.isLinear()||(n=t.expand(n)),f=new a(0);for(var X=n.collectSymbols().sort((function(e,t){return t.group-e.group})),Z=[],z=new a(0),$=0,Q=X.length;$<Q;$++)(Y=X[$].clone()).group===o||Y.group===w&&Y.hasFunc()?z=t.add(z,Y):Z.push(Y);for(Z.unshift(z),1!==Z.length&&(X=Z),$=0,Q=X.length;$<Q;$++){var Y=X[$];try{H=W.Limit.limit(Y,r,s,u)}catch(e){H=W.Limit.diverges()}try{f=t.add(f,H)}catch(e){if(u++>i.max_lim_depth)return;f=W.Limit.limit(W.diff(n,r),r,s,u)}}}}else f=W.Limit.divide(d,b,r,s,u)}}f||(f=t.symfunction("limit",[n,r,s]))}catch(e){f=t.symfunction("limit",[n,r,s])}return t.multiply(c,f)}}},Fresnel:{S:function(e){return e.isConstant(!0)?W.defint(t.parse("sin(pi*x^2/2)"),a(0),e,"x"):t.symfunction("S",arguments)},C:function(e){return e.isConstant(!0)?W.defint(t.parse("cos(pi*x^2/2)"),a(0),e,"x"):t.symfunction("C",arguments)}}};r.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return W.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return W.sum}},{name:"product",visible:!0,numargs:4,build:function(){return W.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return W.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return W.defint}},{name:"S",visible:!0,numargs:1,build:function(){return W.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return W.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return W.Limit.limit}}]),r.updateAPI()}()},986:function(e,t,r){var i;e=r.nmd(e);var s,o=function(e){"use strict";var t=new Be,n=e.bigInt,r=e.bigDec;r.set({precision:250});var i={},s=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],a={},u={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{π:"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};function l(e){function t(t){this.name=e,this.message=void 0!==t?t:"",(t=new Error(this.message)).name=this.name,this.stack=t.stack}return t.prototype=Object.create(Error.prototype),t}function c(e){return-1!==O.indexOf(e)}function p(e){return e instanceof Pe}function f(e){return(e=j(e)?e.multiplier:e).lessThan(0)}function h(e){return Math.min.apply(void 0,e)}function m(e,t){if(Y(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}function g(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n}function v(e){for(var t=s[s.length-1]||2;t<e;t++)B(t)&&s.push(t)}!function(){u.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var r=n(e).pow(t);u.CACHE.roots[r+"-"+t]=e}}();var d=i.N=1,w=i.P=2,y=i.S=3,b=i.EX=4,S=i.FN=5,M=i.PL=6,N=i.CB=7,E=i.CP=8,x=u.CONST_HASH="#",q=u.PARENTHESIS,A=u.SQRT,C=u.ABS,I=u.FACTORIAL,U=u.DOUBLEFACTORIAL,L=[],_={},O=[],R=[],T=function(e,t){if(!u.suppress_errors)throw new(t||Error)(e)},P=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},k=function(e){R.push(e),u.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},D=function(e,t){if(t=t||"variable",-1===u.ALLOW_CHARS.indexOf(e)&&!u.VALIDATION_REGEX.test(e))throw new Ce(e+" is not a valid "+t+" name")},F=function(e){var t,n,r,i=Math.sign(e);return e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)&&(r=(r=(n=String(e).toLowerCase().split("e")).pop())/(t=Math.abs(r)),n=n[0].split("."),e=-1==r?(t-=n[0].length)<0?n[0].slice(0,t)+"."+n[0].slice(t)+(2===n.length?n[1]:""):"0."+new Array(t+1).join("0")+n.join(""):((r=n[1])&&(t-=r.length),t<0?n[0]+r.slice(0,t)+"."+r.slice(t):n.join("")+new Array(t+1).join("0"))),i<0?"-"+e:e},B=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},G=function(e){return/^\d+\.?\d*$/.test(e)},V=function(e){return j(e)?V(e.multiplier.toDecimal()):e%1!=0},j=function(e){return e instanceof Fe},H=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},j(e)){var r=e.group,i=e.previousGroup;if(r===b&&H(e.power,t,n),r===E||r===N||i===E||i===N)for(var s in e.symbols)H(e.symbols[s],t,n);else if(r===y||i===y)"e"!==e.value&&"pi"!==e.value&&e.value!==u.IMAGINARY&&n.add(e.value);else if(r===M||i===M)H(ne(e.symbols),t,n);else if(r===b)isNaN(e.value)||n.add(e.value),H(e.power,t,n);else if(r===S&&!t)for(var o=0;o<e.args.length;o++)H(e.args[o],t,n)}return n.c.sort()},X=function(e,n){function r(e,r){n[e]||(n[e]=new Fe(0)),n[e]=t.add(n[e],r.clone())}return e=t.expand(e),n=n||{},e.each((function(e){if(e.isConstant("all"))r("constants",e);else if(e.group===y)r(e.value,e);else if(e.group!==S||e.fname!==C&&""!==e.fname){if(e.group===b||e.group===S)throw new Error("Unable to separate. Term cannot be a function!");r(H(e).join(" "),e)}else X(e.args[0])})),n},Z=function(e){return e instanceof je},z=function(e){return e instanceof He},$=function(e){return e instanceof Xe},Q=function(e){return e.group===d||e.group===w},Y=function(e){return Array.isArray(e)},W=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},J=function(e){return e&&String(e)},K=function(e){return"("+e+")"},ee=function(){var e=[].slice.call(arguments);return e.shift().replace(/{(\d+)}/g,(function(t,n){return"function"==typeof(n=e[n])?n():n}))},te=Object.keys,ne=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},re=function(e,n,r){return D(e),c(e)?null:(n=n||H(t.parse(r)),t.functions[e]=[t.mapped_function,n.length,{name:e,params:n,body:r}],r)},ie=function(e,n,r){var i,s;return n=String(n),e.group===E?(s=t.expand(e.clone()).stripVar(n),i=t.subtract(e.clone(),s.clone())):i=e.clone(),e=i.stripVar(n),n=t.divide(i.clone(),e.clone()),s=s||new Fe(0),r?{a:e,x:n,ax:i,b:s}:[e,n,i,s]},se=function(e,t){return W(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},oe=function(e){return e%2==0},ae=function(e){return 1/(e%1)%2==0},ue=function(e,t){var n=typeof t;"function"==n&&"undefined"!=n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},le=function(e){function t(e){-1===O.indexOf(e)&&O.push(e)}"string"==typeof e?t(e):m(e,(function(e){t(e)}))},ce=function(e,t){var n;return Y(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},pe=function(e,t,n,r){var i=u[e];return u[e]=void 0===n||!!n,r=t.call(r),u[e]=i,r},fe=function(e){return[].slice.call(e)},he=function(e,n){return pe("PARSE2NUMBER",(function(){return t.parse(e,n)}),!0)},me=function(e){if(Y(e)){for(var n=new je([]),r=0;r<e.length;r++)n.elements.push(me(e[r]));return n}return j(e)?e:t.parse(e)},ge=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==d)return!1;return!0},ve=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},de=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new Fe(0);return e.isLinear()?e.each((function(e){var s;n.isComposite()?n.isLinear()?n.each((function(n){n=t.multiply(t.parse(e),t.parse(n)),n=t.expand(t.parse(n),r),i=t.add(i,n)}),!0):i=t.add(i,t.multiply(e,t.parse(n))):(s=t.multiply(t.parse(e),t.parse(n)),i=t.add(i,t.expand(s,r)))}),!0):i=t.multiply(e,n),i},we=l("DivisionByZero"),ye=l("ParseError"),be=l("UndefinedError"),Se=l("OutOfFunctionDomainError"),Me=l("MaximumIterationsReached"),Ne=l("NerdamerTypeError"),Ee=l("ParityError"),xe=l("OperatorError"),qe=l("OutOfRangeError"),Ae=l("DimensionError"),Ce=l("InvalidVariableNameError"),Ie=l("ValueLimitExceededError"),Ue=l("NerdamerValueError"),Le=l("SolveError"),_e=(e=l("InfiniteLoopError"),l("UnexpectedTokenError")),Oe=(e={DivisionByZero:we,ParseError:ye,OutOfFunctionDomainError:Se,UndefinedError:be,MaximumIterationsReached:Me,NerdamerTypeError:Ne,ParityError:Ee,OperatorError:xe,OutOfRangeError:qe,DimensionError:Ae,InvalidVariableNameError:Ce,ValueLimitExceededError:Ie,NerdamerValueError:Ue,SolveError:Le,InfiniteLoopError:e,UnexpectedTokenError:_e},{csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1-(t=1/(1+.5*Math.abs(e)))*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return 0<=e?t:-t},diff:function(e){return function(t){return(e(t+.001)-e(t-.001))/.002}},median:function(...e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n=Math.sign(e),r=Math.abs(e),i=Math.floor(r),s=r-i,o=0,a=!1,u={whole:i,sign:n,fractions:[]};!a&&0!==s;){var l=1/s,c=Math.floor(l);if(1e7<c&&Oe.fromContinued(u)-e<=Number.EPSILON)break;u.fractions.push(c),((s=l-c)<=1e-14||t-1<=o)&&(a=!0),o++}return n=u.fractions.length-1,1===u.fractions[n]&&(u.fractions.pop(),u.fractions[--n]++),u},bigpow:function(e,t){e instanceof De||(e=De.create(e)),t instanceof De||(t=De.create(t));var n,r=new De(0);return t.isInteger()?(r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString())):(n=De.create(Math.pow(e.num,t.num)),e=De.create(Math.pow(e.den,t.num)),r.num=Oe.nthroot(n,t.den.toString()),r.den=Oe.nthroot(e,t.den)),r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Oe.gamma(1-e));--e;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new n(1),r=2;r<=e;r++)t=t.times(r);return new De(t)},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return De.quick.apply(null,t[e].split("/"));e=new De(e);for(var n=new De(0),r=e.subtract(new De(1)),i=e.add(new De(1)),s=0;s<80;s++){var o=new De(2*s+1),a=Oe.bigpow(r.divide(i),o);a=o.clone().invert().multiply(a),n=n.add(a)}return n.multiply(new De(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Oe.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(W(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new De(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)));else for(i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)).subtract(new De(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Oe.gamma(1+e/2);return r},GCD:function(){for(var e=g([].slice.call(arguments).map((function(e){return Math.abs(e)}))).sort(),t=Math.abs(e.shift()),n=e.length;0<n--;)for(var r=Math.abs(e.shift());;){if(0==(t%=r)){t=r;break}if(0==(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1;t=r.gcd(t),i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Oe.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n,r=Oe.ifactor(e),i=new Fe;for(n in i.symbols={},i.group=N,r){var s=new Fe(1);s.group=w,s.value=n,s.power=new Fe(r[n]),i.symbols[n]=s}return i.updateHash(),1===e&&(i=new Fe(e)),t<0&&i.negate(),i},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));s[s.length-1]<n&&e<1e6&&v(n);for(var r=s.length,i=0;i<r;i++)for(var o=s[i];e%o==0;)e/=o,t[o]=(t[o]||0)+1;return 1<e&&(t[e]=1),t},ifactor:function(e){var t=new n(e);if("0"===(e=String(e)))return{0:1};var r=(e=new n(e)).sign?-1:1;e=e.abs();var i={};if(e.lt("65536"))i=Oe.sfactor(e,i);else{var s=function(e){e.isPrime()?i[e]=(i[e]||0)+1:i=Oe.sfactor(e,i)};try{for(var o=0;!e.abs().equals(1);){if(e.isPrime()){s(e);break}var a=function t(r){for(var i=new n(r),s=2,a=new n(r),u=new n(1);u.equals(1);){for(var l=0;l<=s&&u.equals(1);l++){if(o++>1e3)throw new Error("stopping");a=a.pow(2).add(1).mod(e),u=n.gcd(a.minus(i).abs(),e)}s*=2,i=a}return u.equals(e)?t(r+1):u}(2);s(a),e=e.divide(a)}}catch(r){i={},s(t)}}return-1==r&&(r=h(te(i)),i["-"+r]=i[r],delete i[r]),i},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=t<++s}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=oe(e)?t:Math.abs(t);for(var n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){function i(e,t,n){var r=e(t);return isNaN(r)?e(1===n?t+1e-12:t-1e-12):r}r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(e,t,n,r,i){if(i<0)throw new Error("max depth cannot be negative");var s;try{s=function(e,t,n,r,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var o=e(t),a=e(.5*(t+n)),u=e(n);if(r=function e(t,n,r,i,s,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var f,h,m,g=r-n,v=t(n+.25*g),d=t(r-.25*g);if(isNaN(v))p.nanEncountered=!0;else if(isNaN(d))p.nanEncountered=!0;else if(a=((h=(m=g*(i+4*v+s)/12)+(f=g*(s+4*d+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return l<c?(p.maxDepthCount++,h+a):Math.abs(a)<u?h+a:(m=e(t,n,g=n+.5*g,i,v,s,m,.5*u,l,c+1,p),isNaN(m)?(p.nanEncountered=!0,NaN):(c=e(t,g,r,s,d,o,f,.5*u,l,c+1,p),isNaN(c)?(p.nanEncountered=!0,NaN):m+c))}(e,t,n,o,a,u,(o+4*a+u)*(n-t)/6,r,i,1,s),0<s.maxDepthCount&&k("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+s.maxDepthCount+" times"),s.nanEncountered)throw new Error("Function does not converge over interval!");return r}(e,t,n,r,i)}catch(r){return Oe.simpson(e,t,n)}return se(s,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Oe.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,1+r)/((1+r)*Oe.factorial(1+r))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Oe.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Oe.factorial(t));return r},Chi:function(e){return Math.log(e)+.5772156649015329+Oe.num_integrate((function(e){return(Math.cosh(e)-1)/e}),.002,e,.001)},Li:function(e){return Oe.Ei(Oe.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,i=(t=t||0,0);i<n;i++)r+=Math.pow(t,i)/Oe.factorial(i);return Oe.factorial(n)*Math.exp(-t)*r},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,t){if(e instanceof De||(e=new De(e.toString())),(t=t instanceof De?t:new De(t.toString())).equals(1))return e;var n=e.divide(new De(2)),r=new De(1e-15),i=t.clone().invert(),s=t.subtract(new De(1));do{var o=Oe.bigpow(n,s),a=i.multiply(e.divide(o).subtract(n)).toDecimal(25);if(o=De.create(a),u)break;n=n.add(o),a=o.toDecimal();var u=!!l&&l===a,l=a}while(o.abs().gte(r));return n},sqrt:function(e){var t,n,r;e instanceof De||(e=new De(e));var i=0,s=!1,o=new De(1e-20),a=e.divide(new De(2));do{if(1e3<i)throw new Error("Unable to calculate square root for "+e)}while(a=a.add(e.divide(a)).divide(new De(2)),a=new De(a.decimal(30)),t=e.subtract(a.multiply(a)),r=!!n&&n.equals(t),(t.clone().abs().lessThan(o)||r)&&(s=!0),n=t,i++,!s);return a}});function Re(e,t,r,i){var s="hash"===t,o=void 0,l=s?void 0:t,c="decimal"===l||"decimals"===l;function p(e){switch(t){case"decimals":case"decimal":return o=o||function(e){return!1},e.valueOf();case"recurring":o=o||function(e){return-1!==e.indexOf("'")};var r=e.toString();if(0===(d=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;var i=d[0].split("/"),s=!1,a=Number(i[0]);a<0&&(a=-a,s=!0);var l=(l=Number(i[1]))||1,c=10*(a-(v=Math.floor(a/l))*l);for(v=v.toString()+".";c&&c<l;)c*=10,v+="0";for(var p="",f=[],h=0;;){if(void 0!==f[c])return(s?"-":"")+(v+p.slice(0,f[c])+"'"+p.slice(f[c])+"'").replace("'0'","").replace(/\.$/,"");var m=Math.floor(c/l),g=c-m*l;f[c]=h,p+=m.toString(),h+=1,c=10*g}case"mixed":if(o=o||function(e){return-1!==e.indexOf("/")},r=e.toString(),0===(d=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;i=d[0].split("/"),r=new n(i[0]),(d=new n(i[1])).equals(0)&&(d=new n(1));var v=(r=r.divmod(d)).quotient,d=r.remainder;return r="-"===i[0][0]||v.equals(0)||d.equals(0)?"":"+",(v.equals(0)?"":v.toString())+r+(d.equals(0)?"":d.toString()+"/"+i[1]);case"scientific":return o=o||function(e){return!1},new ke(e.valueOf()).toString(u.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return o=o||function(e){return-1!==e.indexOf("/")},e.toString()}}if(c&&void 0===i&&(i=u.DEFAULT_DECP),j(e)){var f,h,m="",g="",v="",x=e.group||r,A=e.value;switch(s||("-1"==(f=p(e.multiplier))&&"-1"===String(e.multiplier)&&(v="-",f="1"),"1"!=f&&(m=f),"1"!=(h=e.power?p(e.power):"")&&(g=j(h)?Re(h,l):h)),x){case d:m="";var C=i&&c?e.multiplier.toDecimal(i):p(e.multiplier);A="-1"==String(e.multiplier)?"1":C,g="";break;case M:case E:A=e.collectSymbols().map((function(e){return"0"==(e=Re(e,l,r,i))?"":e})).sort().join("+").replace(/\+\-/g,"-");break;case N:A=e.collectSymbols((function(e){var t=e.group;return(t===M||t===E)&&e.power.equals(1)&&e.multiplier.equals(1)?K(Re(e,l)):Re(e,l)})).join("*");break;case b:var I=e.previousGroup;C=e.power.group,I===M&&(A=e.collectSymbols(Re,l).join("+").replace("+-","-")),I===d||I===y||I===S||s||(A=K(A)),C!==E&&C!==N&&C!==M&&"1"==e.power.multiplier.toString()||!g||(g=K(g))}x===S&&(A=e.fname+K(e.args.map((function(e){return Re(e,l)})).join(","))),x===S&&e.fname in a&&(f=Re(e.args[0]),h=Re(e.args[1]),e.args[0].isComposite()&&(f=K(f)),e.args[1].isComposite()&&(h=K(h)),A=f+a[e.fname]+h),g&&x!==b&&o(g)&&(g=K(g)),((x===E||x===M)&&(m&&"1"!=m||"-"===v)||(x===N||x===E||x===M)&&g&&"1"!=g||!s&&x===w&&-1==A||e.fname===q)&&(A=K(A));var U=v+(m=i&&("decimal"===t||"decimals"===t&&m)?se(m,i):m);if(m&&o(m)&&(U=K(U)),m&&(U+="*"),g=g<0?K(g):g){if("e"===A&&u.E_TO_EXP)return U+"exp"+K(g);g=u.POWER_OPERATOR+g}return x=U+(A=x===b&&"-"===A.charAt(0)?K(A):A),(x=e.parens?K(x):x)+g}if(Z(e)){for(var L=e.elements.length,_=(U=[],0);_<L;_++)U.push(e.elements[_].text(t));return"["+U.join(",")+"]"}try{return e.toString()}catch(e){return""}}function Te(e){if(B(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,o=Math.floor(i);if(i-o<=2220446049250313e-31&&1<n){if(B(n)&&(-1===s.indexOf(n)&&s.push(n),r.push(n)),B(o)){r.push(o);break}t=o}n++}return r.sort((function(e,t){return e-t}))}function Pe(e){this.symbol=e}function ke(e){return this instanceof ke?((e=String(void 0===e?0:e)).startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,ke.isScientific(e)?this.fromScientific(e):this.convert(e),this):new ke(e)}function De(e){if(e instanceof De)return e;if(void 0===e)return this;try{if(W(e))try{this.num=n(e),this.den=n(1)}catch(t){return De.simple(e)}else{var t=e instanceof r?Ge.quickConversion(e):Ge.convert(e);this.num=new n(t[0]),this.den=new n(t[1])}}catch(t){return De.simple(e)}}function Fe(e){var t="Infinity"===e;return this instanceof Fe?(e instanceof r&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof r?(this.group=d,this.value=x,this.multiplier=new De(e)):(this.group=y,D(e),this.value=e,this.multiplier=new De(1),this.imaginary=e===u.IMAGINARY,this.isInfinity=t),this.power=new De(1),this):new Fe(e)}function Be(){var e=this,t={},n={names:[],actions:[]};function i(e,t){this.start=e,this.end=t}function s(){this.elements=[]}function o(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===o.OPERATOR){var r,i=p[e];for(r in i)this[r]=i[r]}else t===o.FUNCTION&&(this.precedence=o.MAX_PRECEDENCE,this.leftAssoc=!1)}i.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},i.prototype.text=function(){return Re(this.start)+":"+Re(this.end)},s.prototype.append=function(e){this.elements.push(e)},s.prototype.getItems=function(){return this.elements},s.prototype.toString=function(){return e.pretty_print(this.elements)},s.create=function(e){var t=new s;return e&&t.append(e),t},o.prototype.toString=function(){return this.value},o.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},o.OPERATOR="OPERATOR",o.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",o.FUNCTION="FUNCTION",o.UNIT="UNIT",o.KEYWORD="KEYWORD",o.MAX_PRECEDENCE=999,this.classes={Collection:s,Slice:i,Token:o};var a={prec:void 0,cos:function(t,n){var r=e.parse(Math.cos(t)*Math.cosh(n));return n=e.parse(Math.sin(t)*Math.sinh(n)),e.subtract(r,e.multiply(n,Fe.imaginary()))},sin:function(t,n){var r=e.parse(Math.sin(t)*Math.cosh(n));return n=e.parse(Math.cos(t)*Math.sinh(n)),e.subtract(r,e.multiply(n,Fe.imaginary()))},tan:function(t,n){var r=e.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*n)));return n=e.parse(Math.sinh(2*n)/(Math.cos(2*t)+Math.cosh(2*n))),e.add(r,e.multiply(n,Fe.imaginary()))},sec:function(t,n){return n=this.removeDen(this.cos(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},csc:function(t,n){return n=this.removeDen(this.sin(t,n)),e.add(n[0],e.multiply(n[1],Fe.imaginary()))},cot:function(t,n){return n=this.removeDen(this.tan(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},acos:function(t,n){return t=this.fromArray([t,n]),n=e.pow(t.clone(),new Fe(2)),n=e.expand(n),n=e.multiply(D(e.subtract(new Fe(1),n)),Fe.imaginary()),n=Me(e.expand(e.add(t.clone(),n))),e.expand(e.multiply(Fe.imaginary().negate(),n))},asin:function(t,n){return e.subtract(e.parse("pi/2"),this.acos(t,n))},atan:function(t,n){return t.equals(0)&&(n.equals(1)||n.equals(-1))?e.parse(`${Fe.infinity()}*${u.IMAGINARY}*${n}`):(t=a.fromArray([t,n]),n=e.expand(e.multiply(Fe.imaginary(),t.clone())),t=Me(e.expand(e.subtract(new Fe(1),n.clone()))),n=Me(e.expand(e.add(new Fe(1),n.clone()))),e.expand(e.multiply(e.divide(Fe.imaginary(),new Fe(2)),e.subtract(t,n))))},asec:function(e,t){return(t=this.removeDen([e,t]))[1].negate(),this.acos.apply(this,t)},acsc:function(e,t){return(t=this.removeDen([e,t]))[1].negate(),this.asin.apply(this,t)},acot:function(e,t){return(t=this.removeDen([e,t]))[1].negate(),this.atan.apply(this,t)},cosh:function(t,n){var r=e.parse(Math.cosh(t)*Math.cos(n));return n=e.parse(Math.sinh(t)*Math.sin(n)),e.add(r,e.multiply(n,Fe.imaginary()))},sinh:function(t,n){var r=e.parse(Math.sinh(t)*Math.cos(n));return n=e.parse(Math.cosh(t)*Math.sin(n)),e.add(r,e.multiply(n,Fe.imaginary()))},tanh:function(t,n){var r=e.parse(Math.sinh(2*t)/(Math.cos(2*n)+Math.cosh(2*t)));return t=e.parse(Math.sin(2*n)/(Math.cos(2*n)+Math.cosh(2*t))),e.subtract(r,e.multiply(t,Fe.imaginary()))},sech:function(t,n){return n=this.removeDen(this.cosh(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},csch:function(t,n){return n=this.removeDen(this.sinh(t,n)),e.subtract(n[0],e.multiply(n[1],Fe.imaginary()))},coth:function(t,n){return n=this.removeDen(this.tanh(t,n)),e.add(n[0],e.multiply(n[1],Fe.imaginary()))},acosh:function(t,n){var r=this.fromArray([t,n]);return t=D(e.add(r.clone(),new Fe(1))),n=D(e.subtract(r.clone(),new Fe(1))),e.expand(Me(e.add(r,e.expand(e.multiply(t,n)))))},asinh:function(t,n){return t=this.fromArray([t,n]),n=D(e.add(new Fe(1),e.expand(e.pow(t.clone(),new Fe(2))))),e.expand(Me(e.add(t,n)))},atanh:function(t,n){return t=this.fromArray([t,n]),n=Me(e.add(t.clone(),new Fe(1))),t=Me(e.subtract(new Fe(1),t)),e.expand(e.divide(e.subtract(n,t),new Fe(2)))},asech:function(e,t){return(t=this.removeDen([e,t]))[1].negate(),this.acosh.apply(this,t)},acsch:function(e,t){return(t=this.removeDen([e,t]))[1].negate(),this.asinh.apply(this,t)},acoth:function(e,t){return(t=this.removeDen([e,t]))[1].negate(),this.atanh.apply(this,t)},sqrt:function(t){var n=t.realpart(),r=t.imagpart();return t=Fe.hyp(n,r),n=e.add(n.clone(),t),t=D(e.multiply(new Fe(2),n.clone())),e.add(e.divide(n.clone(),t.clone()),e.multiply(e.divide(r,t),Fe.imaginary()))},log:function(t,n){var i=Me(Fe.hyp(t,n));return t=u.USE_BIG?Fe(r.atan2(n.multiplier.toDecimal(),t.multiplier.toDecimal())):Math.atan2(n,t),t=e.parse(t),e.add(i,e.multiply(Fe.imaginary(),t))},erf:(t,n)=>e.symfunction("erf",[t]),removeDen:function(t){var n,r=Y(t)?(n=t[0],t[1]):(n=t.realpart(),t.imagpart());return t=Math.pow(n,2)+Math.pow(r,2),[e.parse(n/t),e.parse(r/t)]},fromArray:function(t){return e.add(t[0],e.multiply(Fe.imaginary(),t[1]))},evaluate:function(t,n){var r,i,s=t.power.sign();return t.power=t.power.abs(),t.power.greaterThan(1)&&(t=e.expand(t)),i=s<0?(r=(i=this.removeDen(t))[0],i[1]):(r=t.realpart(),t.imagpart()),r.isConstant("all")&&i.isConstant("all")?this[n].call(this,r,i):e.symfunction(n,[t])}},l=this.trig={cos:function(t){if(t.equals("pi")&&t.multiplier.den.equals(2))return new Fe(0);if(u.PARSE2NUMBER){if(t.equals(new Fe(u.PI/2)))return new Fe(0);if(t.isConstant())return u.USE_BIG?new Fe(r.cos(t.multiplier.toDecimal())):new Fe(Math.cos(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cos")}if(t.equals(0))return new Fe(1);var n,i=!1,s=Ce(t.multiplier.toDecimal()),o=t.multiplier.abs();return t.multiplier=o,t.isPi()&&t.isLinear()&&(W(o)?n=new Fe(oe(o)?1:-1):(Number(o.num),2===(o=Number(o.den))?n=new Fe(0):3===o?(n=e.parse("1/2"),i=!0):4===o?(n=e.parse("1/sqrt(2)"),i=!0):6===o?(n=e.parse("sqrt(3)/2"),i=!0):n=e.symfunction("cos",[t]))),!i||2!==s&&3!==s||n.negate(),n||e.symfunction("cos",[t])},sin:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return t%Math.PI==0?new Fe(0):u.USE_BIG?new Fe(r.sin(t.multiplier.toDecimal())):new Fe(Math.sin(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sin")}if(t.equals(0))return new Fe(0);var n,i=!1,s=Ce(t.multiplier.toDecimal()),o=t.multiplier.sign(),l=t.multiplier.abs();return t.multiplier=l,t.equals("pi")?n=new Fe(0):t.isPi()&&t.isLinear()&&(W(l)?n=new Fe(0):(l.num,2==(l=l.den)?(n=new Fe(1),i=!0):3==l?(n=e.parse("sqrt(3)/2"),i=!0):4==l?(n=e.parse("1/sqrt(2)"),i=!0):6==l?(n=e.parse("1/2"),i=!0):n=e.multiply(new Fe(o),e.symfunction("sin",[t])))),n=n||e.multiply(new Fe(o),e.symfunction("sin",[t])),!i||3!==s&&4!==s||n.negate(),n},tan:function(t){if(u.PARSE2NUMBER){if(t%Math.PI==0&&t.isLinear())return new Fe(0);if(t.isConstant())return u.USE_BIG?new Fe(r.tan(t.multiplier.toDecimal())):new Fe(Math.tan(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tan")}var n,i=!1,s=Ce(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear())if(W(o))n=new Fe(0);else{if(o.num,2==(o=o.den))throw new be("tan is undefined for "+t.toString());3==o?(n=e.parse("sqrt(3)"),i=!0):4==o?(n=new Fe(1),i=!0):6==o?(n=e.parse("1/sqrt(3)"),i=!0):n=e.symfunction("tan",[t])}return n=n||e.symfunction("tan",[t]),!i||2!==s&&4!==s||n.negate(),n},sec:function(t){if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Fe(new r(1).dividedBy(r.cos(t.multiplier.toDecimal()))):new Fe(Oe.sec(t.valueOf())):t.isImaginary()?a.evaluate(t,"sec"):e.parse(ee("1/cos({0})",t));var n,i=!1,s=Ce(t.multiplier.toDecimal()),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear())if(W(o))n=new Fe(oe(o)?1:-1);else{if(o.num,2==(o=o.den))throw new be("sec is undefined for "+t.toString());3==o?(n=new Fe(2),i=!0):4==o?(n=e.parse("sqrt(2)"),i=!0):6==o?(n=e.parse("2/sqrt(3)"),i=!0):n=e.symfunction("sec",[t])}return!i||2!==s&&3!==s||n.negate(),n||e.symfunction("sec",[t])},csc:function(t){if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Fe(new r(1).dividedBy(r.sin(t.multiplier.toDecimal()))):new Fe(Oe.csc(t.valueOf())):t.isImaginary()?a.evaluate(t,"csc"):e.parse(ee("1/sin({0})",t));var n,i=!1,s=Ce(t.multiplier.toDecimal()),o=t.multiplier.sign(),l=t.multiplier.abs();if(t.multiplier=l,t.isPi()&&t.isLinear()){if(W(l))throw new be("csc is undefined for "+t.toString());l.num,2==(l=l.den)?(n=new Fe(1),i=!0):3==l?(n=e.parse("2/sqrt(3)"),i=!0):4==l?(n=e.parse("sqrt(2)"),i=!0):6==l?(n=new Fe(2),i=!0):n=e.multiply(new Fe(o),e.symfunction("csc",[t]))}return n=n||e.multiply(new Fe(o),e.symfunction("csc",[t])),!i||3!==s&&4!==s||n.negate(),n},cot:function(t){if(u.PARSE2NUMBER)return t%(Math.PI/2)==0?new Fe(0):t.isConstant()?u.USE_BIG?new Fe(new r(1).dividedBy(r.tan(t.multiplier.toDecimal()))):new Fe(Oe.cot(t.valueOf())):t.isImaginary()?a.evaluate(t,"cot"):e.parse(ee("1/tan({0})",t));var n,i=!1,s=Ce(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear()){if(W(o))throw new be("cot is undefined for "+t.toString());o.num,2==(o=o.den)?n=new Fe(0):3==o?(n=e.parse("1/sqrt(3)"),i=!0):4==o?(n=new Fe(1),i=!0):6==o?(n=e.parse("sqrt(3)"),i=!0):n=e.symfunction("cot",[t])}return n=n||e.symfunction("cot",[t]),!i||2!==s&&4!==s||n.negate(),n},acos:function(t){if(u.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=t.toString();return Le(he(`pi/2-asin(${n})`))}return u.USE_BIG?new Fe(r.acos(t.multiplier.toDecimal())):new Fe(Math.acos(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"acos")}return e.symfunction("acos",arguments)},asin:function(t){if(u.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=u.IMAGINARY,i=t.multiplier.toDecimal();return Le(he(`${n}*log(sqrt(1-${i}^2)-${n}*${i})`))}return u.USE_BIG?new Fe(r.asin(t.multiplier.toDecimal())):new Fe(Math.asin(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"asin")}return e.symfunction("asin",arguments)},atan:function(t){var n;if(t.equals(0))n=new Fe(0);else{if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Fe(r.atan(t.multiplier.toDecimal())):new Fe(Math.atan(t.valueOf())):t.isImaginary()?a.evaluate(t,"atan"):e.symfunction("atan",arguments);n=t.equals(-1)?e.parse("-pi/4"):e.symfunction("atan",arguments)}return n},asec:function(t){if(u.PARSE2NUMBER){if(t.equals(0))throw new Se("Input is out of the domain of sec!");if(t.isConstant())return l.acos(t.invert());if(t.isImaginary())return a.evaluate(t,"asec")}return e.symfunction("asec",arguments)},acsc:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return l.asin(t.invert());if(t.isImaginary())return a.evaluate(t,"acsc")}return e.symfunction("acsc",arguments)},acot:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new e.add(e.parse("pi/2"),l.atan(t).negate());if(t.isImaginary())return a.evaluate(t,"acot")}return e.symfunction("acot",arguments)},atan2:function(t,n){if(t.equals(0)&&n.equals(0))throw new be("atan2 is undefined for 0, 0");return u.PARSE2NUMBER&&t.isConstant()&&n.isConstant()?new Fe(Math.atan2(t,n)):e.symfunction("atan2",arguments)}},c=this.trigh={cosh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Fe(Math.cosh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Fe(Math.sinh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Fe(Math.tanh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tanh")}return e.symfunction("tanh",arguments)},sech:function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Math.sech(t.valueOf())):t.isImaginary()?a.evaluate(t,"sech"):e.parse(ee("1/cosh({0})",t)):e.symfunction("sech",arguments)},csch:function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Math.csch(t.valueOf())):t.isImaginary()?a.evaluate(t,"csch"):e.parse(ee("1/sinh({0})",t)):e.symfunction("csch",arguments)},coth:function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Math.coth(t.valueOf())):t.isImaginary()?a.evaluate(t,"coth"):e.parse(ee("1/tanh({0})",t)):e.symfunction("coth",arguments)},acosh:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acosh"):u.PARSE2NUMBER?he(e.parse(ee(u.LOG+"(({0})+sqrt(({0})^2-1))",t.toString()))):e.symfunction("acosh",arguments)},asinh:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asinh"):u.PARSE2NUMBER?he(e.parse(ee(u.LOG+"(({0})+sqrt(({0})^2+1))",t.toString()))):e.symfunction("asinh",arguments)},atanh:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"atanh"):u.PARSE2NUMBER?he(e.parse(ee("(1/2)*"+u.LOG+"((1+({0}))/(1-({0})))",t.toString()))):e.symfunction("atanh",arguments)},asech:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asech"):u.PARSE2NUMBER?he(Me(e.add(t.clone().invert(),D(e.subtract(e.pow(t,new Fe(-2)),new Fe(1)))))):e.symfunction("asech",arguments)},acsch:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acsch"):u.PARSE2NUMBER?he(e.parse(ee(u.LOG+"((1+sqrt(1+({0})^2))/({0}))",t.toString()))):e.symfunction("acsch",arguments)},acoth:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acoth"):u.PARSE2NUMBER?t.equals(1)?Fe.infinity():he(e.divide(Me(e.divide(e.add(t.clone(),new Fe(1)),e.subtract(t.clone(),new Fe(1)))),new Fe(2))):e.symfunction("acoth",arguments)}},p={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(e){return e}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(t){return e.symfunction(u.DOUBLEFACTORIAL,[t])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:L},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(t){return e.divide(t,new Fe(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},f={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},h=this.functions={cos:[l.cos,1],sin:[l.sin,1],tan:[l.tan,1],sec:[l.sec,1],csc:[l.csc,1],cot:[l.cot,1],acos:[l.acos,1],asin:[l.asin,1],atan:[l.atan,1],arccos:[l.acos,1],arcsin:[l.asin,1],arctan:[l.atan,1],asec:[l.asec,1],acsc:[l.acsc,1],acot:[l.acot,1],atan2:[l.atan2,2],acoth:[c.acoth,1],asech:[c.asech,1],acsch:[c.acsch,1],sinh:[c.sinh,1],cosh:[c.cosh,1],tanh:[c.tanh,1],asinh:[c.asinh,1],sech:[c.sech,1],csch:[c.csch,1],coth:[c.coth,1],acosh:[c.acosh,1],atanh:[c.atanh,1],log10:[,1],exp:[function(t){return t.fname===u.LOG&&t.isLinear()?e.pow(t.args[0],Fe.create(t.multiplier)):e.parse(ee("e^({0})",t))},1],radians:[function(t){return e.parse(ee("({0})*pi/180",t))},1],degrees:[function(t){return e.parse(ee("({0})*180/pi",t))},1],min:[function(){var t=[].slice.call(arguments);return P(t)?t[0]:ge(t)?new Fe(Math.min.apply(null,t)):u.SYMBOLIC_MIN_MAX&&ve(t)?me("min",t):e.symfunction("min",t)},-1],max:[function(){var t=[].slice.call(arguments);return P(t)?t[0]:ge(t)?new Fe(Math.max.apply(null,t)):u.SYMBOLIC_MIN_MAX&&ve(t)?me("max",t):e.symfunction("max",t)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(t){return u.PARSE2NUMBER?t.isConstant()?new Fe(Oe.sinc(t)):e.parse(ee("sin({0})/({0})",t)):e.symfunction("sinc",[t])},1],tri:[,1],sign:[function(t){return t.isConstant(!0)?new Fe(Math.sign(he(t))):e.symfunction("sign",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[L,1],factorial:[L,1],continued_fraction:[function(t,n){return(t=he(t)).isConstant()?(t=Oe.continuedFraction(t,n),n=je.fromArray(t.fractions.map((function(e){return new Fe(e)}))),je.fromArray([new Fe(t.sign),new Fe(t.whole),n])):e.symfunction("continued_fraction",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Ne,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[O,2],pfactor:[H,1],vector:[function(){return new je([].slice.call(arguments))},-1],matrix:[function(){return He.fromArray(arguments)},-1],Set:[function(){return Xe.fromArray(arguments)},-1],imatrix:[function(e){return He.identity(e)},-1],parens:[function(t){return u.PARSE2NUMBER?t:e.symfunction("parens",[t])},-1],sqrt:[D,1],cbrt:[B,1],nthroot:[V,2],log:[Me,[1,2]],expand:[function(e,t){return Le(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[x,1],invert:[function(e){if(z(e))return e.invert();T("invert expects a matrix")},1],determinant:[function(e){return z(e)?e.determinant():e},1],size:[function(e){var t;return z(e)?t=[new Fe(e.cols()),new Fe(e.rows())]:Z(e)||$(e)?t=new Fe(e.elements.length):T("size expects a matrix or a vector"),t},1],transpose:[function(e){if(z(e))return e.transpose();T("function transpose expects a matrix")},1],dot:[function(e,t){if(Z(e)&&Z(t))return e.dot(t);T("function dot expects 2 vectors")},2],cross:[function(e,t){if(Z(e)&&Z(t))return e.cross(t);T("function cross expects 2 vectors")},2],vecget:[function(t,n){return n.isConstant()&&W(n)?t.elements[n]:e.symfunction("vecget",arguments)},2],vecset:[function(t,n,r){return n.isConstant?(t.elements[n]=r,t):e.symfunction("vecset",arguments)},3],vectrim:[function(t,n){return n=void 0===n?1e-14:n,t=t.clone(),n=Number(n),t.elements.sort((function(e,t){return t.group-e.group})),t.elements=ue(t.elements,(function(t,r){return Number(e.subtract(he(t),he(r)).abs())<=n})),t},[1,2]],matget:[function(t,n,r){return n.isConstant()&&r.isConstant()?t.elements[n][r]:e.symfunction("matget",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(t,n){return n.isConstant()?new He(t.elements[n]):e.symfunction("matgetrow",arguments)},2],matsetrow:[function(t,n,r){if(!n.isConstant())return e.symfunction("matsetrow",arguments);if(t.elements[n].length!==r.elements.length)throw new Ae("Matrix row must match row dimensions!");return(t=t.clone()).elements[n]=r.clone().elements,t},3],matgetcol:[function(t,n){if(!n.isConstant())return e.symfunction("matgetcol",arguments);n=Number(n);var r=He.fromArray([]);return t.each((function(e,t,i){i===n&&r.elements.push([e.clone()])})),r},2],matsetcol:[function(t,n,r){if(!n.isConstant())return e.symfunction("matsetcol",arguments);if(n=Number(n),t.rows()!==r.elements.length)throw new Ae("Matrix columns must match number of columns!");return r.each((function(e,r){t.set(r-1,n,e.elements[0].clone())})),t},3],rationalize:[R,1],IF:[function(e,t,n){return"boolean"!=typeof e&&Q(e)&&(e=!!Number(e)),e?t:n},3],is_in:[function(e,t){if(z(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new Fe(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new Fe(1);return new Fe(0)},2],realpart:[X,1],imagpart:[K,1],conjugate:[te,1],arg:[le,1],polarform:[function(t){var n;return t=(n=Fe.toPolarFormArray(t))[1],n=n[0],t=e.parse(ee("e^({0}*({1}))",u.IMAGINARY,t)),e.multiply(n,t)},1],rectform:[function(t){var n,r,i,s,o,a=t.clone();try{return n=ie(t,"e",!0),r=e.divide(n.x.power,Fe.imaginary()),i=he(l.tan(r)),e.pow(n.a,new Fe(2)),s=i.getDenom(!0),o=i.getNum(),Fe.hyp(o,s).equals(n.a)?e.add(s,e.multiply(Fe.imaginary(),o)):a}catch(t){return a}},1],sort:[function(e,t){t=t?t.toString():"asc";var n=function(e){return e.group===d?e.multiplier:e.group===S?""===e.fname?n(e.args[0]):e.fname:e.group===y?e.power:e.value};return new je((Z(e)?e.elements:e.collectSymbols()).sort((function(e,r){return e=n(e),r=n(r),"desc"===t?r-e:e-r})))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new Fe(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new Fe(Number(e.is_subset(t)))},2],print:[function(){fe(arguments).map((function(e){console.log(e.toString())}))},-1]};function m(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}function g(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)","===e[r]?n[++t]=[]:n[t].push(e[r]);return n}function v(e){return e.replace(/^\\left\((.+)\\right\)$/g,(function(e,t){return t||e}))}function x(t){if(t.isInfinity)return Fe.infinity();if(t.multiplier.lessThan(0)&&t.multiplier.negate(),t.isImaginary()){var n=t.realpart(),r=t.imagpart();if(n.isConstant()&&r.isConstant())return D(e.add(e.pow(n,new Fe(2)),e.pow(r,new Fe(2))))}else if(Q(t)||oe(t.power))return t;var i;return t.isComposite()&&(i=[],t.each((function(e){i.push(e.multiplier)})),Oe.QGCD.apply(null,i).lessThan(0)&&(t.multiplier=t.multiplier.multiply(new De(-1)),t.distributeMultiplier())),r=e.parse(t.multiplier),t.toUnitMultiplier(),e.multiply(r,e.symfunction(C,[t]))}function L(t){if(Z(t)){var n=new je;return t.each((function(e,t){n.set(t-1,L(e))})),n}if(z(t)){var r=new He;return t.each((function(e,t,n){r.set(t,n,L(e))})),r}if(u.PARSE2NUMBER&&t.isConstant())return Ie(W(t)?Oe.bigfactorial(t):Oe.gamma(t.multiplier.add(new De(1)).toDecimal()));if(t.isConstant()&&t.getDenom().equals(2)){var i,s=t.getNum(),o=t.multiplier.isNegative()?(o=e.subtract(s.negate(),new Fe(1)).multiplier.divide(new De(2)),i=e.pow(new Fe(-4),new Fe(o)).multiplier.multiply(Oe.bigfactorial(o)),Oe.bigfactorial(new De(2).multiply(o))):(o=e.add(s,new Fe(1)).multiplier.divide(new De(2)),i=Oe.bigfactorial(new De(2).multiply(o)),e.pow(new Fe(4),new Fe(o)).multiplier.multiply(Oe.bigfactorial(o)));return o=i.divide(o),e.multiply(e.parse("sqrt(pi)"),new Fe(o))}return e.symfunction(I,[t])}function O(t,n){if(t.isConstant()&&n.isConstant()){var r=new Fe(1);return r.multiplier=r.multiplier.multiply(t.multiplier.mod(n.multiplier)),r}return r=e.divide(t.clone(),n.clone()),W(r)?new Fe(0):e.symfunction("mod",[t,n])}function R(t){if(t.isComposite()){var n,r,i,s,o=new Fe(0);return t.each((function(t){i=t.getNum(),s=t.getDenom(),r=o.getNum(),n=o.getDenom(),r=e.multiply(s,r),i=e.multiply(i,n),i=e.expand(e.add(r,i)),s=e.multiply(n,s),o=e.divide(i,s)}),!0),o}return t}function D(t){if((t=j(t)?t:e.parse(t)).group===b)return e.symfunction(A,[t]);var n=(t=""===t.fname&&t.power.equals(1)?t.args[0]:t).multiplier.sign()<0;if(u.PARSE2NUMBER){if(t.isConstant()&&!n)return new Fe(r.sqrt(t.multiplier.toDecimal()));if(t.isImaginary())return a.sqrt(t);if(t.group===y)return e.symfunction("sqrt",[t])}var i,s=t.isConstant();if(t.group===N&&t.isLinear()){var o=D(Fe(t.multiplier));for(c in t.symbols){var l=t.symbols[c];o=e.multiply(o,D(l))}h=o}else if(t.fname===A){var c=t.args[0],p=t.multiplier;c.setPower(t.power.multiply(new De(.25))),h=c,p.equals(1)||(h=e.multiply(D(e.parse(p)),h))}else if(t.power.isInteger())if(t.multiplier<0&&t.group===y)var f=e.parse(t.multiplier).negate(),h=(p=e.parse(t).toUnitMultiplier().negate(),e.multiply(e.symfunction(u.SQRT,[p]),D(f)));else{f=t.power.sign(),t.power=t.power.abs(),s&&t.multiplier.lessThan(0)&&(i=Fe.imaginary(),t.multiplier=t.multiplier.abs());var m=t.multiplier.toDecimal();if(s=Math.abs(m),s=Math.sqrt(s),W(s))o=new Fe(s);else if(W(m)){var g=Oe.ifactor(m),v=1;for(l in g){var d,w=(S=g[l])-S%2;w&&(d=Math.pow(l,w),v*=Math.pow(l,w/2),m/=d)}o=e.multiply(e.symfunction(A,[new Fe(m)]),new Fe(v))}else{for(var S,M=[new Fe(t.multiplier.num),new Fe(t.multiplier.den)],E=[new Fe(1),new Fe(1)],x=[new Fe(1),new Fe(1)],q=0;q<2;q++)H(S=M[q]).each((function(t){var n=(t=Fe.unwrapPARENS(t)).clone().toLinear(),r=Number(t.power);t=r%2,E[q]=e.multiply(E[q],e.pow(n,new Fe((r-t)/2))),x[q]=e.multiply(x[q],D(e.pow(n,new Fe(t))))}));o=e.divide(e.multiply(E[0],x[0]),e.multiply(E[1],x[1]))}h=(t=t.toUnitMultiplier(!0)).isOne()?t:oe(t.power.toString())?e.pow(t.clone(),new Fe(.5)):e.symfunction(A,[t]),f<0&&h.power.negate(),o&&(h=e.multiply(o,h)),i&&(h=e.multiply(i,h))}else t.setPower(t.power.multiply(new De(.5))),h=t;return n&&u.PARSE2NUMBER?e.parse(h):h}function B(t){if(t.isConstant(!0))return V(t,new Fe(3));var n,r=t.power/3,i=e.pow(e.parse(t.multiplier),new Fe(1/3));return t=t.toUnitMultiplier(),W(r)?n=e.pow(t.toLinear(),e.parse(r)):t.group===N?(n=new Fe(1),t.each((function(t){n=e.multiply(n,B(t))}))):n=e.symfunction("cbrt",[t]),e.multiply(i,n)}function V(t,n,r,i){if((n=he(e.parse(n))).equals(0))throw new be("Unable to calculate nthroots of zero");if(t<0&&oe(n))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!t.isConstant(!0))return e.symfunction("nthroot",arguments);void 0===i&&(i=!0),r=r||25;var s,o=(t=t.group!==d?he(t):t).sign();return o<0&&(t=x(t)),W(t)&&n.isConstant()?(n=t<0x10000000000000000?De.create(Math.pow(t,1/n)):Oe.nthroot(t,n),i&&(s=new Fe(n)),s=new Fe(n.toDecimal(r)),e.multiply(new Fe(o),s)):void 0}function H(t){if(t.greaterThan(9999999999998891e26)||t.equals(-1))return t;if(t.equals(Math.PI))return new Fe(Math.PI);if((t=he(t.clone())).isConstant()){var n=new Fe(1),r=t.toString();if(W(r)){var i,s=Oe.ifactor(r);for(i in s){var o=s[i];n=e.multiply(n,e.symfunction("parens",[new Fe(i).setPower(new De(o))]))}}else r=H(new Fe(t.multiplier.num)),t=H(new Fe(t.multiplier.den)),n=e.multiply(e.symfunction("parens",[r]),e.symfunction("parens",[t]).invert())}else n=e.symfunction("pfactor",arguments);return n}function X(e){return e.realpart()}function K(e){return e.imagpart()}function te(t){var n=t.realpart();return t=t.imagpart(),e.add(n,e.multiply(t.negate(),Fe.imaginary()))}function le(t){var n=t.realpart();return t=t.imagpart(),n.isConstant()&&t.isConstant()?new Fe(Math.atan2(t,n)):e.symfunction("atan2",[t,n])}function le(t){var n=t.realpart();return t=t.imagpart(),n.isConstant()&&t.isConstant()?t.equals(0)&&n.equals(-1)?e.parse("pi"):t.equals(1)&&n.equals(0)?e.parse("pi/2"):t.equals(1)&&n.equals(1)?e.parse("pi/4"):new Fe(Math.atan2(t,n)):e.symfunction("atan2",[t,n])}function me(e,t){var n,r;for(t.map((function(e){e.numVal=he(e).multiplier}));;){if((r=t.length)<2)return t[0];n=t.pop(),r=t[r-2],("min"===e?n.numVal<r.numVal:n.numVal>r.numVal)&&(t.pop(),t.push(n))}}function Me(t,n){if(t.equals(1))return new Fe(0);var r,i,s;if(t.fname===A&&t.multiplier.equals(1))return r=e.divide(Me(t.args[0]),new Fe(2)),t.power.sign()<0&&r.negate(),r;if(t.equals(0))throw new be(u.LOG+"(0) is undefined!");return t.isImaginary()?a.evaluate(t,u.LOG):(t.isConstant()&&void 0!==n&&n.isConstant()?r=new Fe(Math.log(t)/Math.log(n)):t.group===b&&t.power.multiplier.lessThan(0)||"-1"===t.power.toString()?(t.power.negate(),r=Me(t).negate()):"e"===t.value&&t.multiplier.equals(1)?(n=t.power,r=j(n)?n:new Fe(n)):t.group===S&&"exp"===t.fname?(s=t.args[0],r=t.multiplier.equals(1)?e.multiply(s,new Fe(t.power)):e.symfunction(u.LOG,[t])):u.PARSE2NUMBER&&Q(t)?((t=e.parse(t)).multiplier.lessThan(0)&&(t.negate(),i=e.multiply(new Fe(Math.PI),new Fe("i"))),r=new Fe(Math.log(t.multiplier.toDecimal())),i&&(r=e.add(r,i))):(t.power.equals(1)||t.contains("e")||(s=t.group===b?t.power:new Fe(t.power),t.toLinear()),r=1<arguments.length&&P(arguments)?new Fe(1):e.symfunction(u.LOG,arguments),s&&(r=e.multiply(s,r))),r)}function Ne(t,n){var r,i=n&&n.isConstant()||void 0===n;return t.isConstant()&&i?(i=t,n&&n.lessThan(0)&&(n=x(n),i=(r=Number(t).toExponential().toString().split("e"))[0],r=r[1]),n=new Fe(se(i,Number(n||0))),e.multiply(n,e.pow(new Fe(10),new Fe(r||0)))):e.symfunction("round",arguments)}function Ce(e){return 0<=(e=(e%=2)<0?2+e:e)&&e<=.5?1:.5<e&&e<=1?2:1<e&&e<=1.5?3:4}function Ie(e){if(!isFinite(e)){var t=Math.sign(e),n=new Fe(String(Math.abs(e)));return n.multiplier=n.multiplier.multiply(new De(t)),n}if(j(e))return e;if("number"==typeof e)try{e=De.simple(e)}catch(t){e=new De(e)}return(n=new Fe(0)).multiplier=e,n}function Le(t,n){if(Array.isArray(t))return t.map((function(e){return Le(e,n)}));if(n=n||{},t.group===S&&""===t.fname){var r=Le(t.args[0],n),i=Le(e.pow(r,e.parse(t.power)),n);return e.multiply(e.parse(t.multiplier),i).distributeMultiplier()}if(-1!==[d,w,y].indexOf(t.group))return t;i=t.clone();try{var s,o,a,u=t.multiplier.toString(),l=Number(t.power),c=t;if(t.isComposite()&&W(t.power)&&0<t.power){var p=l-1;r=new Fe(0),t.each((function(t){r=e.add(r,Le(e.parse(t),n))}));for(var f=e.parse(r),h=0;h<p;h++)f=de(f,r,n);c=e.multiply(e.parse(u),f).distributeMultiplier()}else t.group===S&&!0===n.expand_functions?(s=[],t.args.forEach((function(e){s.push(Le(e,n))})),c=e.pow(e.symfunction(t.fname,s),e.parse(t.power)),c=e.multiply(c,e.parse(t.multiplier))):t.isComposite()&&W(t.power)&&t.power<0&&!0===n.expand_denominator?(t=t.invert(),(c=Le(t,n)).invert()):t.group===N?(o=function(e){switch(e.group){case E:return 0;case M:return 1;case N:return 2;case S:return 3;default:return 4}},a=t.collectSymbols().sort((function(e,t){return o(t)-o(e)})).map((function(t){return Le(e.pow(t,e.parse(l)),n)})),r=a.pop(),(c=r.isComposite()&&r.isLinear()?(a.forEach((function(e){r=de(r,e,n)})),r.isComposite()?(1<r.power&&(r=Le(e.pow(r,e.parse(r.power)),n)),e.multiply(e.parse(u),r).distributeMultiplier()):r):(c=r,a.forEach((function(t){c=e.multiply(c,t)})),e.multiply(c,e.parse(u)).distributeMultiplier())).group===N&&(c=e.parse(c))):c=t;return c}catch(t){return i}return i}function Pe(e){if(j(e.power)||!e.power.absEquals(.5))return e;var t=e.power.sign();return e=D(e.group===w?new Fe(e.value):e.toLinear()),t<0&&e.invert(),e}function ke(e){return new Fe(!0===e?1:0)}this.error=T,this.override=function(e,n){t[e]||(t[e]=[]),t[e].push(this[e]),this[e]=n},this.restore=function(e){this[e]&&(this[e]=t[e].pop())},this.extend=function(e,t,n){var r,i=this;"function"==typeof this[e]&&"function"==typeof t&&(r=this[e],this[e]=function(e,s){return j(e)&&j(s)&&!n?r.call(i,e,s):t.call(i,e,s,r)})},this.symfunction=function(e,t){var n=new Fe(e);return n.group=S,"object"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===q?"":e,n.updateHash(),n},this.callfunction=function(t,n,r){var i=h[t];i||T("Nerdamer currently does not support the function "+t);var s,o=i[1]||r,a=i[0];n instanceof Array||(n=void 0!==n?[n]:[]),-1!==o&&(s=(l=Y(o))?o[0]:o,r=l?o[1]:o,o=t+" requires a {0} of {1} arguments. {2} provided!",(l=n.length)<s&&T(ee(o,"minimum",s,l)),r<l&&T(ee(o,"maximum",r,l)));var l=ge(n);return a?a.apply(i[2],n):(a=function(e){for(var t=u.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}T("The function "+e+" is undefined!")}(t),u.PARSE2NUMBER&&l?Ie(a.apply(a,n)):e.symfunction(t,n))},this.operator_filter_regex=(c="^\\"+Object.keys(p).filter((function(e){if(1===e.length)return e})).join("\\"),new RegExp("(["+c+"])\\s+(["+c+"])")),this.setOperator=function(t,n,r){var i=t.operator;if(p[i]=t,n&&(this[t.action]=n),e[i]=t.operation,t.action||t.prefix||t.postif||(t.action=i),"over"===r||"under"===r){var s,o=t.precedence;for(s in p){var a=p[s];("over"===r?a.precedence>=o:a.precedence>o)&&a.precedence++}}},this.getOperator=function(e){return p[e]},this.aliasOperator=function(e,t){var n,r={},i=p[e];for(n in i)r[n]=i[n];r.operator=t,this.setOperator(r)},this.getOperators=function(){return p},this.getBrackets=function(){return f},this.initConstants=function(){this.CONSTANTS={E:new Fe(u.E),PI:new Fe(u.PI)}},this.pretty_print=function(t){if(Array.isArray(t)){var n=t.map((t=>e.pretty_print(t))).join(", ");return"vector"===t.type?"vector<"+n+">":"("+n+")"}return t.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(u.callPeekers)for(var t=this.peekers[e],n=fe(arguments).slice(1).map(J),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(t){for(var n in t=(t=String(t)).trim().replace(/\s+/g," "),f){var r=new RegExp(f[n].is_close?"\\s+\\"+n:"\\"+n+"\\s+","g");t=t.replace(r,n)}for(var i=0,s=t.length,a=0,u=[],l=[u],c=l[0],m=0,g=[],v=!1,d=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,l.push(n),c.push(n),c=n,m++},w=function(){l.pop(),c=l[--m]},y=function(n,r){(r=void 0===r?t.substring(a,n):r)in e.units?c.push(new o(r,o.UNIT,a)):""!==r&&c.push(new o(r,o.VARIABLE_OR_LITERAL,a))},b=function(e){c.push(new o(e,o.FUNCTION,a))},S=function(e){a=e+1};i<s;i++){var M=t.charAt(i);if(M in p){y(i);var N=c[0]&&G(c[0]);v&&a<i&&","!==M&&!(N&&"*"===M)&&(v=!1,w()),S(i+1);var E=function(e){for(var n=(e=void 0!==e?e:i)+1;t.charAt(n++)in p;);return t.substring(e,n-1)}(i);i=(a=a+E.length-2)-1,c.push.apply(c,function(e){for(var t=i-e.length,n=[],r=e.charAt(0),s=1,a=e.length;s<a;s++){var u=e.charAt(s),l=r+u;r=l in p?l:(n.push(new o(r,o.OPERATOR,t+s)),u)}return n.push(new o(r,o.OPERATOR,t+s)),n}(E))}else if(M in f){var x,q=f[M];if(q.is_open)g.push([q,a]),(x=t.substring(a,i))in h?b(x):""!==x&&c.push(new o(x,o.VARIABLE_OR_LITERAL,a)),d(q.maps_to,i);else if(q.is_close){var A=g.pop();if(!A)throw new Ee("Missing open bracket for bracket at: "+(i+1));if(A[0].id!==q.id-1)throw new Ee("Parity error");y(i),w()}S(i)}else" "===M&&(A=t.substring(a,i),q=t.charAt(i+1),v?(A in p?c.push(new o(A,o.OPERATOR,i)):(y(void 0,A),w(),((M=q in p)&&"-"===p[q].value||!M)&&c.push(new o("*",o.OPERATOR,i))),v=!1):(x=t.substring(a,i))in h?(v=!0,b(x),d()):x in p?c.push(new o(x,o.OPERATOR,i)):(y(void 0,x),q=t.charAt(i+1),""===A||""===q||A in p||q in p||c.push(new o("*",o.OPERATOR,i))),S(i))}if(g.length){var C=g.pop();throw new Ee("Missing closed bracket for bracket at "+(C[1]+1))}return y(i),u},this.toRPN=function(e){for(var t=e.type,n=e.length,r=[],i=[],s=[],a=function(e,t){for(;e.length;)t.push(e.pop())},u=0;u<n;u++){var l=e[u];if(l.type!==o.OPERATOR)break;if(!l.prefix)throw new xe("Not a prefix operator");l.is_prefix=!0,i.push(l)}for(;u<n;u++){var c=e[u];if(c.type===o.OPERATOR){var p=c;for(p.overloaded&&(m=e[u+1])&&m.type===o.VARIABLE_OR_LITERAL&&(p.postfix=!1,p.action=p.overloadAction,p.leftAssoc=p.overloadLeftAssoc);i.length;){var f=i[i.length-1];if(!(f.precedence>p.precedence||!p.leftAssoc&&f.precedence===p.precedence))break;r.push(i.pop())}if(("vector"===t||"set"===t)&&"vectorFn"in p&&(p.action=p.vectorFn),p.postfix){var h=e[u-1];if(!h)throw new xe("Unexpected prefix operator '"+c.value+"'! at "+c.column);if(h.type===o.OPERATOR&&!h.postfix)throw new xe("Unexpected prefix operator '"+h.value+"'! at "+h.column)}else do{var m,g=!!(m=e[u+1])&&m.type===o.OPERATOR;if(g){if(!m.prefix)throw new xe("A prefix operator was expected at "+m.column);m.is_prefix=!0,s.push(m),u++}}while(g);for((p.is_prefix?s:i).push(p);s.length&&(p.leftAssoc||!p.leftAssoc&&s[s.length-1].precedence>=p.precedence);)i.push(s.pop())}else c.type===o.VARIABLE_OR_LITERAL?(0===r.length&&a(s,i),r.push(c),(h=i[i.length-1])&&h.leftAssoc||a(s,r)):c.type===o.FUNCTION?i.push(c):c.type===o.UNIT&&r.push(c);Array.isArray(c)&&(r.push(this.toRPN(c)),c.type&&r.push(new o(c.type,o.FUNCTION,c.column)))}return a(i,r),a(s,r),r},this.parseRPN=function(t,n){try{for(var r in n=n||{})n[r]=e.parse(n[r],{});u.PARSE2NUMBER&&("e"in n||(n.e=new Fe(u.E)),"pi"in n||(n.pi=new Fe(u.PI)));for(var a=[],l=0,c=t.length;l<c;l++){var p=t[l];if(p=Array.isArray(p)?this.parseRPN(p,n):p)if(p.type===o.OPERATOR)if(p.is_prefix||p.postfix)a.push(p.operation(a.pop()));else{var f=a.pop(),h=a.pop();if(void 0===h)throw new xe(p+" is not a valid postfix operator at "+p.column);var m="comma"===p.action;h instanceof Xe&&!m&&(h=je.fromSet(h)),f instanceof Xe&&!m&&(f=je.fromSet(f)),this.callPeekers("pre_operator",h,f,p);var g=e[p.action](h,f);this.callPeekers("post_operator",g,h,f,p),a.push(g)}else if(p.type===o.FUNCTION){var v=a.pop(),d=v.parent;v instanceof s||(v=s.create(v));var w=p.value,y=v.getItems();this.callPeekers("pre_function",w,y);var b=e.callfunction(w,y);this.callPeekers("post_function",b,w,y);var S=a[a.length-1],M=t[l+1];if(M&&M.type===o.OPERATOR&&","===M.value||!(b instanceof je)||!S||!S.elements||S instanceof s)d&&(b.parent=d),a.push(b);else{var N=a.pop(),E=b.elements[0];if(E.isConstant())if(E instanceof i)a.push(je.fromArray(N.elements.slice(E.start,E.end)));else{var x=Number(E),q=N.elements.length;if((x=x<0?q+x:x)<0||q<=x)throw new qe("Index out of range "+(p.column+1));var A=N.elements[x];N.getter=x,A.parent=N,a.push(A)}else N.getter=E,a.push(N),a.push(b)}}else{var C,I=p.value;I in u.ALIASES?p=e.parse(u.ALIASES[p]):p.type===o.VARIABLE_OR_LITERAL?p=new Fe(I):p.type===o.UNIT&&((p=new Fe(I)).isUnit=!0),I in e.CONSTANTS?(C=p,p=new Fe(e.CONSTANTS[I])):I in n&&I!==n[I].toString()?(C=p,p=n[I].clone()):I in _&&(C=p,p=_[I].clone()),C&&(p.subbed=C),a.push(p)}}var U=a[0];if(-1!==["undefined","string","number"].indexOf(typeof U))throw new _e("Unexpected token!");return U}catch(n){throw[Se].forEach((function(e){if(n instanceof e)throw new e(n.message+": "+p.column)})),new ye(n.message+": "+p.column)}},m.prototype.toString=function(){var e=this.left?this.left.toString()+"---":"",t=this.right?"---"+this.right.toString():"";return e+"("+this.value+")"+t},m.prototype.toHTML=function(e,t){function n(e){return" ".repeat(t*e)}e=e||0,t=void 0===t?4:t;var r="",i=this.left?n(e+1)+"<li>\n"+this.left.toHTML(e+2,t)+n(e+1)+"</li> \n":"",s=this.right?n(e+1)+"<li>\n"+this.right.toHTML(e+2,t)+n(e+1)+"</li>\n":"";return r=n(e)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+n(e)+"\n",(i||s)&&(r+=n(e)+"<ul>\n"+i+s+n(e)+"</ul>\n"),r+""},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===o.OPERATOR)r.is_prefix||r.postfix?(s=r.is_prefix?"left":"right",i=t.pop(),(r=new m(r))[s]=i):((r=new m(r)).right=t.pop(),r.left=t.pop()),t.push(r);else if(r.type===o.FUNCTION){r=new m(r);var i,s=t.pop();if(r.right=s,"object"===r.value&&(i=t[t.length-1])){for(;i.right;)i=i.right;i.right=r;continue}t.push(r)}else t.push(new m(r))}return t[0]},this.parse=function(e,t){return e=function(e){e=String(e);for(var t=0;t<n.actions.length;t++)e=n.actions[t].call(this,e);for(e=e.replace(/\s+/g," "),e=(e=/e/gi.test(e)?e.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,(function(e){return F(e)})):e).replace(u.IMPLIED_MULTIPLICATION_REGEX,(function(){var e=arguments[4],t=arguments[2],n=arguments[3],r="",i="*";return arguments[1]+(i=(r=e.charAt(n).match(/[\+\-\/\*]/)?r:e.charAt(n-1)).match(/[a-z]/i)?"":i)+t})).replace(/([a-z0-9_]+)/gi,(function(e,t){return!1===u.USE_MULTICHARACTER_VARS&&!(t in h)&&isNaN(t)?t.split("").join("*"):t})).replace(/\)\(/g,")*(")||"0";e!==(e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,(function(e,t,n,r,i){return i=n||i,(r=t||r)in h?r+i:r+"*"+i}))););return e}(e),t=t||{},e=this.tokenize(e),e=this.toRPN(e),this.parseRPN(e,t)},this.toObject=function(t){var n=function(t){for(var r=[],i=0,s=t.length;i<s;i++){var a,u=t[i],l=u.value;u.type===o.VARIABLE_OR_LITERAL?r.push(new Fe(l)):u.type===o.FUNCTION?(i++,(a=e.symfunction(l,n(t[i]))).isConversion=!0,r.push(a)):u.type===o.OPERATOR?r.push(l):r.push(n(u))}return r};return n(e.tokenize(t))},this.toTeX=function(t,n){var r=!0===(n=n||{}).decimals?"decimals":void 0,i="string"==typeof t?this.toObject(t):t,s=[],o=void 0===n.cdot?"\\cdot":n.cdot;if(i=function(e){for(var t=[];e.length;){var n,r,i=e.shift(),s=e[0],o=Y(s),a="-"===s;"^"===i&&("+"===s?e.shift():o&&"+"===s[0]&&s.shift(),o&&1===s.length&&e.unshift(e.shift()[0])),"^"===i&&(o&&"-"===s[0]||a)?(n=t.pop(),r="1","*"===(a=t[t.length-1])?(t.pop(),r=t.pop()):Y(a)&&(r=t.pop()),t.push(r,"/",n,i),(o?s:e).shift(),o&&1===s.length&&t.push(e.shift()[0])):t.push(i)}return t}(i),Y(i)){for(var a,l,c=[],p=0;p<i.length;p++)a=i[p],"^"===i[p+1]?(l=i[p+2],c.push(Ve.braces(this.toTeX([a]))+"^"+Ve.braces(this.toTeX([l]))),p+=2):c.push(a);i=c}p=0;for(var f=i.length;p<f;p++){var h=i[p];if(j(h="*"===h?o:h))if(h.group===S){var m,d=h.fname;if(d===A)y="\\sqrt"+Ve.braces(this.toTeX(h.args));else if(d===C)y=Ve.brackets(this.toTeX(h.args),"abs");else if(d===q)y=Ve.brackets(this.toTeX(h.args),"parens");else if(d===u.LOG10)y="\\"+u.LOG10_LATEX+"\\left( "+this.toTeX(h.args)+"\\right)";else if("integrate"===d)var w=g(h.args),y="\\int "+(b=Ve.braces(this.toTeX(w[0])))+"\\, d"+(M=this.toTeX(w[1]));else if("defint"===d){w=g(h.args);var b=Ve.braces(this.toTeX(w[0])),M=this.toTeX(w[3]);y="\\int\\limits_{"+this.toTeX(w[1])+"}^{"+this.toTeX(w[2])+"} "+b+"\\, d"+M}else if("diff"===d){if(w=g(h.args),M="",b=Ve.braces(this.toTeX(w[0])),1===w.length){for(var N=[],E=0;E<w[0].length;E++)3===w[0][E].group&&N.push(w[0][E].value);N.sort(),M=0<N.length?"\\frac{d}{d "+N[0]+"}":"\\frac{d}{d x}"}else M=2===w.length?"\\frac{d}{d "+w[1]+"}":"\\frac{d^{"+w[2]+"}}{d "+this.toTeX(w[1])+"^{"+w[2]+"}}";y=M+"\\left("+b+"\\right)"}else if("sum"===d||"product"===d){var x=[[],[],[],[]];for(E=0,p=0;p<h.args.length;p++)","!==h.args[p]?x[E].push(h.args[p]):E++;y=("sum"===d?"\\sum_":"\\prod_")+Ve.braces(this.toTeX(x[1])+" = "+this.toTeX(x[2])),y+="^"+Ve.braces(this.toTeX(x[3]))+Ve.braces(this.toTeX(x[0]))}else y="limit"===d?(m=g(h.args).map((function(t){return Array.isArray(t)?e.toTeX(t.join("")):e.toTeX(String(t))})),"\\lim_"+Ve.braces(m[1]+"\\to "+m[2])+" "+Ve.braces(m[0])):d===I||d===U?this.toTeX(h.args)+(d===I?"!":"!!"):Ve.latex(h,r);s.push(y)}else s.push(Ve.latex(h,r));else Y(h)?s.push(Ve.brackets(this.toTeX(h))):"/"===h?s.push(Ve.frac(v(s.pop()),v(this.toTeX([i[++p]])))):s.push(h)}return s.join(" ")},this.expand=Le,this.round=Ne,this.clean=function t(n){var r,i,s,o,a,u,l,c=n.group;return c===E?(i=n.getNum(),s=n.getDenom()||new Fe(1),o=Number(n.power),a=new Fe(1),1===Math.abs(o)&&(s.each((function(n){n.group===N?a=e.multiply(a,t(n.getDenom())):n.power.lessThan(0)&&(a=e.multiply(a,t(n.clone().toUnitMultiplier())))})),u=new Fe(0),s.each((function(t){u=e.add(e.divide(t,a.clone()),u)})),a.invert(),i.isComposite()?(l=new Fe(0),i.each((function(n){l=e.add(e.multiply(t(n),a.clone()),l)}))):l=e.multiply(a,i),r=e.divide(l,u))):c===N?(r=new Fe(1),n.each((function(t){r=e.multiply(r,e.clean(t))}))):c===S&&1===n.args.length&&n.args[0].isConstant()&&(r=pe("PARSE2NUMBER",(function(){return e.parse(n)}),!0)),r=r||n},this.sqrt=D,this.cbrt=B,this.abs=x,this.log=Me,this.rationalize=R,this.nthroot=V,this.arg=le,this.conjugate=te,this.imagpart=K,this.realpart=X,this.getFunction=function(e){return h[e][0]},this.addPreprocessor=function(e,t,r,i){var s=n.names,o=n.actions;if("function"!=typeof t)throw new PreprocessorError("Incorrect parameters. Function expected!");r?i?(s.splice(r,0,e),o.splice(r,0,t)):(s[r]=e,o[r]=t):(s.push(e),o.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){e=n.names.indexOf(e),t?(ce(n.names,e),ce(n.actions,e)):(n.names[e]=void 0,n.actions[e]=void 0)},this.mapped_function=function(){for(var t={},n=this.params,r=0;r<n.length;r++)t[n[r]]=String(arguments[r]);return e.parse(this.body,t)},this.add=function(t,n){var r=j(t),i=j(n);if(r&&i){if(t.unit||n.unit)return e.Unit.add(t,n);if(t.isInfinity||n.isInfinity){var s=t.multiplier.lessThan(0),o=n.multiplier.lessThan(0);if(t.isInfinity&&n.isInfinity&&s!==o)throw new be("("+t+")+("+n+") is not defined!");var a=Fe.infinity();return o&&a.negate(),a}if(t.isComposite()&&t.isLinear()&&n.isComposite()&&n.isLinear()&&(t.distributeMultiplier(),n.distributeMultiplier(),n.length>t.length&&t.group===n.group&&([t,n]=[n,t])),t.multiplier.equals(0))return n;if(n.multiplier.equals(0))return t;if(t.isConstant()&&n.isConstant()&&u.PARSE2NUMBER)return new Fe(t.multiplier.add(n.multiplier).toDecimal(u.PRECISION));var l=t.group,c=n.group,p=t.power.toString(),f=n.power.toString();if(l<c||l===c&&f<p&&0<f)return this.add(n,t);l===N&&c===M&&t.value===n.value&&(I=t,l=(t=n).group,c=(n=I).group,p=t.power.toString(),f=n.power.toString());var h,m,g,v,x=p===f;if(s=t.value,o=n.value,a=t.isComposite(),p=n.isComposite(),a&&(h=Re(t,"hash")),p&&(m=Re(n,"hash")),l===E&&c===E&&n.isLinear()&&!t.isLinear()&&h!==m)return this.add(n,t);if(l===M&&c===M&&(s=h,o=m),f=l===w&&c===d,p=t.value===n.multiplier.toString(),(p=s===o||h===m&&void 0!==h||f&&p)&&x&&l===c)if(f&&(n=n.convert(w)),l!==M||c!==y&&c!==w)if((g=t).multiplier.isOne()&&n.multiplier.isOne()&&l===E&&t.isLinear()&&n.isLinear())for(var q in n.symbols){var C=n.symbols[q];g.attach(C)}else g.multiplier=g.multiplier.add(n.multiplier);else t.distributeMultiplier(),g=t.attach(n);else if(p&&l!==M)l===E&&c===M?(n.insert(t,"add"),g=n):(g=Fe.shell(M).attach([t,n])).value=l===M?h:s;else if(a&&t.isLinear())if(s=l===c,(a=l===M&&c===M)&&(s=t.value===n.value),t.distributeMultiplier(),n.isComposite()&&n.isLinear()&&s){for(var q in n.distributeMultiplier(),n.symbols)C=n.symbols[q],t.attach(C);g=t}else a&&t.value!==m||l===M&&!p?(g=Fe.shell(E).attach([t,n])).updateHash():g=t.attach(n);else l===S&&t.fname===A&&c!==b&&n.power.equals(.5)&&(v=n.multiplier.clone(),(n=D(n.toUnitMultiplier().toLinear())).multiplier=v),2===t.length&&2===n.length&&oe(t.power)&&oe(n.power)?g=e.add(Le(t),Le(n)):(g=Fe.shell(E).attach([t,n])).updateHash();return 1===(g=g.multiplier.equals(0)?new Fe(0):g).length&&(v=g.multiplier,(g=ne(g.symbols)).multiplier=g.multiplier.multiply(v)),g}i&&!r&&(I=t,t=n,n=I,I=i,i=r,r=I);var I=z(n);if(r&&I){var U=new He;n.eachElement((function(n,r,i){U.set(r,i,e.add(t.clone(),n))})),n=U}else if(z(t)&&I)n=t.add(n);else if(r&&Z(n))n.each((function(r,i){n.elements[--i]=e.add(t.clone(),n.elements[i])}));else if(Z(t)&&Z(n))n.each((function(r,i){n.elements[--i]=e.add(t.elements[i],n.elements[i])}));else{if(Z(t)&&z(n))return e.add(n,t);if(z(t)&&Z(n)){if(n.elements.length===t.rows()){U=new He;var L=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<L;s++)i.push(e.add(t.elements[r-1][s].clone(),n.clone()));U.elements.push(i)})),U}T("Dimensions must match!")}}return n},this.subtract=function(t,n){var r=j(t),i=j(n);if(r&&i)return t.unit||n.unit?e.Unit.subtract(t,n):this.add(t,n.negate());if(i&&Z(t))n=t.map((function(t){return e.subtract(t,n.clone())}));else if(r&&Z(n))n=n.map((function(n){return e.subtract(t.clone(),n)}));else if(Z(t)&&Z(n))t.dimensions()===n.dimensions()?n=t.subtract(n):e.error("Unable to subtract vectors. Dimensions do not match.");else if(z(t)&&Z(n)){if(n.elements.length===t.rows()){var s=new He,o=t.cols();return n.each((function(n,r){for(var i=[],a=0;a<o;a++)i.push(e.subtract(t.elements[r-1][a].clone(),n.clone()));s.elements.push(i)})),s}T("Dimensions must match!")}else{if(Z(t)&&z(n))return s=n.clone().negate(),e.add(s,t);z(t)&&z(n)?n=t.subtract(n):z(t)&&i?(s=new He,t.each((function(t,r,i){s.set(r,i,e.subtract(t,n.clone()))})),n=s):r&&z(n)&&(s=new He,n.each((function(n,r,i){s.set(r,i,e.subtract(t.clone(),n))})),n=s)}return n},this.multiply=function(t,n){var i=j(t),o=j(n);if(i&&n instanceof s)return n.elements.push(t),n;if(i&&o){if(n.isUnit){var a=t.clone();return t.unit=n,a}if(t.unit||n.unit)return e.Unit.multiply(t,n);if(t.isInfinity||n.isInfinity){if(t.equals(0)||n.equals(0))throw new be(t+"*"+n+" is undefined!");if(n.power.lessThan(0)){if(t.isInfinity)throw new be("Infinity/Infinity is not defined!");return new Fe(0)}var l=t.multiplier.multiply(n.multiplier).sign(),c=Fe.infinity();if(t.isConstant()||n.isConstant()||t.isInfinity&&n.isInfinity)return l<0&&c.negate(),c}if(t.isConstant()&&n.isConstant()&&u.PARSE2NUMBER)return new Fe(g=new r(t.multiplier.toDecimal()).times(new r(n.multiplier.toDecimal())).toFixed());if(t.isOne())return n.clone();if(n.isOne())return t.clone();if(t.multiplier.equals(0)||n.multiplier.equals(0))return new Fe(0);if(n.group>t.group&&n.group!==E)return this.multiply(n,t);t.group===N&&n.group===M&&t.value===n.value&&(g=t,t=n,n=g);var p=t.group,f=n.group,h=n.multiplier.num,m=n.multiplier.den;p!==S||t.fname!==A||n.isConstant()||t.args[0].value!==n.value||t.args[0].multiplier.lessThan(0)?p===S&&t.fname===A&&t.multiplier.equals(1)&&t.power.equals(-1)&&n.isConstant()&&t.args[0].equals(n)&&(t=e.symfunction(A,[n.clone()]),n=new Fe(1)):(q=t.power,x=e.parse(t.multiplier),(t=e.multiply(x,t.args[0].clone())).setPower(new De(.5).multiply(q)),p=t.group);var g,v=t.value,x=(c=n.value,l=new De(t.sign()),p===w&&f===d&&n.multiplier.equals(t.value)),q=(x?new De(1).multiply(t.multiplier):t.multiplier.multiply(n.multiplier)).abs();if(a=t.clone().toUnitMultiplier(),n=n.clone().toUnitMultiplier(!0),p===S&&f===S){var C=t.args[0].clone(),U=n.args[0].clone();if(t.fname===A&&n.fname===A&&t.isLinear()&&n.isLinear()){var L=e.divide(C,U).invert();L.gt(1)&&W(L)&&(a=e.multiply(t.args[0].clone(),D(L.clone())),n=new Fe(1))}else if(t.fname===I&&n.fname===I&&!C.isConstant()&&!U.isConstant()&&n.power<0&&(L=e.subtract(C.clone(),U.clone())).isConstant())if(g=new Fe(1),L<0){for(var _=0,O=Math.abs(L);_<=O;_++){var R=e.add(C.clone(),new Fe(_));g=e.multiply(g,R)}a=e.multiply(e.pow(C,new Fe(t.power)),e.pow(g,new Fe(n.power))),n=new Fe(1)}else{for(_=0,O=Math.abs(L);_<=O;_++)R=e.add(U.clone(),new Fe(_)),g=e.multiply(g,R);a=e.multiply(e.pow(g,new Fe(t.power)),e.pow(U,new Fe(n.power))),n=new Fe(1)}}if(v===c&&p===M&&p===f&&(v=t.text("hash"),c=n.text("hash")),(v=f===b&&n.previousGroup===M&&p===M?Re(t,"hash",b):v)!==c&&!x||p===M&&(f===y||f===w||f===S)||p===M&&f===N)if(p===N&&t.isLinear())if(f===N&&n.distributeExponent(),f===N&&n.isLinear()){for(var R in n.symbols){var P=n.symbols[R];a=a.combine(P)}a.multiplier=a.multiplier.multiply(n.multiplier)}else a.combine(n);else p!==d?p===N?(a.distributeExponent(),a.combine(n)):n.isOne()||(B=n.multiplier.clone(),n.toUnitMultiplier(),(a=Fe.shell(N).combine([a,n])).multiplier=a.multiplier.multiply(B)):a=n.clone().toUnitMultiplier();else{var k=t.power,F=n.power,B=j(k),G=j(F);G=B||G,p===M&&f!==M&&n.previousGroup!==M&&k.equals(1)?(a=new Fe(0),t.each((function(t){a=e.add(a,e.multiply(t,n.clone()))}),!0)):(a.power=G?e.add(j(k)?k:new Fe(k),j(F)?F:new Fe(F)):p===d?k:k.add(F),a.power.equals(0)&&(a=a.convert(d)),G&&a.convert(b),t.imaginary&&n.imaginary&&oe(a.power%2)&&(a=new Fe(1),q.negate()),a.group!==b&&a.previousGroup&&(a.previousGroup=void 0),a.multiplier=a.multiplier.multiply(n.multiplier))}return a.group===w&&(p=Math.log(a.value),k=Math.log(h)/p,F=Math.log(m)/p,G=q.num/h,p=q.den/m,0!=k&&W(k)&&W(G)&&(a.power=a.power.add(new De(k)),q.num/=h),0!=F&&W(F)&&W(p)&&(a.power=a.power.subtract(new De(F)),q.den/=m)),1===a.length&&(g=a.multiplier,(a=ne(a.symbols)).multiplier=a.multiplier.multiply(g)),m=a.power.toString(),oe(m)&&a.fname===A?(l*=a.sign(),m=a.power,a=a.args[0],a=e.multiply(new Fe(q),e.pow(a,new Fe(m.divide(new De(2))))),l<0&&a.negate()):(a.multiplier=a.multiplier.multiply(q).multiply(l),a.group===E&&a.isImaginary()&&a.distributeMultiplier()),a=a.group===w&&W(a.power.toDecimal())?a.convert(d):a}if(o&&!i&&(g=t,t=n,n=g,g=o,o=i,i=g),l=z(n),o=z(t),i&&l){var V=new He;n.eachElement((function(n,r,i){V.set(r,i,e.multiply(t.clone(),n))})),n=V}else if(o&&l)n=t.multiply(n);else if(i&&Z(n))n.each((function(r,i){n.elements[--i]=e.multiply(t.clone(),n.elements[i])}));else if(Z(t)&&Z(n))n.each((function(r,i){n.elements[--i]=e.multiply(t.elements[i],n.elements[i])}));else{if(Z(t)&&z(n))return this.multiply(n,t);if(z(t)&&Z(n)){if(n.elements.length===t.rows()){V=new He;var H=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<H;s++)i.push(e.multiply(t.elements[r-1][s].clone(),n.clone()));V.elements.push(i)})),V}T("Dimensions must match!")}}return n},this.divide=function(t,n){var r=j(t),i=j(n);if(r&&i){if(t.unit||n.unit)return e.Unit.divide(t,n);if(n.equals(0))throw new we("Division by zero not allowed!");return t.isConstant()&&n.isConstant()?(s=t.clone()).multiplier=s.multiplier.divide(n.multiplier):(n.invert(),s=e.multiply(t,n)),s}var s,o,a=Z(t),u=Z(n);return r&&u?n=n.map((function(n){return e.divide(t.clone(),n)})):a&&i?n=t.map((function(t){return e.divide(t,n.clone())})):a&&u?t.dimensions()===n.dimensions()?n=n.map((function(n,r){return e.divide(t.elements[--r],n)})):e.error("Cannot divide vectors. Dimensions do not match!"):(s=z(t),a=z(n),s&&i?(o=new He,t.eachElement((function(t,r,i){o.set(r,i,e.divide(t,n.clone()))})),n=o):r&&a?(o=new He,n.eachElement((function(n,r,i){o.set(r,i,e.divide(t.clone(),n))})),n=o):s&&a?(o=new He,t.rows()===n.rows()&&t.cols()===n.cols()?(t.eachElement((function(t,r,i){o.set(r,i,e.divide(t,n.elements[r][i]))})),n=o):e.error("Dimensions do not match!")):s&&u&&(t.cols()===n.dimensions()?(o=new He,t.eachElement((function(t,r,i){o.set(r,i,e.divide(t,n.elements[r].clone()))})),n=o):e.error("Unable to divide matrix by vector."))),n},this.pow=function(t,n){var i,s=j(t),o=j(n);if(s&&o){if(t.unit||n.unit)return e.Unit.pow(t,n);if(t.group===S&&t.fname===C&&oe(n)){var a=t.multiplier.clone();return(g=e.pow(t.args[0],n)).multiplier=a,g}if(t.isInfinity||n.isInfinity){if(t.isInfinity&&n.isInfinity)throw new be("("+t+")^("+n+") is undefined!");if(t.isConstant()&&n.isInfinity){if(t.equals(0)){if(n.lessThan(0))throw new be("0^Infinity is undefined!");return new Fe(0)}if(t.equals(1))throw new be("1^"+n.toString()+" is undefined!");if(n.lessThan(0))return new Fe(0);if(!t.lessThan(0))return Fe.infinity()}if(t.isInfinity&&n.isConstant()){if(n.equals(0))throw new be(t+"^0 is undefined!");return n.lessThan(0)?new Fe(0):e.multiply(Fe.infinity(),e.pow(new Fe(t.sign()),n.clone()))}}var c=t.equals(0),p=n.equals(0);if(c&&p)throw new be("0^0 is undefined!");if(c&&n.isConstant()&&n.multiplier.greaterThan(0))return new Fe(0);if(p)return new Fe(1);var f,h=n.isConstant(),m=t.isConstant(),g=n.isInteger();if(a=t.multiplier,c=t.clone(),m&&h&&t.equals(0)&&n.lessThan(0))throw new be("Division by zero is not allowed!");if(u.PARSE2NUMBER&&m&&h&&t.sign()<0&&ae(n)){var v=Math.PI*n;return O=new Fe(Math.cos(v)),U=e.multiply(Fe.imaginary(),new Fe(Math.sin(v))),e.add(O,U)}if(u.PARSE2NUMBER&&t.isImaginary()&&h&&W(n)&&!n.lessThan(0)&&(O=t.realpart(),U=t.imagpart(),O.isConstant("all")&&U.isConstant("all")))return p=u.USE_BIG?Fe(r.atan2(I.multiplier.toDecimal(),_.multiplier.toDecimal()).times(n.toString())):Math.atan2(U,O)*n,f=new Fe(p),_=e.pow(Fe.hyp(O,U),n),v=e.multiply(_.clone(),e.trig.cos(f.clone())),p=e.multiply(_,e.trig.sin(f)),e.add(v,e.multiply(Fe.imaginary(),p));if(c.toUnitMultiplier(),c.group!==S||c.fname!==A||h?(G=a.sign(),ae(n)&&G<0&&(c.negate(),(c=e.symfunction(q,[c])).negate()),c.multiplyPower(n)):((P=c.args[0]).multiplyPower(new Fe(.5)),P.multiplier.multiply(c.multiplier),P.multiplyPower(n),c=P),m&&h&&u.PARSE2NUMBER)G<0&&(t.negate(),M=n.multiplier.den.equals(2)?new Fe(u.IMAGINARY):W(n.multiplier)?oe(n.multiplier)?new Fe(1):new Fe(-1):oe(n.multiplier.den)?e.pow(e.symfunction(q,[new Fe(G)]),n.clone()):new Fe(Math.pow(G,n.multiplier.num))),c=new Fe(Math.pow(t.multiplier.toDecimal(),n.multiplier.toDecimal())),M&&(c=e.multiply(c,M));else if(g&&!a.equals(1)){if(n.abs().gt(u.MAX_EXP))return n.sign()<0?new Fe(0):Fe.infinity();var y=n.multiplier.toDecimal(),M=Math.sign(y);y=Math.abs(y);var E=new De(1);E.num=a.num.pow(y),E.den=a.den.pow(y),M<0&&E.invert(),c.multiplier=c.multiplier.multiply(E)}else{var I,U,L,_,O,R,T,P,D,F,B,G=t.sign();n.isConstant()&&t.isConstant()&&!n.multiplier.den.equals(1)&&G<0?c=n.multiplier.den.equals(2)?(I=new Fe(u.IMAGINARY),t.negate(),n.lessThan(0)&&(I.negate(),n.negate()),e.multiply(e.pow(t,n),I)):((L=t.clone()).multiplier.negate(),c=e.pow(e.symfunction(q,[new Fe(G)]),n.clone()),E=e.pow(new Fe(L.multiplier.num),n.clone()),I=e.pow(new Fe(L.multiplier.den),n.clone()),_=e.divide(E,I),e.multiply(c,_)):u.PARSE2NUMBER&&n.isImaginary()?(O=n.realpart(),U=n.imagpart(),L=t.clone().toLinear(),_=e.pow(L.clone(),O),D=Me(L.clone()),O=l.cos(e.multiply(U.clone(),D)),D=e.multiply(l.sin(e.multiply(U,Me(L))),Fe.imaginary()),c=e.multiply(_,e.add(O,D)),c=e.expand(e.parse(c))):(R=Pe(new Fe((D=t.group===d&&G<0)?a.num:Math.abs(a.num)).setPower(n.clone())),T=Pe(new Fe(a.den).setPower(n.clone()).invert()),t.imaginary&&(g?(P=Math.sign(n),y=x(n),c=new Fe(oe(F=y%4)?-1:u.IMAGINARY),(0===F||P<0&&1===F||0<P&&3===F)&&c.negate()):(g=n.multiplier.multiply(De.quick(1,2)),P=Math.pow(-1,g.num),c=oe(g.den)?new Fe(-1).setPower(g,!0):new Fe(P))),G<0&&!D&&c.negate(),h&&t.group!==b&&(G=oe(n.multiplier.den),D=oe(t.power),F=c.power.toDecimal(),h=oe(F),G&&D&&!h&&(c=1===F?e.symfunction(C,[c]):W(F)?e.multiply(e.symfunction(C,[c.clone().toLinear()]),c.clone().setPower(new De(F-1))):(y=c.power,e.symfunction(C,[c.toLinear()]).setPower(y)),u.POSITIVE_MULTIPLIERS&&c.fname===C&&(c=c.args[0]))),n.equals(2)&&c.group===N&&(B=new Fe(1),c.each((function(t){B=e.multiply(B,e.pow(t,n))})),c=B))}return c=Pe(c),(c=R&&T?e.multiply(c,function(e){if(e.group===w){var t=e.value,n=Te(t)[0];if(!n)return k("Unable to compute prime factors. This should not happen. Please review and report."),e;if((t=new De(Math.log(t)/Math.log(n)).multiply(e.power)).den>e.power.den)return e;e=W(t)?Fe(Math.pow(n,t)):new Fe(n).setPower(t)}return e}(e.multiply(R,T))):c).fname===A?(T=((R=c.group===b)?c.power.multiplier:c.power).toString(),oe(T)&&(R=R?e.divide(c.power,new Fe(2)):new Fe(c.power.divide(new De(2))),a=c.multiplier,(c=e.pow(c.args[0],R)).multiplier=c.multiplier.multiply(a))):!u.IGNORE_E&&c.isE()&&c.group===b&&c.power.contains("pi")&&c.power.contains(u.IMAGINARY)&&n.group===N&&(f=n.stripVar(u.IMAGINARY),c=e.add(l.cos(f),e.multiply(Fe.imaginary(),l.sin(f)))),c}return Z(t)&&o?t=t.map((function(t){return e.pow(t,n.clone())})):z(t)&&o?(i=new He,t.eachElement((function(t,r,s){i.set(r,s,e.pow(t,n.clone()))})),t=i):s&&z(n)&&(i=new He,n.eachElement((function(n,r,s){i.set(r,s,e.pow(t.clone(),n))})),t=i),t},this.comma=function(e,t){return(e=e instanceof s?e:s.create(e)).append(t),e},this.mod=O,this.slice=function(e,t){return new i(e,t)},this.equals=function(e,t){return e.group===y||e.isLinear()||T("Cannot set equality for "+e.toString()),_[e.value]=t.clone(),t},this.percent=function(t){return e.divide(t,new Fe(100))},this.assign=function(t,n){if(t instanceof s&&n instanceof s)return t.elements.map((function(t,r){return e.assign(t,n.elements[r])})),je.fromArray(n.elements);if(t.parent){var r=t.parent;return r.elements[r.getter]=n,delete r.getter,r}if(t.group!==y)throw new Ue("Cannot complete operation. Incorrect LH value for "+t);return _[t.value]=n},this.function_assign=function(e,t){var n=e.elements.pop();return re(n,e.elements,t)},this.eq=function(e,t){return ke(e.equals(t))},this.gt=function(e,t){return ke(e.gt(t))},this.gte=function(e,t){return ke(e.gte(t))},this.lt=function(e,t){return ke(e.lt(t))},this.lte=function(e,t){return ke(e.lte(t))},this.factorial=function(e){return this.symfunction(I,[e])},this.dfactorial=function(e){return this.symfunction(U,[e])}}u.FUNCTION_MODULES.push(Oe),le(Oe),Math.sign=Math.sign||function(e){return 0==(e=+e)||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){return((e=Math.exp(e))+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){return((e=Math.exp(e))-1/e)/2},Math.tanh=Math.tanh||function(e){return e===1/0?1:e===-1/0?-1:((e=Math.exp(2*e))-1)/(e+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},Te(314146179365),Pe.getExpression=function(e,t){return"last"!==e&&e||(e=L.length),(e=L[(e="first"===e?1:e)-1])&&new Pe(e)},(Pe.prototype={text:function(e,t){return t=t||u.EXPRESSION_DECP,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):Re(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ve.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(Z(this.symbol)&&0===this.symbol.dimensions())return this;var e,n=arguments[0],r=1;"string"==typeof n?e="%"===n.charAt(0)?Pe.getExpression(n.substr(1)).text():n:n instanceof Pe||j(n)?e=n.text():(e=this.symbol.text(),r--);var i=arguments[r]||{};return new Pe(pe("PARSE2NUMBER",(function(){return t.parse(e,i)}),!0))},buildFunction:function(e){return Ze.build(this.symbol,e)},isNumber:function(){return Q(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return he(t.parse(this.symbol)).isImaginary()},variables:function(){return H(this.symbol)},toString:function(){try{return Y(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}},toDecimal:function(e){return u.precision=e,e=Re(this.symbol,"decimals"),u.precision=void 0,e},isFraction:function(){return V(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,n){return new Pe(this.symbol.sub(t.parse(e),t.parse(n)))},operation:function(e,n){return p(n)?n=n.symbol:j(n)||(n=t.parse(n)),new Pe(t[e](this.symbol.clone(),n.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new Pe(t.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(Y(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){j(e)||(e=t.parse(e));try{return t.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){j(e)||(e=t.parse(e));try{return he(t.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){j(e)||(e=t.parse(e));try{return he(t.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new Pe(this.symbol.getNum())},denominator:function(){return new Pe(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=Pe.prototype.latex,ke.prototype={fromScientific:function(e){return e=String(e).toLowerCase().split("e"),this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=(i=e.split("."))[0]||"",n=i[1]||"",r=(t=ke.removeLeadingZeroes(t),n=ke.removeTrailingZeroes(n),t.length),i=(e=t+n,ke.leadingZeroes(e).length);return this.exponent=r-(i+1),e=ke.removeLeadingZeroes(e),this.coeff=e.charAt(0)+"."+(e.substr(1,e.length)||"0"),e=this.coeff.split(".")[1]||"",this.decp="0"===e?0:e.length,this.dec=n,this.wholes=t,this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new ke(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;return t=u.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e?0===this.decp?this.wholes:this.coeff:(t=void 0===e?this.coeff:ke.round(this.coeff,Math.min(e,this.decp||1)),0===this.exponent?t:t+"e"+this.exponent),(-1===this.sign?"-":"")+t}},ke.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},ke.leadingZeroes=function(e){return(e=e.match(/^(0*).*$/))?e[1]:""},ke.removeLeadingZeroes=function(e){return(e=e.match(/^0*(.*)$/))?e[1]:""},ke.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},ke.round=function(e,t){return e=se(e,t),0<(t-=String(e).split(".").pop().length)&&(e+=new Array(1+t).join(0)),e},De.create=function(e){if(e instanceof De)return e;var t="-"===(e=e.toString()).charAt(0);return e=new De(e=t?e.substr(1,e.length-1):e),t&&e.negate(),e},De.isFrac=function(e){return e instanceof De},De.quick=function(e,t){var r=new De;return r.num=new n(e),r.den=new n(t),r},De.simple=function(e){for(var t=String(F(e)).split("."),n=(e=t.join(""),1),r=(t[1]||"").length,i=0;i<r;i++)n+="0";return De.quick(e,n).simplify()},De.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new we("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num;return e=e.num,t.equals(n)?r.num=i.add(e):(r.num=i.multiply(n).add(e.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone();return e=e.clone(),t.num=t.num.multiply(e.den),t.den=t.den.multiply(e.den),e.num=e.num.multiply(this.den),e.den=e.den.multiply(this.den),t.num=t.num.mod(e.num),t.simplify()},simplify:function(){var e=n.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new De;return e.num=new n(this.num),e.den=new n(this.den),e},decimal:function(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||u.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var l=n.shift();if(0===n.length)return t+l.toString();if(s===e){var c=[];for(s=0;s<2;s++)c.unshift(n.pop());n.push(Math.round(c.join(".")))}return t+(l.toString()+".")+n.join("")},toDecimal:function(e){return(e=e||u.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){return isNaN(e)||(e=new De(e)),(e=this.qcompare(e))[0].equals(e[1])},absEquals:function(e){return isNaN(e)||(e=new De(e)),(e=this.qcompare(e))[0].abs().equals(e[1])},greaterThan:function(e){return isNaN(e)||(e=new De(e)),(e=this.qcompare(e))[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){return isNaN(e)||(e=new De(e)),(e=this.qcompare(e))[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,t=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=t,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return De.quick(n.gcd(e.num,this.num),n.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return u.USE_BIG?new r(this.num.toString()).div(new r(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},Fe.imaginary=function(){var e=new Fe(u.IMAGINARY);return e.imaginary=!0,e},Fe.infinity=function(e){var t=new Fe("Infinity");return-1===e&&t.negate(),t},Fe.shell=function(e,t){return(t=new Fe(t)).group=e,t.symbols={},t.length=0,t},Fe.unwrapSQRT=function(e,t){var n,r=e.power;return e.fname===A&&(e.isLinear()||t)&&((n=e.args[0].clone()).power=n.power.multiply(new De(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new De(.5)))),e},Fe.hyp=function(e,n){return e=e||new Fe(0),n=n||new Fe(0),t.sqrt(t.add(t.pow(e.clone(),new Fe(2)),t.pow(n.clone(),new Fe(2))))},Fe.toPolarFormArray=function(e){var n=e.realpart();return e=e.imagpart(),[Fe.hyp(n,e),n.equals(0)?t.parse("pi/2"):t.trig.atan(t.divide(e,n))]},Fe.unwrapPARENS=function(e){if(""!==e.fname)return e;var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?Fe.unwrapPARENS(t):t},Fe.create=function(e,n){return t.parse("("+e+")^("+(n=void 0===n?1:n)+")")},Fe.prototype={getNth:function(e){var n=he(t.pow(t.parse(this.multiplier),t.parse(e).invert())),r=t.parse(se(n));return he(t.pow(r,t.parse(e))).equals(t.parse(this.multiplier))?r:n},isToNth:function(e){var n,r=this.getNth(e);return r=W(r),this.group===N?(n=!0,this.each((function(t){t.isToNth(e)||(n=!1)}))):n=this.group===d||W(t.divide(t.parse(this.power),t.parse(e))),r&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==N)return this.clone();var e=[],n=this.multiplier.sign();this.each((function(t){if(t=t.power,j(t)||t.equals(1))return this.clone();e.push(t)}));var r,i=new De(h(e)),s=(n=this.multiplier.sign(),this.multiplier.clone().abs()),o=Oe.ifactor(s),a=new De(1),u=new De(1);for(r in o){var l=new De(o[r]);l.lessThan(i)||(l=l.divide(i).subtract(new De(1)),u=u.multiply(new De(r))),a=a.multiply(t.parse(K(r)+"^"+K(l)).multiplier)}var c=new Fe(u);return this.each((function(e){(e=e.clone()).power=e.power.divide(i),c=t.multiply(c,e)})),(s=t.symfunction(q,[c])).power=i,s.multiplier=n<0?a.negate():a,s},equals:function(e){return j(e)||(e=new Fe(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return j(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return j(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return j(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return j(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!W(n)||n<0)return!1;if(t===d||t===y||this.isConstant(!0))return!0;if(n=H(this),t===N&&1===n.length){var r=n[0];if(!r)return!0;for(s in this.symbols){var i=this.symbols[s];if(i.group===S&&!i.args[0].isConstant())return!1;if(!i.contains(r)&&!i.isConstant(!0))return!1}return!0}if(this.isComposite()||t===N&&e){if(!e&&1<n.length)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(e,n){var r;return this.group!==M&&this.group!==y||this.value!==e?this.group===N&&this.isLinear()?(r=new Fe(1),this.each((function(n){n.contains(e,!0)||(r=t.multiply(r,n.clone()))})),r.multiplier=r.multiplier.multiply(this.multiplier)):this.group!==E||this.isLinear()?this.group===E&&this.isLinear()?(r=new Fe(0),this.each((function(n){n.contains(e)||((n=n.clone()).multiplier=n.multiplier.multiply(this.multiplier),r=t.add(r,n))})),r.equals(0)&&(r=new Fe(this.multiplier))):r=this.group===b&&this.power.contains(e,!0)||this.group===S&&this.contains(e)?new Fe(this.multiplier):this.clone():r=new Fe(this.multiplier):r=new Fe(n?0:this.multiplier),r},toArray:function(e,n){n=n||{arr:[],add:function(e,n){var r=this.arr[n];this.arr[n]=r?t.add(r,e):e}};var r=this.group;if(r===y&&this.contains(e))n.add(new Fe(this.multiplier),this.power);else if(r===N){var i=this.stripVar(e),s=(s=t.divide(this.clone(),i.clone())).isConstant()?0:s.power;n.add(i,s)}else if(r===M&&this.value===e)this.each((function(t,r){n.add(t.stripVar(e),r)}));else if(r===E)this.each((function(t){t.toArray(e,n)}));else{if(this.contains(e))throw new Ne("Cannot convert to array! Exiting");n.add(this.clone(),0)}n=n.arr;for(var o=0;o<n.length;o++)n[o]||(n[o]=new Fe(0));return n},hasFunc:function(e){var t=this.group===S||this.group===b;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(e,n){e=j(e)?e.clone():t.parse(e),n=j(n)?n.clone():t.parse(n),e.group!==d&&e.group!==w||T("Cannot substitute a number. Must be a variable");var r,i=!1,s=e.multiplier.equals(1),o=this.multiplier.clone();if(this.value===e.value&&(this.group!==M&&e.group!==M||this.group===M&&e.group===M))(s||e.multiplier.equals(this.multiplier))&&(e.isLinear()?r=n:e.power.equals(this.power)&&(r=n,i=!0),e.multiplier.equals(this.multiplier)&&(o=new De(1)));else if(this.group===N||this.previousGroup===N)r=new Fe(1),this.each((function(i){i=t.parse(i.sub(e,n)),r=t.multiply(r,i)}));else if(this.isComposite()){var a=this.clone();if(e.isComposite()&&a.isComposite()&&a.isLinear()&&e.isLinear()){var u,l=function(e,t){for(var n in e.symbols)if((n=e.symbols[n]).isComposite()&&l(n,t)||n.equals(t))return!0;return!1};for(u in e.symbols)if(!l(a,e.symbols[u]))return a.clone();r=t.add(t.subtract(a.clone(),e),n)}else r=new Fe(0),a.each((function(i){r=t.add(r,i.sub(e,n))}))}else if(this.group===b)r=t.parse(this.value).sub(e,n);else if(this.group===S){for(var c=[],p=0;p<this.args.length;p++){var f=this.args[p];j(f)||(f=t.parse(f)),c.push(f.sub(e,n))}r=t.symfunction(this.fname,c)}return r?(i||(i=this.group===b?this.power.sub(e,n):t.parse(this.power),r=t.pow(r,i)),r.multiplier=r.multiplier.multiply(o),r):this.clone()},isMonomial:function(){if(this.group===y)return!0;if(this.group!==N)return!1;for(var e in this.symbols)if(this.symbols[e].group!==y)return!1;return!0},isPi:function(){return this.group===y&&"pi"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return"e"===this.value},isSQRT:function(){return this.fname===A},isConstant:function(e,t){if(t&&this.group===N)for(var n in this.symbols)if(this.symbols[n].isConstant(!0))return!0;if("functions"===e&&this.isComposite()){var r=!0;return this.each((function(n){n.isConstant(e,t)||(r=!1)}),!0),r}if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===S){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(e))return!1;return!0}return e?Q(this):this.value===x},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new Fe(0);if(this.isComposite()){var e=new Fe(0);return this.each((function(n){e=t.add(e,n.realpart())})),e}return this.isImaginary()?new Fe(0):this.clone()},imagpart:function(){if(this.group===y&&this.isImaginary())return new Fe(this.multiplier);if(this.isComposite()){var e=new Fe(0);return this.each((function(n){e=t.add(e,n.imagpart())})),e}return this.group===N?this.stripVar(u.IMAGINARY):new Fe(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===y)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==N||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)},containsFunction:function(e){if("string"==typeof e&&(e=[e]),this.group===S&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===d&&this.multiplier.equals(1))return this;var n,r=this.power;return this.group!==b&&e.group===d?(n=e.multiplier,this.group!==d||n.isInteger()||this.convert(w),this.power=r.equals(1)?n.clone():r.multiply(n),this.group===w&&W(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(d))):(this.group!==b&&(r=new Fe(r),this.convert(b)),this.power=t.multiply(r,e)),this},setPower:function(e,t){return this.group===d&&this.multiplier.equals(1)||(this.group!==b||j(e)?(n=!1,j(e)&&(e.group===d?e=e.multiplier:n=!0),n=n?b:w,this.power=e,this.group===d&&n&&this.convert(n,t)):(this.group=this.previousGroup,delete this.previousGroup,this.group===d?(this.multiplier=new De(this.value),this.value=x):this.power=e)),this;var n},isInverse:function(){return this.group===b?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new Fe(0),r=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new n(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new n(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new De(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===M&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===d?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Re(this,"decimals")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===S||this.previousGroup===S)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===b){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==E&&this.group!==M||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),j(this.power)?this.power.negate():this.group===N&&t?this.each((function(e){return e.invert()})):this.power&&this.group!==d&&this.power.negate(),this},distributeMultiplier:function(e){if(e=e?this.power.absEquals(1):this.power.equals(1),this.symbols&&e&&this.group!==N&&!this.multiplier.equals(1)){for(var t in this.symbols)(t=this.symbols[t]).multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier();this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,n=this.power;for(e in this.symbols){var r=this.symbols[e];r.group===b?r.power=t.multiply(r.power,new Fe(n)):this.symbols[e].power=this.symbols[e].power.multiply(n)}this.toLinear()}return this},convert:function(e,t){var n;return S<e?(n=this.clone(),this.symbols={},(e===N?n:this).toUnitMultiplier(),this.group===S&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1):e===b?this.group===d&&this.multiplier.equals(1)||(this.group!==b&&(this.previousGroup=this.group),this.group===d?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Re(this,"hash"),this.group=b):e===d?(n=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new Fe(this.group===w?n*Math.pow(this.value,this.power):n).clone(this)):e===w&&this.group===d&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=w),this},insert:function(e,n){var r,i;return j(e)||T("Object "+e+" is not of type Symbol!"),this.symbols&&(i=this.group,S<i&&(i=(r=e.keyForGroup(i))in this.symbols&&this.symbols[r],"add"===n?(n=r,i?(this.symbols[n]=t.add(i,e),this.symbols[n].multiplier.equals(0)&&(delete this.symbols[n],this.length--,0===this.length&&(this.convert(d),this.multiplier=new De(0)))):(this.symbols[r]=e,this.length++)):(e.group===w&&W(e.power)&&e.convert(d),e.group!==b?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),i&&((e=t.multiply(ce(this.symbols,r),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new Fe(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[r]=e,this.length++)),0===this.length&&this.convert(d),this.group!==E&&this.group!==N||this.updateHash())),this},attach:function(e){if(Y(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(Y(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==d)if(this.group===S){for(var e="",t=this.args,n=this.fname===q,r=0;r<t.length;r++)e+=(0===r?"":",")+Re(t[r]);var i=n?"":this.fname;this.value=i+(n?e:K(e))}else this.group!==y&&this.group!==M&&(this.value=Re(this,"hash"))},keyForGroup:function(e){var t,n=this.group;if(n===d)t=this.value;else if(n===y||n===w)t=e===M?this.power.toDecimal():this.value;else if(n===S)t=e===M?this.power.toDecimal():Re(this,"hash");else{if(n===M)return e===N?Re(this,"hash"):e===E?this.power.equals(1)?this.value:K(Re(this,"hash"))+u.POWER_OPERATOR+this.power.toDecimal():e===M?this.power.toString():this.value;n===E?(e===E&&(t=Re(this,"hash")),t=e===M?this.power.toDecimal():this.value):n===N?t=e===M?this.power.toDecimal():Re(this,"hash"):n===b&&(t=e===M?Re(this.power):Re(this,"hash"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols)s=this.symbols[s],!r||s.group!==M&&s.group!==E?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols());else i.push(this);return i.sort(n=null===n?void 0:n)},latex:function(e){return Ve.latex(this,e)},text:function(e){return Re(this,e)},isOne:function(e){return this.group===d?this.multiplier[e?"absEquals":"equals"](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===E||e===M||t===M||t===E},isCombination:function(){var e=this.group,t=this.previousGroup;return e===N||t===N},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return j(e)||(e=new Fe(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===N&&this.power.lessThan(0)?t.expand(e):e).power.lessThan(0)||e.group===b&&e.power.multiplier.lessThan(0)){var n,r=t.parse(e.multiplier.den);(n=e.toUnitMultiplier()).power.negate(),n=t.multiply(r,n)}else if(e.group===N)for(var i in n=t.parse(e.multiplier.den),e.symbols){var s=e.symbols[i];(s.power<0||s.group===b&&s.power.multiplier.lessThan(0))&&(n=t.multiply(n,e.symbols[i].clone().invert()))}else n=t.parse(e.multiplier.den);return n},getNum:function(){var e,n=this.clone();return(n=n.group===N&&n.power.lessThan(0)?t.expand(n):n).power.greaterThan(0)&&n.group!==N||n.group===b&&n.power.multiplier.greaterThan(0)?e=t.multiply(t.parse(n.multiplier.num),n.toUnitMultiplier()):n.group===N?(e=t.parse(n.multiplier.num),n.each((function(n){(0<n.power||n.group===b&&0<n.power.multiplier)&&(e=t.multiply(e,n.clone()))}))):e=t.parse(n.multiplier.num),e},toString:function(){return this.text()}};var Ge={convert:function(e,t){var n,r,i,s;return 0===e?s=[0,1]:e<1e-6||1e20<e?(n=this.quickConversion(Number(e)))[1]<=1e20?(i=e/(r=Math.abs(e)),(s=this.fullConversion(r.toFixed((n[1]+"").length-1)))[0]=s[0]*i):s=n:s=this.fullConversion(e),s},quickConversion:function(e){return function(e){ke.isScientific(e)&&(e=F(e));var t=1===(n=(n="","-"===(e=(t="string"!=typeof(t=e)?t.toString():t).charAt(0))?(t=t.substr(1,t.length),n="-"):"+"===e&&(t=t.substr(1,t.length)),e={sign:n,value:t}).value.split(".")).length?n[0]:n[0]+n[1],n=n[1]?n[1].length:0;return n=`1${"0".repeat(n)}`,"0"!==t&&(t=t.replace(/^0+/,"")),[e.sign+t,n]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){1e4<++o&&(t=!0);var u,l=n+(u=Math.floor(a))*i,c=r+u*s;(u=a-u)<1e-16&&(t=!0),a=1/u,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||30<o)&&(t=!0)}return[l,c]}},Ve={parser:function(){var e,t=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],n=new Be;for(e in n)-1===t.indexOf(e)&&delete n[e];return n.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.getBrackets()["{"].maps_to=void 0,n}(),space:"~",dot:" \\cdot ",latex:function(e,n){if((e=e.clone?e.clone():e)instanceof t.classes.Collection&&(e=e.elements),Y(e)){for(var r=[],i=0;i<e.length;i++){var s=e[i];j(s)||(s=t.parse(s)),r.push(this.latex(s,n))}return this.brackets(r.join(", "),"square")}if(z(e)){var o="\\begin{pmatrix}\n";for(i=0;i<e.elements.length;i++){for(var a=[],u=e.elements[i],l=0;l<u.length;l++)a.push(this.latex(u[l],n));o+=a.join(" & "),i<e.elements.length-1&&(o+="\\\\\n")}return o+"\\end{pmatrix}"}if(Z(e)){for(o="\\left[",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],n)+" "+(i!==e.elements.length-1?",\\,":"");return o+"\\right]"}if($(e)){for(o="\\{",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],n)+" "+(i!==e.elements.length-1?",\\,":"");return o+"\\}"}var c,p="decimal"===n||"decimals"===n,h=(e=e.clone()).power,m=f(h),g=e.multiplier.lessThan(0);if(e.group===w&&p)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),c=p?[String(e.multiplier.toDecimal()),""]:[e.multiplier.num,e.multiplier.den];var v,d=this.value(e,m,n,g);return m&&h.negate(),p?(v=j(h)?Ve.latex(h,n):String(h.toDecimal()),"1"===String(v)&&(v="")):v=j(h)?this.latex(h,n):this.formatFrac(h,!0),(h=["",""])[m?1:0]=v,((g?"-":"")+this.set(c,d,h,e.group===N)).replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,t,n,r){var i,s,o,a,l,c,p=e.group,h=e.previousGroup,m=["",""],g=t?1:0;if(e.isInfinity)m[g]="\\infty";else if(p===y||p===w||h===y||h===w||h===d){(B=this.formatSubscripts(e.value)).replace&&(B=B.replace(/(.+)_$/,"$1\\_"));var v=String(B).split("_");(t=this.greek[v[0]])&&(v[0]=t,B=v.join("_")),(e=this.symbols[v[0]])&&(v[0]=e,B=v.join("_")),m[g]=B}else if(p===S||h===S){for(var M,x,L,_,O=[],R=(v=e.fname,0);R<e.args.length;R++){var T,P="string"==typeof(T=e.args[R])?T:this.latex(T,n);O.push(P)}v===A?m[g]="\\sqrt"+this.braces(O.join(",")):v===C?m[g]=this.brackets(O.join(","),"abs"):v===q?m[g]=this.brackets(O.join(","),"parens"):"limit"===v?m[g]=" \\lim\\limits_{"+O[1]+" \\to "+O[2]+"} "+O[0]:"integrate"===v?m[g]="\\int"+this.braces(O[0])+this.braces("d"+O[1]):"defint"===v?m[g]="\\int\\limits_"+this.braces(O[1])+"^"+this.braces(O[2])+" "+O[0]+" d"+O[3]:v===I||v===U?((T=e.args[0]).power.equals(1)&&(T.isComposite()||T.isCombination())&&(O[0]=this.brackets(O[0])),m[g]=O[0]+(v===I?"!":"!!")):"floor"===v?m[g]="\\left \\lfloor"+this.braces(O[0])+"\\right \\rfloor":"ceil"===v?m[g]="\\left \\lceil"+this.braces(O[0])+"\\right \\rceil":v===u.LOG&&1<O.length?m[g]="\\mathrm"+this.braces(u.LOG)+"_"+this.braces(O[1])+this.brackets(O[0]):v===u.LOG10?m[g]="\\mathrm"+this.braces(u.LOG)+"_"+this.braces(10)+this.brackets(O[0]):"sum"===v?(M=O[0],x=O[1],L=O[2],_=O[3],m[g]="\\sum\\limits_{"+this.braces(x)+"="+this.braces(L)+"}^"+this.braces(_)+" "+this.braces(M)):"product"===v?(M=O[0],x=O[1],L=O[2],_=O[3],m[g]="\\prod\\limits_{"+this.braces(x)+"="+this.braces(L)+"}^"+this.braces(_)+" "+this.braces(M)):"nthroot"===v?m[g]="\\sqrt["+O[1]+"]"+this.braces(O[0]):"mod"===v?m[g]=O[0]+" \\bmod "+O[1]:"realpart"===v?m[g]="\\operatorname{Re}"+this.brackets(O[0]):"imagpart"===v?m[g]="\\operatorname{Im}"+this.brackets(O[0]):(v=""!==v?"\\mathrm"+this.braces(v.replace(/_/g,"\\_")):"",e.isConversion?m[g]=v+this.brackets(O.join(""),"parens"):m[g]=v+this.brackets(O.join(","),"parens"))}else if(e.isComposite()){var k=e.collectSymbols().sort(p===E||h===E?function(e,t){return t.group-e.group}:function(e,t){return e=j(e.power)?-1:e.power,(j(t.power)?-1:t.power)-e}),D=[],F=k.length;for(R=0;R<F;R++)D.push(Ve.latex(k[R],n));var B=D.join("+");m[g]=e.isLinear()&&e.multiplier.equals(1)&&!r?B:this.brackets(B,"parens")}else p!==N&&h!==b&&h!==N||(p===N&&e.distributeExponent(),i=[],s=[],o=[],a=[],c=l=0,p=function(e,t,n){if(1<n&&0<t.length)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\left\(.+\\right\)\^\{.+\}$/g.test(o)||/^\\left\(.+\\right\)$/g.test(o)||(e[s]=Ve.brackets(o,"parens"))}return e},e.each((function(t){var r;f(t.power)?(r=Ve.latex(t.invert(),n),c++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(r=Ve.brackets(r,"parens")),o.push(i.length)),i.push(r)):(r=Ve.latex(t,n),l++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(r=Ve.brackets(r,"parens")),a.push(s.length)),s.push(r))})),p(s,a,l),m[0]=s.join(this.dot),p(i,o,c),m[1]=i.join(this.dot));return m},set:function(e,t,n,r){function i(e){return/^\\left\(.+\\right\)$/.test(e)}var s;n=n&&this.formatP(n),r&&(s=n[0],n[0]=""),t=this.merge(t,n);var o=e[0];return n=e[1],e=t[0],t=t[1],e&&1===Number(o)&&(o=""),1===Number(n)&&(n=""),e=this.join(o,e,i(e)?"":this.dot),t=this.join(n,t,i(t)?"":this.dot),e&&t?(t=this.frac(e,t),r&&s?this.brackets(t)+s:t):e},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:""},formatSubscripts:function(e){for(var t=e.toString().split("_"),n="";1<t.length;)0<t.length&&(n="_"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]="^"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString();return e=e.den.toString(),t&&"1"===n&&"1"===e?"":"1"===e?n:this.frac(n,e)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){return"\\left"+(t={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]}[t=t||"parens"])[0]+e+"\\right"+t[1]},filterTokens:function(e){var t=[];Y(e)&&(t.type=e.type);for(var n=["\\","left","right","big","Big","large","Large"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];"\\"===s.value&&"\\"===o.value?t.push(s):Y(s)?t.push(Ve.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){function t(e){return s[void 0===e?++a:a+=e]}function n(){return Ve.parse(t())}function r(e){return e in o?o[e]:"*"===e&&"&"===s[a+1].value?(t(2),","):"&"===e?(t(),","):"\\"===e?"],[":e}var i="",s=this.filterTokens(e),o={cdot:"",times:"",infty:"Infinity"},a=0;for(u=s.length;a<u;a++){var u,l,c,p,f,h,m,g=s[a];"frac"===g.value?i+=n()+"/"+n():g.value in Ve.symbols?g.value===A&&"vector"===s[a+1].type&&"Set"===s[a+2].type?(f=n(),i+=n()+"^"+K("1/"+f)):i+=g.value+n():"int"===g.value?(h=n(),a++,c=r((c=t().value).substring(1,c.length)),i+="integrate"+K(h+","+c)):"int_"===g.value?(u=n(),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),"differentialD"===(c=","===(c=t().value)?t().value:c)&&(a++,c=t().value),"mathrm"===c&&(a++,c=t().value),i+="defint"+K(h+","+u+","+l+","+c)):g.value&&g.value.startsWith("int_")?(u=g.value.replace("int_",""),console.log("uppernow"),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),"differentialD"===(c=","===(c=t().value)?t().value:c)&&(a++,c=t().value),"mathrm"===c&&(a++,c=t().value),i+="defint"+K(h+","+u+","+l+","+c)):"mathrm"===g.value?i+=(h=s[++a][0].value)+n():"sum_"===g.value||"prod_"===g.value?(p="sum_"===g.value?"sum":"product",m=t(),a++,f=n(),h=n(),i+=p+K([h,r(m[0]),r(m[2]),r(f)].join(","))):"lim_"===g.value?(m=t(),i+="limit"+K([n(),r(m[0]),r(m[2])].join(","))):"begin"===g.value?(m=t(),Array.isArray(m)&&"matrix"===m[0].value&&(i+="matrix([")):"end"===g.value?(m=t(),Array.isArray(m)&&"matrix"===m[0].value&&(i+="])")):Array.isArray(g)?i+=r(Ve.parse(g)):i+=r(g.value.toString())}return K(i)}};function je(e){Z(e)?this.elements=e.items.slice(0):Y(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function He(){var e=arguments,t=e.length,n=[];if(z(e))for(o=0;o<t;o++)n.push(e[o].slice(0));else for(var r,i,s,o=0;o<t;o++)r=e[o],Z(r)&&(r=r.elements),s=(r=Y(r)?r:[r]).length,i&&i!==s&&T("Unable to create Matrix. Row dimensions do not match!"),n.push(r),i=s;this.elements=n}function Xe(e){if(this.elements=[],e=Z(e)?e:je.fromArray(arguments))for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}je.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},je.fromArray=function(e){var t=new je;return t.elements=e,t},je.fromSet=function(e){return je.fromArray(e.elements)},je.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){j(t)||(t=new Fe(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return pe("SAFE",(function(){return t.pow(this.dot(this.clone()),new Fe(.5))}),void 0,this)},eql:function(e){var n=this.elements.length,r=e.elements||e;if(n!==r.length)return!1;do{if(Math.abs(t.subtract(this.elements[n-1],r[n-1]).valueOf())>PRECISION)return!1}while(--n);return!0},clone:function(){for(var e=new je,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var t=[];return this.each((function(n,r){t.push(e(n,r))})),new je(t)},each:function(e){for(var t,n=this.elements.length,r=n;e(this.elements[t=r-n],1+t),--n;);},toUnitVector:function(){return pe("SAFE",(function(){var e=this.modulus();return 0===e.valueOf()?this.clone():this.map((function(n){return t.divide(n,e)}))}),void 0,this)},angleFrom:function(e){return pe("SAFE",(function(){var n=e.elements||e;if(this.elements.length!==n.length)return null;var r=new Fe(0),i=new Fe(0),s=new Fe(0);if(this.each((function(e,o){r=t.add(r,t.multiply(e,n[o-1])),i=t.add(i,t.multiply(e,e)),s=t.add(s,t.multiply(n[o-1],n[o-1]))})),i=t.pow(i,new Fe(.5)),s=t.pow(s,new Fe(.5)),0===(o=t.multiply(i,s)).valueOf())return null;var o,a=t.divide(r,o);return(o=a.valueOf())<-1&&(a=-1),1<o&&(a=1),new Fe(Math.acos(a))}),void 0,this)},isParallelTo:function(e){return null===(e=this.angleFrom(e).valueOf())?null:e<=PRECISION},isAntiparallelTo:function(e){return null===(e=this.angleFrom(e).valueOf())?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){return null===(e=this.dot(e))?null:Math.abs(e)<=PRECISION},add:function(e){return pe("SAFE",(function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map((function(e,r){return t.add(e,n[r-1])}))}),void 0,this)},subtract:function(e){return pe("SAFE",(function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map((function(e,r){return t.subtract(e,n[r-1])}))}),void 0,this)},multiply:function(e){return this.map((function(t){return t.clone()*e.clone()}))},x:function(e){return this.multiply(e)},dot:function(e){return pe("SAFE",(function(){var n=e.elements||e,r=new Fe(0),i=this.elements.length;if(i!==n.length)return null;for(;r=t.add(r,t.multiply(this.elements[i-1],n[i-1])),--i;);return r}),void 0,this)},cross:function(e){var n=e.elements||e;if(3!==this.elements.length||3!==n.length)return null;var r=this.elements;return pe("SAFE",(function(){return new je([t.subtract(t.multiply(r[1],n[2]),t.multiply(r[2],n[1])),t.subtract(t.multiply(r[2],n[0]),t.multiply(r[0],n[2])),t.subtract(t.multiply(r[0],n[1]),t.multiply(r[1],n[0]))])}),void 0,this)},max:function(){for(var e,t=0,n=this.elements.length,r=n;e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e]),--n;);return t},magnitude:function(){var e=new Fe(0);return this.each((function(n){e=t.add(e,t.pow(n,new Fe(2)))})),t.sqrt(e)},indexOf:function(e){for(var t,n=null,r=this.elements.length,i=r;t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=1+t),--r;);return n},text:function(e){return Re(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(Ve.latex.call(Ve,this.elements[n],e));return"["+t.join(", ")+"]"}},He.identity=function(e){for(var t=new He,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new Fe(n===r?1:0))}return t},He.fromArray=function(e){function t(e){return He.apply(this,e)}return t.prototype=He.prototype,new t(e)},He.zeroMatrix=function(e,t){for(var n=new He,r=0;r<e;r++)n.elements.push(je.arrayPrefill(t,new Fe(0)));return n},(He.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(e,t){var n=new He;return this.each((function(r,i,s){n.set(i,s,e.call(n,r),t)})),n},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||j(n)?n:new Fe(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){for(var t,n=this.rows(),r=this.cols(),i=0;i<n;i++)for(t=0;t<r;t++)e.call(this,this.elements[i][t],i,t)},determinant:function(){if(!this.isSquare())return null;for(var e,n=this.toRightTriangular(),r=n.elements[0][0],i=n.elements.length-1,s=i;r=t.multiply(r,n.elements[e=s-i+1][e]),--i;);return r},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&T("Cannot augment matrix. Rows don't match.");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new He,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=j(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||T("Matrix is not square!"),pe("SAFE",(function(){var e,n,r,i,s,o,a,u=this.elements.length,l=u,c=He.identity(u),p=this.augment(c).toRightTriangular(),f=p.elements[0].length,h=[];do{for(s=[],r=f,h[e=u-1]=[],o=p.elements[e][e];a=t.divide(p.elements[e][i=f-r],o.clone()),s.push(a),l<=i&&h[e].push(a),--r;);for(p.elements[e]=s,n=0;n<e;n++){for(s=[],r=f;s.push(t.subtract(p.elements[n][i=f-r].clone(),t.multiply(p.elements[e][i].clone(),p.elements[n][e].clone()))),--r;);p.elements[n]=s}}while(--u);return He.fromArray(h)}),void 0,this)},toRightTriangular:function(){return pe("SAFE",(function(){var e,n,r,i=this.clone(),s=this.elements.length,o=s,a=this.elements[0].length;do{if(0===i.elements[n=o-s][n].valueOf())for(var u=1+n;u<o;u++)if((e=i.elements[u][n])&&0!==e.valueOf()){for(c=[],p=a;c.push(t.add(i.elements[n][r=a-p].clone(),i.elements[u][r].clone())),--p;);i.elements[n]=c;break}if(0!==i.elements[n][n].valueOf())for(u=1+n;u<o;u++){for(var l=t.divide(i.elements[u][n].clone(),i.elements[n][n].clone()),c=[],p=a;c.push((r=a-p)<=n?new Fe(0):t.subtract(i.elements[u][r].clone(),t.multiply(i.elements[n][r].clone(),l.clone()))),--p;);i.elements[u]=c}}while(--s);return i}),void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new He,o=i;do{for(s.elements[e=i-o]=[],t=r;s.elements[e][n=r-t]=this.elements[n][e].clone(),--t;);}while(--o);return s},canMultiplyFromLeft:function(e){return e=(z(e)?e.elements:e).length,this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return pe("SAFE",(function(){var n=e.elements||e;if(!this.canMultiplyFromLeft(n)){if(this.sameSize(e)){for(var r=new He,i=this.rows(),s=0;s<i;s++){var o=t.multiply(new je(this.elements[s]),new je(e.elements[s]));r.elements[s]=o.elements}return r}return null}var a,u,l,c,p,f=this.elements.length,h=f,m=n[0].length,g=this.elements[0].length,v=[];do{v[s=h-f]=[],a=m;do{for(u=m-a,l=new Fe(0),c=g;l=t.add(l,t.multiply(this.elements[s][p=g-c],n[p][u])),--c;);}while(v[s][u]=l,--a)}while(--f);return He.fromArray(v)}),void 0,this)},add:function(e,n){var r=new He;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=t.add(i.clone(),e.elements[s][o].clone());n&&(a=n.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},subtract:function(e,n){var r=new He;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=t.subtract(i.clone(),e.elements[s][o].clone());n&&(a=n.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},negate:function(){return this.each((function(e){return e.negate()})),this},toVector:function(){if(1!==this.rows()&&1!==this.cols())return this;var e=new je;return e.elements=this.elements,e},toString:function(e,t){for(var n=this.rows(),r=[],i=0;i<n;i++)r.push("["+this.elements[i].map((function(e){var n=t?e.multiplier.toDecimal():e.toString();return void 0!==e?n:""})).join(",")+"]");return"matrix"+K(r.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var t=this.cols(),n=this.elements;return ee("\\begin{vmatrix}{0}\\end{vmatrix}",(function(){var r,i=[];for(r in n){for(var s=[],o=0;o<t;o++)s.push(Ve.latex.call(Ve,n[r][o],e));i.push(s.join(" & "))}return i.join(" \\cr ")}))}}).each=He.prototype.eachElement,Xe.fromArray=function(e){function t(e){return Xe.apply(this,e)}return t.prototype=Xe.prototype,new t(e)},Xe.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new Xe,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var e=new Xe;return this.each((function(t){e.add(t.clone())})),e},union:function(e){var t=this.clone();return e.each((function(e){t.add(e)})),t},difference:function(e){var t=this.clone();return e.each((function(e){t.remove(e)})),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return ce(this.elements,t),!0;return!1},intersection:function(e){var t=new Xe,n=this;return e.each((function(e){n.contains(e)&&t.add(e)})),t},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var Ze={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":Oe.gamma},gamma_incomplete:{"Math2.factorial":Oe.factorial},Li:{"Math2.Ei":Oe.Ei,"Math2.bigLog":Oe.bigLog,Frac:De},Ci:{"Math2.factorial":Oe.factorial},Ei:{"Math2.factorial":Oe.factorial},Si:{"Math2.factorial":Oe.factorial},Shi:{"Math2.factorial":Oe.factorial},Chi:{isInt:W,nround:se,"Math2.num_integrate":Oe.num_integrate},factor:{"Math2.ifactor":Oe.ifactor,Symbol:Fe},num_integrate:{"Math2.simpson":Oe.simpson,nround:se},fib:{even:oe}},reformat:{diff:function(e,t){var n=e.args[1].toString();return e="var f = "+Ze.build(e.args[0].toString(),[n])+";",t[1]+="var diff = "+Oe.diff.toString()+";",t[1]+=e,["diff(f)("+n+")",t]}},getProperName:function(e){return{continued_fraction:"continuedFraction"}[e]||e},compileDependencies:function(e,t){var n,r,i=Ze.dependencies[e],s=t&&t[1]?t[1]:"",o=t&&t[0]?t[0]:{};for(n in i)"object"!=typeof i[n]&&(s+="var "+(1<(r=n.split(".")).length?r[1]:r[0])+"="+i[n]+";",o[n]=r.pop());return[o,s]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each((function(e){e.group===S&&(t=Ze.compileDependencies(e.fname,t))}));return t},build:function(e,n){e=pe("PARSE2NUMBER",(function(){return t.parse(e)}),!0);var r=H(e),i=[],s=[],o=function(e,n){function r(t){return(t=t in Math?"Math."+t:(t=Ze.getProperName(t),-1===i.indexOf(t)&&(n.push("var "+t+" = "+Oe[t].toString()+"; "),i.push(t)),t))+K(e.args.map((function(e){return o(e,n)[0]})).join(","))}""===e.fname&&(e=Fe.unwrapPARENS(e)),n=n||[];var a,u,l=[],c=e.group,p="",f=function(t){t=t===N?"*":"+";var r,i=[];for(r in e.symbols){var s=e.symbols[r],a=o(s,n)[0];s.isComposite()&&(a=K(a)),i.push(a)}return(t=i.join(t))&&!e.multiplier.equals(1)?K(t):t};return c===d?l.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?p="-":e.multiplier.equals(1)||l.push(e.multiplier.toDecimal()),c===y||c===w?a=e.value:c===S?(s=Ze.compileDependencies(e.fname,s),s=Ze.getArgsDeps(e,s),a=Ze.reformat[e.fname]?(u=Ze.reformat[e.fname](e,s),s=u[1],u[0]):r(e.fname)):c===b?(c=e.previousGroup)===d||c===y?a=e.value:c===S?(a=r(e.fname),s=Ze.compileDependencies(e.fname,s),s=Ze.getArgsDeps(e,s)):a=f(e.previousGroup):a=f(e.group),e.group===d||e.power.equals(1)||(f=o(t.parse(e.power)),n.push(f[1]),a="Math.pow"+K(a+","+f[0])),a&&l.push(p+a),[l.join("*"),n.join("").replace(/\n+\s+/g," ")]};n&&(r=n);var a,u=o(e);for(a in s[0]){var l=s[0][a];u[1]=u[1].replace(a,l),s[1]=s[1].replace(a,l)}return new Function(r,(s[1]||"")+u[1]+" return "+u[0]+";")}};function ze(e,n,r,i){var s=!1,a=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);return a?o.setFunction(a[1],a[2].split(","),a[3]):(e instanceof Pe&&(e=e.toString()),(r=Y(r)?r:void 0===r?[]:[r]).forEach((function(n){var i;"numer"!==n?(i=t.functions[r])&&1===i[1]&&(e=`${n}(${e})`):s=!0})),a=pe("PARSE2NUMBER",(function(){return t.parse(e,n)}),s||u.PARSE2NUMBER),i?L[i-1]=a:L.push(a),new Pe(a))}le(t.CONSTANTS),le(t.functions),t.initConstants(),t.error||(t.error=T),u.LOG_FNS={log:t.functions.log,log10:t.functions.log10},le={allSame:P,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!G(e[t]))return!1;return!0},arguments2Array:fe,arrayAddSlices:function(e,t){t=t||20;var n=[];n.push(e[0]);for(var r=0;r<e.length-1;r++)for(var i=e[r],s=(e[r+1]-i)/t,o=0;o<t;o++)n.push(i+=s);return n},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:h,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0},arrayUnique:g,arrayGetVariables:function(e){for(var t=H(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(H(e[n]));return g(t).sort()},arraySum:function(e,n){for(var r=new Fe(0),i=0;i<e.length;i++){var s=e[i];r=t.add(r,j(s)?s:t.parse(s))}return n?Number(r):r},block:pe,build:Ze.build,clearU:function(e){-1!==(e=O.indexOf(e))&&(O[e]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort((function(e,t){return e[0]-t[0]}));var s=[],o=[];for(i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,n,r){for(var i,s={},o=0;o<r.length;o++)s[r[o]]=new Fe(Math.floor(5*Math.random())+1);return pe("PARSE2NUMBER",(function(){i=t.parse(e,s).equals(t.parse(n,s))})),i},convertToVector:me,customError:l,customType:function(e){return void 0!==e&&e.custom},decompose_fn:ie,each:m,evaluate:he,even:oe,evenFraction:ae,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new Fe(0));return e},firstObject:ne,format:ee,generatePrimes:v,getCoeffs:function(e,n,r){var i=[];e.each((function(e){var r,s=e.contains(n)?(r=e.stripVar(n),t.divide(e.clone(),r.clone()).power.toDecimal()):(r=e,0);e=i[s],i[s]=e?t.add(e,r):r}),!0);for(var s=0;s<i.length;s++)i[s]||(i[s]=new Fe(0));return i},getU:function(e){for(var t="u",n=0,r=H(e);-1!==O.indexOf(t)||-1!==r.indexOf(t);)t="u"+n++;for(var i=0,s=O.length;i<=s;i++)if(!O[i]){O[i]=t;break}return t},importFunctions:function(){var e,n={};for(e in t.functions)n[e]=t.functions[e][0];return n},inBrackets:K,isArray:Y,isExpression:p,isFraction:V,isInt:W,isMatrix:z,isNegative:f,isNumericSymbol:Q,isPrime:B,isReserved:c,isSymbol:j,isVariableSymbol:function(e){return e.group===y&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:Z,keys:te,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var n,r;if(e.group===S&&""===e.fname?(n=Fe.unwrapPARENS(t.parse(e).toLinear()),r=t.parse(e.power)):e.group===w&&(n=t.parse(e.value),r=t.parse(e.power)),n&&r&&n.group===d&&r.group===d&&n.multiplier.isNegative()){for(var i=[],s=Fe.toPolarFormArray(he(e))[0],o=t.arg(n),a=r.multiplier.den.toString(),l=r.multiplier.num.toString(),c=0;c<a;c++){var p=he(t.parse(ee("(({0})+2*pi*({1}))/({2})",o,c,a))).multiplier.toDecimal();i.push(he(t.parse(ee("(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",s,a,u.IMAGINARY,p,l))))}return je.fromArray(i)}return e.isConstant(!0,!0)?(n=e.sign(),o=he(e.abs()),i=[(r=t.sqrt(o)).clone(),r.negate()],n<0&&(i=i.map((function(e){return t.multiply(e,Fe.imaginary())})))):i=[t.parse(e)],je.fromArray(i)},remove:ce,reserveNames:le,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:se,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:F,separate:X,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Re,validateName:D,variables:H,warn:k};var $e={groups:i,Symbol:Fe,Expression:Pe,Frac:De,Vector:je,Matrix:He,Parser:Be,Scientific:ke,Fraction:Ge,Math2:Oe,LaTeX:Ve,Utils:le,PARSER:t,PARENTHESIS:q,Settings:u,err:T,bigInt:n,bigDec:r,exceptions:e};return ze.rpn=function(e){return t.tokenize(t.toRPN(e))},ze.convertToLaTeX=function(e,n){return t.toTeX(e,n)},ze.convertFromLaTeX=function(e){return e=Ve.parse(t.tokenize(e)),new Pe(t.parse(e))},ze.version=function(e){if(e)try{return $e[e].version}catch(t){return"No module named "+e+" found!"}return"1.1.13"},ze.getWarnings=function(){return R},ze.setConstant=function(e,n){if(D(e),!c(e))if("delete"===n||""===n)delete t.CONSTANTS[e];else{if(isNaN(n))throw new Ne("Constant must be a number!");t.CONSTANTS[e]=n}return this},ze.getConstant=function(e){return String(t.constant[e])},ze.setFunction=re,ze.getCore=function(){return $e},ze.getExpression=ze.getEquation=Pe.getExpression,ze.reserved=function(e){return e?O:O.join(", ")},ze.clear=function(e,t){return"all"===e?L=[]:"last"===e?L.pop():"first"===e?L.shift():(e=e?e-1:L.length,!0===t?L[e]=void 0:ce(L,e)),this},ze.flush=function(){return this.clear("all"),this},ze.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<L.length;i++){var s=t?Ve.latex(L[i],n):Re(L[i],n);e?r[i+1]=s:r.push(s)}return r},ze.register=function(e){var n=this.getCore();if(Y(e))for(var r=0;r<e.length;r++)e&&this.register(e[r]);else if(e&&-1===u.exclude.indexOf(e.name)){if(e.dependencies)for(r=0;r<e.dependencies.length;r++)if(!n[e.dependencies[r]])throw new Error(ee("{0} requires {1} to be loaded!",e.name,e.dependencies[r]));var i=e.parent,s=e.build.call(n);i&&(n[i]||(n[e.parent]={}),("nerdamer"===i?this:n[i])[e.name]=s),e.visible&&(t.functions[e.name]=[s,e.numargs])}},ze.validateName=D,ze.validVarName=function(e){try{return D(e),-1===O.indexOf(e)}catch(e){return!1}},ze.supported=function(){return te(t.functions)},ze.numEquations=ze.numExpressions=function(){return L.length},ze.setVar=function(e,n){return D(e),e in t.CONSTANTS&&T("Cannot set value for constant "+e),"delete"===n||""===n?delete _[e]:_[e]=j(n)?n:t.parse(n),this},ze.getVar=function(e){return _[e]},ze.clearVars=function(){return _={},this},ze.load=function(e){return e.call(this),this},ze.getVars=function(e,t){var n={};if("object"===(e=e||"text"))n=_;else for(var r in _)"latex"===e?n[r]=_[r].latex(t):"text"===e&&(n[r]=_[r].text(t));return n},ze.set=function(e,n){if("object"==typeof e)for(var i in e)ze.set(i,e[i]);-1!==["SAFE"].indexOf(e)&&T("Cannot modify setting: "+e),"PRECISION"===e?(r.set({precision:n}),21<(u.PRECISION=n)&&this.set("USE_BIG",!0)):"USE_LN"===e&&!0===n?(u.LOG="LN",u.LOG10="log",t.functions.log=u.LOG_FNS.log10,t.functions.log[0]=function(e){return e.isConstant()?new Fe(Math.log10(e)):t.symfunction(u.LOG10,[e])},t.functions.LN=u.LOG_FNS.log,delete t.functions.log10):u[e]=n},ze.get=function(e){return u[e]},ze.updateAPI=function(e){for(var n in t.functions)n in ze&&!e||(ze[n]=function(e){return function(){for(var n=[].slice.call(arguments),r=0;r<n.length;r++)n[r]=t.parse(n[r]);return new Pe(pe("PARSE2NUMBER",(function(){return t.callfunction(e,n)})))}}(n))},ze.replaceFunction=function(e,n,r){var i=t.functions[e];r=void 0===r?i[1]:r,t.functions[e]=[n.call(void 0,i[0],$e),r]},ze.setOperator=function(e,n){t.setOperator(e,n)},ze.getOperator=function(e){return t.getOperator(e)},ze.aliasOperator=function(e,n){t.aliasOperator(e,n)},ze.tree=function(e){return t.tree(t.toRPN(t.tokenize(e)))},ze.htmlTree=function(e,t){return'<div class="tree">\n    <ul>\n        <li>\n'+this.tree(e).toHTML(3,t)+"\n        </li>\n    </ul>\n</div>"},ze.addPeeker=function(e,n){t.peekers[e]&&t.peekers[e].push(n)},ze.removePeeker=function(e,n){ce(t.peekers[e],n)},ze.parse=function(e){return String(e).split(";").map((function(e){return t.parse(e)}))},ze.updateAPI(),ze}({bigInt:(s=function(e){"use strict";var t=1e7,n=7,r=9007199254740992,i=p(r),o=Math.log(r);function a(e,t){return void 0===e?a[0]:void 0===t||10==+t?$(e):V(e,t)}function u(e,t){this.value=e,this.sign=t,this.isSmall=!1}function l(e){this.value=e,this.sign=e<0,this.isSmall=!0}function c(e){return-r<e&&e<r}function p(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function f(e){h(e);var n=e.length;if(n<4&&C(e,i)<0)switch(n){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function h(e){for(var t=e.length;0===e[--t];);e.length=t+1}function m(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function g(e){return 0<e?Math.floor(e):Math.ceil(e)}function v(e,n){for(var r,i=e.length,s=n.length,o=new Array(i),a=0,u=t,l=0;l<s;l++)r=e[l]+n[l]+a,o[l]=r-(a=u<=r?1:0)*u;for(;l<i;)r=e[l]+a,o[l++]=r-(a=r===u?1:0)*u;return 0<a&&o.push(a),o}function d(e,t){return e.length>=t.length?v(e,t):v(t,e)}function w(e,n){for(var r,i=e.length,s=new Array(i),o=t,a=0;a<i;a++)r=e[a]-o+n,n=Math.floor(r/o),s[a]=r-n*o,n+=1;for(;0<n;)s[a++]=n%o,n=Math.floor(n/o);return s}function y(e,n){for(var r,i=e.length,s=n.length,o=new Array(i),a=0,u=t,l=0;l<s;l++)a=(r=e[l]-a-n[l])<0?(r+=u,1):0,o[l]=r;for(l=s;l<i;l++){if(!((r=e[l]-a)<0)){o[l++]=r;break}r+=u,o[l]=r}for(;l<i;l++)o[l]=e[l];return h(o),o}function b(e,n,r){for(var i,s=e.length,o=new Array(s),a=-n,c=t,p=0;p<s;p++)i=e[p]+a,a=Math.floor(i/c),o[p]=(i%=c)<0?i+c:i;return"number"==typeof(o=f(o))?new l(o=r?-o:o):new u(o,r)}function S(e,n){for(var r,i,s=e.length,o=n.length,a=m(s+o),u=t,l=0;l<s;++l)for(var c=e[l],p=0;p<o;++p)r=c*n[p]+a[l+p],i=Math.floor(r/u),a[l+p]=r-i*u,a[l+p+1]+=i;return h(a),a}function M(e,n){for(var r,i=e.length,s=new Array(i),o=t,a=0,u=0;u<i;u++)r=e[u]*n+a,a=Math.floor(r/o),s[u]=r-a*o;for(;0<a;)s[u++]=a%o,a=Math.floor(a/o);return s}function N(e,t){for(var n=[];0<t--;)n.push(0);return n.concat(e)}function E(e,n,r){return new u(e<t?M(n,e):S(n,p(e)),r)}function x(e){for(var n,r=e.length,i=m(r+r),s=t,o=0;o<r;o++){for(var a,u=0-(a=e[o])*a,l=o;l<r;l++)n=a*e[l]*2+i[o+l]+u,u=Math.floor(n/s),i[o+l]=n-u*s;i[o+r]=u}return h(i),i}function q(e,n){for(var r,i=e.length,s=m(i),o=t,a=0,u=i-1;0<=u;--u)a=(r=a*o+e[u])-(r=g(r/n))*n,s[u]=0|r;return[s,0|a]}function A(e,n){var r=$(n),i=e.value,s=r.value;if(0===s)throw new Error("Cannot divide by zero");if(e.isSmall)return r.isSmall?[new l(g(i/s)),new l(i%s)]:[a[0],e];if(r.isSmall){if(1===s)return[e,a[0]];if(-1==s)return[e.negate(),a[0]];var o=Math.abs(s);if(o<t){var c=f((v=q(i,o))[0]);return n=v[1],e.sign&&(n=-n),"number"==typeof c?[new l(c=e.sign!==r.sign?-c:c),new l(n)]:[new u(c,e.sign!==r.sign),new l(n)]}s=p(o)}if(-1===(o=C(i,s)))return[a[0],e];if(0===o)return[a[e.sign===r.sign?1:-1],a[0]];c=(v=(i.length+s.length<=200?function(e,n){var r,i,s,o,a,u,l,c=e.length,p=n.length,h=t,g=m(n.length),v=n[p-1],d=Math.ceil(h/(2*v)),w=M(e,d),y=M(n,d);for(w.length<=c&&w.push(0),y.push(0),v=y[p-1],i=c-p;0<=i;i--){for(r=h-1,w[i+p]!==v&&(r=Math.floor((w[i+p]*h+w[i+p-1])/v)),u=y.length,a=o=s=0;a<u;a++)s+=r*y[a],l=Math.floor(s/h),o+=w[i+a]-(s-l*h),s=l,o=o<0?(w[i+a]=o+h,-1):(w[i+a]=o,0);for(;0!==o;){for(--r,a=s=0;a<u;a++)s=(s+=w[i+a]-h+y[a])<0?(w[i+a]=s+h,0):(w[i+a]=s,1);o+=s}g[i]=r}return w=q(w,d)[0],[f(g),f(w)]}:function(e,n){for(var r,i,s,o,a,u=e.length,l=n.length,c=[],p=[],m=t;u;)if(p.unshift(e[--u]),h(p),C(p,n)<0)c.push(0);else{for(s=p[(i=p.length)-1]*m+p[i-2],o=n[l-1]*m+n[l-2],l<i&&(s=(s+1)*m),r=Math.ceil(s/o);!(C(a=M(n,r),p)<=0)&&--r;);c.push(r),p=y(p,a)}return c.reverse(),[f(c),f(p)]})(i,s))[0],r=e.sign!==r.sign;var v=v[1];return e=e.sign,[c="number"==typeof c?new l(c=r?-c:c):new u(c,r),v="number"==typeof v?new l(v=e?-v:v):new u(v,e)]}function C(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;0<=n;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function I(e){return!(e=e.abs()).isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function U(e,t){for(var n,r,i,o=e.prev(),u=o,l=0;u.isEven();)u=u.divide(2),l++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(i=s(t[r]).modPow(u,e)).equals(a[1])&&!i.equals(o)){for(n=l-1;0!=n;n--){if((i=i.square().mod(e)).isUnit())return!1;if(i.equals(o))continue e}return!1}return!0}u.prototype=Object.create(a.prototype),l.prototype=Object.create(a.prototype),u.prototype.plus=u.prototype.add=function(e){var t=$(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value;return e=t.value,t.isSmall?new u(w(n,Math.abs(e)),this.sign):new u(d(n,e),this.sign)},l.prototype.plus=l.prototype.add=function(e){var t=$(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());if(e=t.value,t.isSmall){if(c(n+e))return new l(n+e);e=p(Math.abs(e))}return new u(w(e,Math.abs(n)),n<0)},u.prototype.minus=u.prototype.subtract=function(e){var t=$(e);if(this.sign!==t.sign)return this.add(t.negate());var n,r=this.value;return e=t.value,t.isSmall?b(r,Math.abs(e),this.sign):(t=r,r=e,e=this.sign,0<=C(t,r)?n=y(t,r):(n=y(r,t),e=!e),"number"==typeof(n=f(n))?new l(n=e?-n:n):new u(n,e))},l.prototype.minus=l.prototype.subtract=function(e){var t=$(e),n=this.value;return n<0!==t.sign?this.add(t.negate()):(e=t.value,t.isSmall?new l(n-e):b(e,Math.abs(n),0<=n))},u.prototype.negate=function(){return new u(this.value,!this.sign)},l.prototype.negate=function(){var e=this.sign,t=new l(-this.value);return t.sign=!e,t},u.prototype.abs=function(){return new u(this.value,!1)},l.prototype.abs=function(){return new l(Math.abs(this.value))},u.prototype.times=u.prototype.multiply=function(e){var n,r=$(e),i=this.value,s=r.value;if(e=this.sign!==r.sign,r.isSmall){if(0===s)return a[0];if(1===s)return this;if(-1===s)return this.negate();if((n=Math.abs(s))<t)return new u(M(i,n),e);s=p(n)}return new u((0<-.012*(r=i.length)-.012*(n=s.length)+15e-6*r*n?function e(t,n){if((r=Math.max(t.length,n.length))<=30)return S(t,n);var r=Math.ceil(r/2),i=t.slice(r),s=t.slice(0,r),o=n.slice(r),a=n.slice(0,r);return t=e(s,a),n=e(i,o),o=e(d(s,i),d(a,o)),h(r=d(d(t,N(y(y(o,t),n),r)),N(n,2*r))),r}:S)(i,s),e)},l.prototype._multiplyBySmall=function(e){return c(e.value*this.value)?new l(e.value*this.value):E(Math.abs(e.value),p(Math.abs(this.value)),this.sign!==e.sign)},u.prototype._multiplyBySmall=function(e){return 0===e.value?a[0]:1===e.value?this:-1===e.value?this.negate():E(Math.abs(e.value),this.value,this.sign!==e.sign)},l.prototype.times=l.prototype.multiply=function(e){return $(e)._multiplyBySmall(this)},u.prototype.square=function(){return new u(x(this.value),!1)},l.prototype.square=function(){var e=this.value*this.value;return c(e)?new l(e):new u(x(p(Math.abs(this.value))),!1)},l.prototype.divmod=u.prototype.divmod=function(e){return{quotient:(e=A(this,e))[0],remainder:e[1]}},l.prototype.over=l.prototype.divide=u.prototype.over=u.prototype.divide=function(e){return A(this,e)[0]},l.prototype.remainder=l.prototype.mod=u.prototype.remainder=u.prototype.mod=function(e){return A(this,e)[1]},u.prototype.pow=function(e){var t,n,r,i=$(e),s=(e=this.value,i.value);if(0===s)return a[1];if(0===e)return a[0];if(1===e)return a[1];if(-1===e)return i.isEven()?a[1]:a[-1];if(i.sign)return a[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&c(t=Math.pow(e,s)))return new l(g(t));for(n=this,r=a[1];!0&s&&(r=r.times(n),--s),0!==s;)s/=2,n=n.square();return r},l.prototype.pow=u.prototype.pow,l.prototype.modPow=u.prototype.modPow=function(e,t){if(e=$(e),(t=$(t)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var n=a[1],r=this.mod(t);e.isPositive();){if(r.isZero())return a[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},u.prototype.compareAbs=function(e){var t=$(e),n=this.value;return e=t.value,t.isSmall?1:C(n,e)},l.prototype.compareAbs=function(e){var t=$(e),n=Math.abs(this.value);return e=t.value,t.isSmall?n===(e=Math.abs(e))?0:e<n?1:-1:-1},u.prototype.compareTo=u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=$(e),n=this.value;return e=t.value,this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:C(n,e)*(this.sign?-1:1)},l.prototype.compareTo=l.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=$(e),n=this.value;return e=t.value,t.isSmall?n==e?0:e<n?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},l.prototype.eq=l.prototype.equals=u.prototype.eq=u.prototype.equals=function(e){return 0===this.compare(e)},l.prototype.neq=l.prototype.notEquals=u.prototype.neq=u.prototype.notEquals=function(e){return 0!==this.compare(e)},l.prototype.gt=l.prototype.greater=u.prototype.gt=u.prototype.greater=function(e){return 0<this.compare(e)},l.prototype.lt=l.prototype.lesser=u.prototype.lt=u.prototype.lesser=function(e){return this.compare(e)<0},l.prototype.geq=l.prototype.greaterOrEquals=u.prototype.geq=u.prototype.greaterOrEquals=function(e){return 0<=this.compare(e)},l.prototype.leq=l.prototype.lesserOrEquals=u.prototype.leq=u.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},u.prototype.isEven=function(){return 0==(1&this.value[0])},l.prototype.isEven=function(){return 0==(1&this.value)},u.prototype.isOdd=function(){return 1==(1&this.value[0])},l.prototype.isOdd=function(){return 1==(1&this.value)},u.prototype.isPositive=function(){return!this.sign},l.prototype.isPositive=function(){return 0<this.value},u.prototype.isNegative=function(){return this.sign},l.prototype.isNegative=function(){return this.value<0},u.prototype.isUnit=function(){return!1},l.prototype.isUnit=function(){return 1===Math.abs(this.value)},u.prototype.isZero=function(){return!1},l.prototype.isZero=function(){return 0===this.value},l.prototype.isDivisibleBy=u.prototype.isDivisibleBy=function(e){var t=$(e);return 0!==(e=t.value)&&(1===e||(2===e?this.isEven():this.mod(t).equals(a[0])))},l.prototype.isPrime=u.prototype.isPrime=function(t){if((r=I(this))!==e)return r;var n=this.abs();if((r=n.bitLength())<=64)return U(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var r=Math.log(2)*r,i=Math.ceil(!0===t?2*Math.pow(r,2):r),o=[],a=0;a<i;a++)o.push(s(a+2));return U(n,o)},l.prototype.isProbablePrime=u.prototype.isProbablePrime=function(t){var n=I(this);if(n!==e)return n;for(var r=this.abs(),i=t===e?5:t,o=[],a=0;a<i;a++)o.push(s.randBetween(2,r.minus(2)));return U(r,o)},l.prototype.modInv=u.prototype.modInv=function(e){for(var t,n,r=s.zero,i=s.one,o=$(e),a=this.abs();!a.equals(s.zero);)t=o.divide(a),n=o,o=a,i=r.subtract(t.multiply(r=i)),a=n.subtract(t.multiply(a));if(!o.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===r.compare(0)&&(r=r.add(e)),this.isNegative()?r.negate():r},u.prototype.next=function(){var e=this.value;return this.sign?b(e,1,this.sign):new u(w(e,1),this.sign)},l.prototype.next=function(){var e=this.value;return e+1<r?new l(e+1):new u(i,!1)},u.prototype.prev=function(){var e=this.value;return this.sign?new u(w(e,1),!0):b(e,1,this.sign)},l.prototype.prev=function(){var e=this.value;return-r<e-1?new l(e-1):new u(i,!0)};for(var L=[1];2*L[L.length-1]<=t;)L.push(2*L[L.length-1]);var _=L.length,O=L[_-1];function R(e){return("number"==typeof e||"string"==typeof e)&&+Math.abs(e)<=t||e instanceof u&&e.value.length<=1}function T(e,t,n){t=$(t);for(var r=e.isNegative(),i=t.isNegative(),o=r?e.not():e,a=i?t.not():t,u=0,l=0,c=null,p=null,f=[];!o.isZero()||!a.isZero();)u=(c=A(o,O))[1].toJSNumber(),r&&(u=O-1-u),l=(p=A(a,O))[1].toJSNumber(),o=c[0],a=p[0],f.push(n(u,l=i?O-1-l:l));for(var h=0!==n(r?1:0,i?1:0)?s(-1):s(0),m=f.length-1;0<=m;--m)h=h.multiply(O).add(s(f[m]));return h}l.prototype.shiftLeft=u.prototype.shiftLeft=function(e){if(!R(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;_<=e;)t=t.multiply(O),e-=_-1;return t.multiply(L[e])},l.prototype.shiftRight=u.prototype.shiftRight=function(e){var t;if(!R(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;_<=e;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=A(n,O))[1].isNegative()?t[0].prev():t[0],e-=_-1}return(t=A(n,L[e]))[1].isNegative()?t[0].prev():t[0]},l.prototype.not=u.prototype.not=function(){return this.negate().prev()},l.prototype.and=u.prototype.and=function(e){return T(this,e,(function(e,t){return e&t}))},l.prototype.or=u.prototype.or=function(e){return T(this,e,(function(e,t){return e|t}))},l.prototype.xor=u.prototype.xor=function(e){return T(this,e,(function(e,t){return e^t}))};var P=1<<30,k=(t&-t)*(t&-t)|P;function D(e){return(e="number"==typeof(e=e.value)?e|P:e[0]+e[1]*t|k)&-e}function F(e,t){return e=$(e),t=$(t),e.greater(t)?e:t}function B(e,t){return e=$(e),t=$(t),e.lesser(t)?e:t}function G(e,t){if(e=$(e).abs(),t=$(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=a[1];e.isEven()&&t.isEven();)n=Math.min(D(e),D(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(D(e));do{for(;t.isEven();)t=t.divide(D(t))}while(e.greater(t)&&(r=t,t=e,e=r),!(t=t.subtract(e)).isZero());return i.isUnit()?e:e.multiply(i)}l.prototype.bitLength=u.prototype.bitLength=function(){var e=this;return 0===(e=e.compareTo(s(0))<0?e.negate().subtract(s(1)):e).compareTo(s(0))?s(0):s(function e(t,n){if(n.compareTo(t)<=0){var r=(i=e(t,n.square(n))).p,i=i.e;return(n=r.multiply(n)).compareTo(t)<=0?{p:n,e:2*i+1}:{p:r,e:2*i}}return{p:s(1),e:0}}(e,s(2)).e).add(s(1))};var V=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if("-"!==s&&/[a-z0-9]/.test(s))if(/[0-9]/.test(s)&&r<=+s){if("1"!==s||1!==r)throw new Error(s+" is not a valid digit in base "+t+".")}else if(s.charCodeAt(0)-87>=r)throw new Error(s+" is not a valid digit in base "+t+".")}if(2<=t&&t<=36&&n<=o/Math.log(t)){var a=parseInt(e,t);if(isNaN(a))throw new Error(s+" is not a valid digit in base "+t+".");return new l(parseInt(e,t))}t=$(t);var u=[];for(i=(a="-"===e[0])?1:0;i<e.length;i++){var c=(s=e[i].toLowerCase()).charCodeAt(0);if(48<=c&&c<=57)u.push($(s));else if(97<=c&&c<=122)u.push($(s.charCodeAt(0)-87));else{if("<"!==s)throw new Error(s+" is not a valid character");for(c=i;">"!==e[++i];);u.push($(e.slice(c+1,i)))}}return j(u,t,a)};function j(e,t,n){for(var r=a[0],i=a[1],s=e.length-1;0<=s;s--)r=r.add(e[s].times(i)),i=i.times(t);return n?r.negate():r}function H(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function X(e,t){if((t=s(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}if(n=!1,e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};for(var r=[],i=e;i.isNegative()||0<=i.compareAbs(t);){i=(o=i.divmod(t)).quotient;var o=o.remainder;o.isNegative()&&(o=t.minus(o).abs(),i=i.next()),r.push(o.toJSNumber())}return r.push(i.toJSNumber()),{value:r.reverse(),isNegative:n}}function Z(e,t){return((t=X(e,t)).isNegative?"-":"")+t.value.map(H).join("")}function z(e){if(c(+e)){var t=+e;if(t===g(t))return new l(t);throw new Error("Invalid integer: "+e)}var r="-"===e[0],i=(e=r?e.slice(1):e).split(/e/i);if(2<i.length)throw new Error("Invalid integer: "+i.join("e"));if(2===i.length){var s=i[1];if((s=+(s="+"===s[0]?s.slice(1):s))!==g(s)||!c(s))throw new Error("Invalid integer: "+s+" is not a valid exponent.");if(0<=(i=(t=i[0]).indexOf("."))&&(s-=t.length-i-1,t=t.slice(0,i)+t.slice(i+1)),s<0)throw new Error("Cannot include negative exponent part for integers");e=t+=new Array(s+1).join("0")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);for(var o=[],a=e.length,p=n,f=a-p;0<a;)o.push(+e.slice(f,a)),(f-=p)<0&&(f=0),a-=p;return h(o),new u(o,r)}function $(e){return"number"==typeof e?function(e){if(c(e)){if(e!==g(e))throw new Error(e+" is not an integer.");return new l(e)}return z(e.toString())}(e):"string"==typeof e?z(e):e}u.prototype.toArray=function(e){return X(this,e)},l.prototype.toArray=function(e){return X(this,e)},u.prototype.toString=function(t){if(10!==(t=t===e?10:t))return Z(this,t);for(var n,r=this.value,i=r.length,s=String(r[--i]);0<=--i;)n=String(r[i]),s+="0000000".slice(n.length)+n;return(this.sign?"-":"")+s},l.prototype.toString=function(t){return 10!=(t=t===e?10:t)?Z(this,t):String(this.value)},u.prototype.toJSON=l.prototype.toJSON=function(){return this.toString()},u.prototype.toJSNumber=u.prototype.valueOf=function(){return parseInt(this.toString(),10)},l.prototype.toJSNumber=l.prototype.valueOf=function(){return this.value};for(var Q=0;Q<1e3;Q++)a[Q]=new l(Q),0<Q&&(a[-Q]=new l(-Q));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=F,a.min=B,a.gcd=G,a.lcm=function(e,t){return e=$(e).abs(),t=$(t).abs(),e.divide(G(e,t)).multiply(t)},a.isInstance=function(e){return e instanceof u||e instanceof l},a.randBetween=function(e,n){var r=B(e=$(e),n=$(n)),i=F(e,n).subtract(r).add(1);if(i.isSmall)return r.add(Math.floor(Math.random()*i));for(var s=[],o=!0,a=i.value.length-1;0<=a;a--){var c=o?i.value[a]:t,p=g(Math.random()*c);s.unshift(p),p<c&&(o=!1)}return s=f(s),r.add("number"==typeof s?new l(s):new u(s,!1))},a.fromArray=function(e,t,n){return j(e.map($),$(t||10),n)},a}(),e.hasOwnProperty("exports")&&(e.exports=s),void 0!==(i=function(){return s}.apply(t,[]))&&(e.exports=i),s),bigDec:function(n){"use strict";var s,o,a,u=9e15,l=1e9,c="0123456789abcdef",p="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",f="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",h={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},m=!0,g="[DecimalError] ",v=g+"Invalid argument: ",d=g+"Precision limit exceeded",w=g+"crypto unavailable",y=Math.floor,b=Math.pow,S=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,M=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,N=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,E=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,x=1e7,q=7,A=p.length-1,C=f.length-1,I={name:"[object Decimal]"};function U(e){var t,n,r,i=e.length-1,s="",o=e[0];if(0<i){for(s+=o,t=1;t<i;t++)r=e[t]+"",(n=q-r.length)&&(s+=H(n)),s+=r;o=e[t],(n=q-(r=o+"").length)&&(s+=H(n))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function L(e,t,n){if(e!==~~e||e<t||n<e)throw Error(v+e)}function _(e,t,n,r){for(var i,s,o=e[0];10<=o;o/=10)--t;return--t<0?(t+=q,i=0):(i=Math.ceil((t+1)/q),t%=q),o=b(10,q-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),n<4&&99999==s||3<n&&49999==s||5e4==s||0==s):(n<4&&s+1==o||3<n&&s+1==o/2)&&(e[i+1]/o/100|0)==b(10,t-2)-1||(s==o/2||0==s)&&0==(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),(r||n<4)&&9999==s||!r&&3<n&&4999==s):((r||n<4)&&s+1==o||!r&&3<n&&s+1==o/2)&&(e[i+1]/o/1e3|0)==b(10,t-3)-1}function O(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=c.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}I.absoluteValue=I.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),D(e)},I.ceil=function(){return D(new this.constructor(this),this.e+1,2)},I.comparedTo=I.cmp=function(e){var t,n,r=this,i=r.d,s=(e=new r.constructor(e)).d,o=r.s,a=e.s;if(!i||!s)return o&&a?o!==a?o:i===s?0:!i^o<0?1:-1:NaN;if(!i[0]||!s[0])return i[0]?o:s[0]?-a:0;if(o!==a)return o;if(r.e!==e.e)return r.e>e.e^o<0?1:-1;for(t=0,n=(r=i.length)<(e=s.length)?r:e;t<n;++t)if(i[t]!==s[t])return i[t]>s[t]^o<0?1:-1;return r===e?0:e<r^o<0?1:-1},I.cosine=I.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r=(r=t.d.length)<32?(1/K(4,n=Math.ceil(r/3))).toString():(n=16,"2.3283064365386962890625e-10");e.precision+=n,t=J(e,1,t.times(r),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,ee(r,n)),r.precision=e,r.rounding=t,D(2==a||3==a?n.neg():n,e,t,!0)):new r(1):new r(NaN)},I.cubeRoot=I.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(m=!1,(s=c.s*b(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new p(s.toString()):(n=U(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?"0":"00"),s=b(n,1/3),e=y((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=s==1/0?"5e"+e:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=R(l.plus(c).times(a),l.plus(u),o+2,1),U(a.d).slice(0,o)===(n=U(r.d)).slice(0,o)){if("9999"!=(n=n.slice(o-3,o+1))&&(i||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(D(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(D(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return m=!0,D(r,e,p.rounding,t)},I.decimalPlaces=I.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-y(this.e/q))*q,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},I.dividedBy=I.div=function(e){return R(this,new this.constructor(e))},I.dividedToIntegerBy=I.divToInt=function(e){var t=this.constructor;return D(R(this,new t(e),0,1,1),t.precision,t.rounding)},I.equals=I.eq=function(e){return 0===this.cmp(e)},I.floor=function(){return D(new this.constructor(this),this.e+1,3)},I.greaterThan=I.gt=function(e){return 0<this.cmp(e)},I.greaterThanOrEqualTo=I.gte=function(e){return 1==(e=this.cmp(e))||0===e},I.hyperbolicCosine=I.cosh=function(){var e,t,n,r=(a=this).constructor,i=new r(1);if(!a.isFinite())return new r(a.s?1/0:NaN);if(a.isZero())return i;t=r.precision,n=r.rounding,r.precision=t+Math.max(a.e,a.sd())+4,r.rounding=1;for(var s,o=(o=a.d.length)<32?(1/K(4,e=Math.ceil(o/3))).toString():(e=16,"2.3283064365386962890625e-10"),a=J(r,1,a.times(o),new r(1),!0),u=e,l=new r(8);u--;)s=a.times(a),a=i.minus(s.times(l.minus(s.times(l))));return D(a,r.precision=t,r.rounding=n,!0)},I.hyperbolicSine=I.sinh=function(){var e,t,n,r=(o=this).constructor;if(!o.isFinite()||o.isZero())return new r(o);if(e=r.precision,t=r.rounding,r.precision=e+Math.max(o.e,o.sd())+4,r.rounding=1,(n=o.d.length)<3)o=J(r,2,o,o,!0);else for(var i,s=16<(s=1.4*Math.sqrt(n))?16:0|s,o=J(r,2,o=o.times(1/K(5,s)),o,!0),a=new r(5),u=new r(16),l=new r(20);s--;)i=o.times(o),o=o.times(a.plus(i.times(u.times(i).plus(l))));return D(o,r.precision=e,r.rounding=t,!0)},I.hyperbolicTangent=I.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,R(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},I.inverseCosine=I.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?V(t,r,i):new t(0):new t(NaN):e.isZero()?V(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=e.asin(),n=V(t,r+4,i).times(.5),t.precision=r,t.rounding=i,n.minus(e))},I.inverseHyperbolicCosine=I.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,m=!1,n=n.times(n).minus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},I.inverseHyperbolicSine=I.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,m=!1,n=n.times(n).plus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln())},I.inverseHyperbolicTangent=I.atanh=function(){var e,t,n,r=this,i=r.constructor;return r.isFinite()?0<=r.e?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,n=r.sd(),Math.max(n,e)<2*-r.e-1?D(new i(r),e,t,!0):(i.precision=n-=r.e,r=R(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},I.inverseSine=I.asin=function(){var e,t,n,r=this,i=r.constructor;return r.isZero()?new i(r):(e=r.abs().cmp(1),t=i.precision,n=i.rounding,-1!==e?0===e?((e=V(i,t+4,n).times(.5)).s=r.s,e):new i(NaN):(i.precision=t+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=t,i.rounding=n,r.times(2)))},I.inverseTangent=I.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,f=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=C)return(o=V(c,p+4,f).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=C)return(o=V(c,p+4,f).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=n=Math.min(28,a/q+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(m=!1,t=Math.ceil(a/q),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),m=!0,D(o,c.precision=p,c.rounding=f,!0)},I.isFinite=function(){return!!this.d},I.isInteger=I.isInt=function(){return!!this.d&&y(this.e/q)>this.d.length-2},I.isNaN=function(){return!this.s},I.isNegative=I.isNeg=function(){return this.s<0},I.isPositive=I.isPos=function(){return 0<this.s},I.isZero=function(){return!!this.d&&0===this.d[0]},I.lessThan=I.lt=function(e){return this.cmp(e)<0},I.lessThanOrEqualTo=I.lte=function(e){return this.cmp(e)<1},I.logarithm=I.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(1<n.length)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(m=!1,o=Q(this,a=c+5),r=t?G(l,a+10):Q(e,a),_((u=R(o,r,a,1)).d,i=c,p))do{if(o=Q(this,a+=10),r=t?G(l,a+10):Q(e,a),u=R(o,r,a,1),!s){+U(u.d).slice(i+1,i+15)+1==1e14&&(u=D(u,c+1,0));break}}while(_(u.d,i+=10,p));return m=!0,D(u,c,p)},I.minus=I.sub=function(e){var t,n,r,i,s,o,a,u,l,c,p,f=this,h=f.constructor;if(e=new h(e),!f.d||!e.d)return f.s&&e.s?f.d?e.s=-e.s:e=new h(e.d||f.s!==e.s?f:NaN):e=new h(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(l=f.d,p=e.d,a=h.precision,u=h.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new h(3===u?-0:0);e=new h(f)}return m?D(e,a,u):e}if(n=y(e.e/q),f=y(f.e/q),l=l.slice(),s=f-n){for(o=(c=s<0)?(t=l,s=-s,p.length):(t=p,n=f,l.length),s>(r=Math.max(Math.ceil(a/q),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((c=(r=l.length)<(o=p.length))&&(o=r),r=0;r<o;r++)if(l[r]!=p[r]){c=l[r]<p[r];break}s=0}for(c&&(t=l,l=p,p=t,e.s=-e.s),o=l.length,r=p.length-o;0<r;--r)l[o++]=0;for(r=p.length;s<r;){if(l[--r]<p[r]){for(i=r;i&&0===l[--i];)l[i]=x-1;--l[i],l[r]+=x}l[r]-=p[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=B(l,n),m?D(e,a,u):e):new h(3===u?-0:0)},I.modulo=I.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?D(new r(n),r.precision,r.rounding):(m=!1,9==r.modulo?(t=R(n,e.abs(),0,3,1)).s*=e.s:t=R(n,e,0,r.modulo,1),t=t.times(e),m=!0,n.minus(t))},I.naturalExponential=I.exp=function(){return $(this)},I.naturalLogarithm=I.ln=function(){return Q(this)},I.negated=I.neg=function(){var e=new this.constructor(this);return e.s=-e.s,D(e)},I.plus=I.add=function(e){var t,n,r,i,s,o,a,u,l=this,c=l.constructor;if(e=new c(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new c(e.d||l.s===e.s?l:NaN)):e=new c(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(a=l.d,u=e.d,s=c.precision,o=c.rounding,!a[0]||!u[0])return u[0]||(e=new c(l)),m?D(e,s,o):e;if(c=y(l.e/q),l=y(e.e/q),a=a.slice(),r=c-l){for(i=r<0?(n=a,r=-r,u.length):(n=u,l=c,a.length),r>(i=(c=Math.ceil(s/q))>i?c+1:i+1)&&(r=i,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for((i=a.length)-(r=u.length)<0&&(r=i,n=u,u=a,a=n),t=0;r;)t=(a[--r]=a[r]+u[r]+t)/x|0,a[r]%=x;for(t&&(a.unshift(t),++l),i=a.length;0==a[--i];)a.pop();return e.d=a,e.e=B(a,l),m?D(e,s,o):e},I.precision=I.sd=function(e){var t;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(v+e);return this.d?(t=j(this.d),e&&this.e+1>t&&(t=this.e+1)):t=NaN,t},I.round=function(){var e=this.constructor;return D(new e(this),this.e+1,e.rounding)},I.sine=I.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return J(e,2,t,t);n=16<(n=1.4*Math.sqrt(r))?16:0|n,t=J(e,2,t=t.times(1/K(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,ee(r,n)),r.precision=e,r.rounding=t,D(2<a?n.neg():n,e,t,!0)):new r(NaN)},I.squareRoot=I.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(m=!1,r=0==(l=Math.sqrt(+o))||l==1/0?(((t=U(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=y((u+1)/2)-(u<0||u%2),new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(R(o,s,n+2,1)).times(.5),U(s.d).slice(0,n)===(t=U(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(D(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(D(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return m=!0,D(r,u,c.rounding,e)},I.tangent=I.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=R(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,D(2==a||4==a?n.neg():n,e,t,!0)):new r(NaN)},I.times=I.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this.constructor,p=this.d,f=(e=new c(e)).d;if(e.s*=this.s,!(p&&p[0]&&f&&f[0]))return new c(!e.s||p&&!p[0]&&!f||f&&!f[0]&&!p?NaN:p&&f?0*e.s:e.s/0);for(n=y(this.e/q)+y(e.e/q),(u=p.length)<(l=f.length)&&(s=p,p=f,f=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;0<=--r;){for(t=0,i=u+r;r<i;)a=s[i]+f[r]*p[i-r-1]+t,s[i--]=a%x|0,t=a/x|0;s[i]=(s[i]+t)%x|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=B(s,n),m?D(e,c.precision,c.rounding):e},I.toBinary=function(e,t){return te(this,2,e,t)},I.toDecimalPlaces=I.toDP=function(e,t){var n=this.constructor,r=new n(this);return void 0===e?r:(L(e,0,l),void 0===t?t=n.rounding:L(t,0,8),D(r,e+r.e+1,t))},I.toExponential=function(e,t){var n=this,r=n.constructor;return e=void 0===e?F(n,!0):(L(e,0,l),void 0===t?t=r.rounding:L(t,0,8),F(n=D(new r(n),e+1,t),!0,e+1)),n.isNeg()&&!n.isZero()?"-"+e:e},I.toFixed=function(e,t){var n=this,r=n.constructor,i=void 0===e?F(n):(L(e,0,l),void 0===t?t=r.rounding:L(t,0,8),F(i=D(new r(n),e+n.e+1,t),!1,e+i.e+1));return n.isNeg()&&!n.isZero()?"-"+i:i},I.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,p=this,f=p.d,h=p.constructor;if(!f)return new h(p);if(u=n=new h(1),r=a=new h(0),l=(s=(t=new h(r)).e=j(f)-p.e-1)%q,t.d[0]=b(10,l<0?q+l:l),null==e)e=0<s?t:u;else{if(!(o=new h(e)).isInt()||o.lt(u))throw Error(v+o);e=o.gt(t)?0<s?t:u:o}for(m=!1,o=new h(U(f)),l=h.precision,h.precision=s=f.length*q*2;c=R(o,t,0,1,1),1!=(i=n.plus(c.times(r))).cmp(e);)n=r,r=i,u=a.plus(c.times(i=u)),a=i,t=o.minus(c.times(i=t)),o=i;return i=R(e.minus(n),r,0,1,1),a=a.plus(i.times(u)),n=n.plus(i.times(r)),a.s=u.s=p.s,p=R(u,r,s,1).minus(p).abs().cmp(R(a,n,s,1).minus(p).abs())<1?[u,r]:[a,n],h.precision=l,m=!0,p},I.toHexadecimal=I.toHex=function(e,t){return te(this,16,e,t)},I.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);if(null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:L(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(m=!1,r=R(r,e,0,t,1).times(e),m=!0,D(r)):(e.s=r.s,r=e),r},I.toNumber=function(){return+this},I.toOctal=function(e,t){return te(this,8,e,t)},I.toPower=I.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(b(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return D(a,r,s);if((t=y(e.e/q))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=X(u,a,n,r),e.s<0?new u(1).div(i):D(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=b(+a,l))&&isFinite(n)?new u(n+"").e:y(l*(Math.log("0."+U(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(0<t?o/0:0):(m=!1,u.rounding=a.s=1,n=Math.min(12,(t+"").length),(i=$(e.times(Q(a,r+n)),r)).d&&_((i=D(i,r+5,1)).d,r,s)&&+U((i=D($(e.times(Q(a,(t=r+10)+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=D(i,r+1,0)),i.s=o,m=!0,D(i,r,u.rounding=s))},I.toPrecision=function(e,t){var n=this,r=n.constructor;return e=void 0===e?F(n,n.e<=r.toExpNeg||n.e>=r.toExpPos):(L(e,1,l),void 0===t?t=r.rounding:L(t,0,8),F(n=D(new r(n),e,t),e<=n.e||n.e<=r.toExpNeg,e)),n.isNeg()&&!n.isZero()?"-"+e:e},I.toSignificantDigits=I.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(L(e,1,l),void 0===t?t=n.rounding:L(t,0,8)),D(new n(this),e,t)},I.toString=function(){var e=this.constructor;return e=F(this,this.e<=e.toExpNeg||this.e>=e.toExpPos),this.isNeg()&&!this.isZero()?"-"+e:e},I.truncated=I.trunc=function(){return D(new this.constructor(this),this.e+1,1)},I.valueOf=I.toJSON=function(){var e=this.constructor;return e=F(this,this.e<=e.toExpNeg||this.e>=e.toExpPos),this.isNeg()?"-"+e:e};var R=function(e,t,n,r,i,s){var a,u,l,c,p,f,h,m,g,v,d,w,b,S,M,N,E,A,C,I=e.constructor,U=e.s==t.s?1:-1,L=e.d,_=t.d;if(!(L&&L[0]&&_&&_[0]))return new I(e.s&&t.s&&(L?!_||L[0]!=_[0]:_)?L&&0==L[0]||!_?0*U:U/0:NaN);for(u=s?(p=1,e.e-t.e):(s=x,y(e.e/(p=q))-y(t.e/p)),A=_.length,N=L.length,g=(U=new I(U)).d=[],l=0;_[l]==(L[l]||0);l++);if(_[l]>(L[l]||0)&&u--,null==n?(b=n=I.precision,r=I.rounding):b=i?n+(e.e-t.e)+1:n,b<0)g.push(1),f=!0;else{if(b=b/p+2|0,l=0,1==A){for(_=_[c=0],b++;(l<N||c)&&b--;l++)S=c*s+(L[l]||0),g[l]=S/_|0,c=S%_|0;f=c||l<N}else{for(1<(c=s/(_[0]+1)|0)&&(_=T(_,c,s),L=T(L,c,s),A=_.length,N=L.length),d=(v=L.slice(0,M=A)).length;d<A;)v[d++]=0;for((C=_.slice()).unshift(0),E=_[0],_[1]>=s/2&&++E;c=0,(a=P(_,v,A,d))<0?(w=v[0],1<(c=(w=A!=d?w*s+(v[1]||0):w)/E|0)?1==(a=P(h=T(_,c=s<=c?s-1:c,s),v,m=h.length,d=v.length))&&(c--,k(h,A<m?C:_,m,s)):(0==c&&(a=c=1),h=_.slice()),(m=h.length)<d&&h.unshift(0),k(v,h,d,s),-1==a&&(a=P(_,v,A,d=v.length))<1&&(c++,k(v,A<d?C:_,d,s)),d=v.length):0===a&&(c++,v=[0]),g[l++]=c,a&&v[0]?v[d++]=L[M]||0:(v=[L[M]],d=1),(M++<N||void 0!==v[0])&&b--;);f=void 0!==v[0]}g[0]||g.shift()}if(1==p)U.e=u,o=f;else{for(l=1,c=g[0];10<=c;c/=10)l++;U.e=l+u*p-1,D(U,i?n+U.e+1:n,r,f)}return U};function T(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function P(e,t,n,r){var i,s;if(n!=r)s=r<n?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function k(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&1<e.length;)e.shift()}function D(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor;e:if(null!=t){if(!(c=e.d))return e;for(i=1,a=c[0];10<=a;a/=10)i++;if((s=t-i)<0)s+=q,u=(l=c[p=0])/b(10,i-(o=t)-1)%10|0;else if((p=Math.ceil((s+1)/q))>=(a=c.length)){if(!r)break e;for(;a++<=p;)c.push(0);l=u=0,o=(s%=q)-q+(i=1)}else{for(l=a=c[p],i=1;10<=a;a/=10)i++;u=(o=(s%=q)-q+i)<0?0:l/b(10,i-o-1)%10|0}if(r=r||t<0||void 0!==c[p+1]||(o<0?l:l%b(10,i-o-1)),u=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):5<u||5==u&&(4==n||r||6==n&&(0<s?0<o?l/b(10,i-o):0:c[p-1])%10&1||n==(e.s<0?8:7)),t<1||!c[0])return c.length=0,u?(t-=e.e+1,c[0]=b(10,(q-t%q)%q),e.e=-t||0):c[0]=e.e=0,e;if(0==s?(c.length=p,a=1,p--):(c.length=p+1,a=b(10,q-s),c[p]=0<o?(l/b(10,i-o)%b(10,o)|0)*a:0),u)for(;;){if(0==p){for(s=1,o=c[0];10<=o;o/=10)s++;for(o=c[0]+=a,a=1;10<=o;o/=10)a++;s!=a&&(e.e++,c[0]==x&&(c[0]=1));break}if(c[p]+=a,c[p]!=x)break;c[p--]=0,a=1}for(s=c.length;0===c[--s];)c.pop()}return m&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function F(e,t,n){if(!e.isFinite())return Y(e);var r,i=e.e,s=U(e.d),o=s.length;return t?(n&&0<(r=n-o)?s=s.charAt(0)+"."+s.slice(1)+H(r):1<o&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+H(-i-1)+s,n&&0<(r=n-o)&&(s+=H(r))):o<=i?(s+=H(i+1-o),n&&0<(r=n-i-1)&&(s=s+"."+H(r))):((r=i+1)<o&&(s=s.slice(0,r)+"."+s.slice(r)),n&&0<(r=n-o)&&(i+1===o&&(s+="."),s+=H(r))),s}function B(e,t){var n=e[0];for(t*=q;10<=n;n/=10)t++;return t}function G(e,t,n){if(A<t)throw m=!0,n&&(e.precision=n),Error(d);return D(new e(p),t,1,!0)}function V(e,t,n){if(C<t)throw Error(d);return D(new e(f),t,n,!0)}function j(e){var t=e.length-1,n=t*q+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];10<=t;t/=10)n++}return n}function H(e){for(var t="";e--;)t+="0";return t}function X(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/q+4);for(m=!1;;){if(n%2&&ne((s=s.times(t)).d,o)&&(i=!0),0===(n=y(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}ne((t=t.times(t)).d,o)}return m=!0,s}function Z(e){return 1&e.d[e.d.length-1]}function z(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function $(e,t){var n,r,i,s,o,a,u,l=0,c=0,p=0,f=e.constructor,h=f.rounding,g=f.precision;if(!e.d||!e.d[0]||17<e.e)return new f(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(u=null==t?(m=!1,g):t,a=new f(.03125);-2<e.e;)e=e.times(a),p+=5;for(u+=r=Math.log(b(2,p))/Math.LN10*2+5|0,n=s=o=new f(1),f.precision=u;;){if(s=D(s.times(e),u,1),n=n.times(++c),U((a=o.plus(R(s,n,u,1))).d).slice(0,u)===U(o.d).slice(0,u)){for(i=p;i--;)o=D(o.times(o),u,1);if(null!=t)return f.precision=g,o;if(!(l<3&&_(o.d,u-r,h,l)))return D(o,f.precision=g,h,m=!0);f.precision=u+=10,n=s=a=new f(1),c=0,l++}o=a}}function Q(e,t){var n,r,i,s,o,a,u,l,c,p,f,h=1,g=e,v=g.d,d=g.constructor,w=d.rounding,y=d.precision;if(g.s<0||!v||!v[0]||!g.e&&1==v[0]&&1==v.length)return new d(v&&!v[0]?-1/0:1!=g.s?NaN:v?0:g);if(c=null==t?(m=!1,y):t,d.precision=c+=10,r=(n=U(v)).charAt(0),!(Math.abs(s=g.e)<15e14))return l=G(d,c+2,y).times(s+""),g=Q(new d(r+"."+n.slice(1)),c-10).plus(l),d.precision=y,null==t?D(g,y,w,m=!0):g;for(;r<7&&1!=r||1==r&&3<n.charAt(1);)r=(n=U((g=g.times(e)).d)).charAt(0),h++;for(s=g.e,1<r?(g=new d("0."+n),s++):g=new d(r+"."+n.slice(1)),u=o=g=R((p=g).minus(1),g.plus(1),c,1),f=D(g.times(g),c,1),i=3;;){if(o=D(o.times(f),c,1),U((l=u.plus(R(o,new d(i),c,1))).d).slice(0,c)===U(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(G(d,c+2,y).times(s+""))),u=R(u,new d(h),c,1),null!=t)return d.precision=y,u;if(!_(u.d,c-10,w,a))return D(u,d.precision=y,w,m=!0);d.precision=c+=10,l=o=g=R(p.minus(1),p.plus(1),c,1),f=D(g.times(g),c,1),i=a=1}u=l,i+=2}}function Y(e){return String(e.s*e.s/0)}function W(e,t){var n,r,i;for(0<(r=(t=-1<(n=t.indexOf("."))?t.replace(".",""):t).search(/e/i))?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%q,n<0&&(r+=q),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=q;r<i;)e.d.push(+t.slice(r,r+=q));t=t.slice(r),r=q-t.length}else r-=i;for(;r--;)t+="0";e.d.push(+t),m&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function J(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/q);for(m=!1,u=n.times(n),a=new e(r);;){if(o=R(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=R(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return m=!0,o.d.length=c+1,o}function K(e,t){for(var n=e;--t;)n*=e;return n}function ee(e,t){var n=t.s<0,r=V(e,e.precision,1),i=r.times(.5);if((t=t.abs()).lte(i))return a=n?4:1,t;if((e=t.divToInt(r)).isZero())a=n?3:2;else{if((t=t.minus(e.times(r))).lte(i))return a=Z(e)?n?2:3:n?4:1,t;a=Z(e)?n?1:4:n?3:2}return t.minus(r).abs()}function te(e,t,n,r){var i,s,a,u,p,f,h,m,g=e.constructor,v=void 0!==n;if(v?(L(n,1,l),void 0===r?r=g.rounding:L(r,0,8)):(n=g.precision,r=g.rounding),e.isFinite()){for(v?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,0<=(a=(f=F(e)).indexOf("."))&&(f=f.replace(".",""),(m=new g(1)).e=f.length-a,m.d=O(F(m),10,i),m.e=m.d.length),s=u=(h=O(f,10,i)).length;0==h[--u];)h.pop();if(h[0]){if(a<0?s--:((e=new g(e)).d=h,e.e=s,h=(e=R(e,m,n,r,0,i)).d,s=e.e,p=o),a=h[n],m=i/2,p=p||void 0!==h[n+1],p=r<4?(void 0!==a||p)&&(0===r||r===(e.s<0?3:2)):m<a||a===m&&(4===r||p||6===r&&1&h[n-1]||r===(e.s<0?8:7)),h.length=n,p)for(;++h[--n]>i-1;)h[n]=0,n||(++s,h.unshift(1));for(u=h.length;!h[u-1];--u);for(a=0,f="";a<u;a++)f+=c.charAt(h[a]);if(v){if(1<u)if(16==t||8==t){for(a=16==t?4:3,--u;u%a;u++)f+="0";for(u=(h=O(f,i,t)).length;!h[u-1];--u);for(a=1,f="1.";a<u;a++)f+=c.charAt(h[a])}else f=f.charAt(0)+"."+f.slice(1);f=f+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)f="0"+f;f="0."+f}else if(++s>u)for(s-=u;s--;)f+="0";else s<u&&(f=f.slice(0,s)+"."+f.slice(s))}else f=v?"0p+0":"0";f=(16==t?"0x":2==t?"0b":8==t?"0o":"")+f}else f=Y(e);return e.s<0?"-"+f:f}function ne(e,t){return e.length>t&&(e.length=t,1)}function re(e){return new this(e).abs()}function ie(e){return new this(e).acos()}function se(e){return new this(e).acosh()}function oe(e,t){return new this(e).plus(t)}function ae(e){return new this(e).asin()}function ue(e){return new this(e).asinh()}function le(e){return new this(e).atan()}function ce(e){return new this(e).atanh()}function pe(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?V(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=V(this,s,1).times(.5)).s=e.s:n=t.s<0?(this.precision=s,this.rounding=1,n=this.atan(R(e,t,s,1)),t=V(this,s,1),this.precision=r,this.rounding=i,e.s<0?n.minus(t):n.plus(t)):this.atan(R(e,t,s,1)):(n=V(this,s,1).times(0<t.s?.25:.75)).s=e.s:n=new this(NaN),n}function fe(e){return new this(e).cbrt()}function he(e){return D(e=new this(e),e.e+1,2)}function me(e){if(!e||"object"!=typeof e)throw Error(g+"Object expected");for(var t,n,r=!0===e.defaults,i=["precision",1,l,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9],s=0;s<i.length;s+=3)if(t=i[s],r&&(this[t]=h[t]),void 0!==(n=e[t])){if(!(y(n)===n&&i[s+1]<=n&&n<=i[s+2]))throw Error(v+t+": "+n);this[t]=n}if(t="crypto",r&&(this[t]=h[t]),void 0!==(n=e[t])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(v+t+": "+n);if(n){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(w);this[t]=!0}else this[t]=!1}return this}function ge(e){return new this(e).cos()}function ve(e){return new this(e).cosh()}function de(e,t){return new this(e).div(t)}function we(e){return new this(e).exp()}function ye(e){return D(e=new this(e),e.e+1,3)}function be(){var e,t,n=new this(0);for(m=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return m=!0,new this(1/0);n=t}return m=!0,n.sqrt()}function Se(e){return e instanceof s||e&&"[object Decimal]"===e.name||!1}function Me(e){return new this(e).ln()}function Ne(e,t){return new this(e).log(t)}function Ee(e){return new this(e).log(2)}function xe(e){return new this(e).log(10)}function qe(){return z(this,arguments,"lt")}function Ae(){return z(this,arguments,"gt")}function Ce(e,t){return new this(e).mod(t)}function Ie(e,t){return new this(e).mul(t)}function Ue(e,t){return new this(e).pow(t)}function Le(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:L(e,1,l),r=Math.ceil(e/q),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)429e7<=(i=t[s])?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(w);for(t=crypto.randomBytes(r*=4);s<r;)214e7<=(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=q,r&&e&&(i=b(10,q-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)a=[n=0];else{for(n=-1;0===a[0];n-=q)a.shift();for(r=1,i=a[0];10<=i;i/=10)r++;r<q&&(n-=q-r)}return o.e=n,o.d=a,o}function _e(e){return D(e=new this(e),e.e+1,this.rounding)}function Oe(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Re(e){return new this(e).sin()}function Te(e){return new this(e).sinh()}function Pe(e){return new this(e).sqrt()}function ke(e,t){return new this(e).sub(t)}function De(e){return new this(e).tan()}function Fe(e){return new this(e).tanh()}function Be(e){return D(e=new this(e),e.e+1,1)}return(s=function e(t){var n,r,i;function o(e){var t,n,r,i=this;if(!(i instanceof o))return new o(e);if(e instanceof(i.constructor=o))return i.s=e.s,void(m?!e.d||e.e>o.maxE?(i.e=NaN,i.d=null):e.e<o.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d&&e.d.slice()));if("number"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;10<=n;n/=10)t++;return void(m?o.maxE<t?(i.e=NaN,i.d=null):t<o.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):W(i,e.toString())}if("string"!=r)throw Error(v+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),(E.test(e)?W:function(e,t){var n,r,i,o,a,u,l,c;if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(M.test(t))c=16,t=t.toLowerCase();else if(S.test(t))c=2;else{if(!N.test(t))throw Error(v+t);c=8}for(o=0<=(i=(t=0<(i=t.search(/p/i))?(u=+t.slice(i+1),t.substring(2,i)):t.slice(2)).indexOf(".")),n=e.constructor,o&&(i=(a=(t=t.replace(".","")).length)-i,r=X(n,new n(c),i,2*i)),i=c=(l=O(t,c,x)).length-1;0===l[i];--i)l.pop();return i<0?new n(0*e.s):(e.e=B(l,c),e.d=l,m=!1,o&&(e=R(e,r,4*a)),u&&(e=e.times(Math.abs(u)<54?b(2,u):s.pow(2,u))),m=!0,e)})(i,e)}if(o.prototype=I,o.ROUND_UP=0,o.ROUND_DOWN=1,o.ROUND_CEIL=2,o.ROUND_FLOOR=3,o.ROUND_HALF_UP=4,o.ROUND_HALF_DOWN=5,o.ROUND_HALF_EVEN=6,o.ROUND_HALF_CEIL=7,o.ROUND_HALF_FLOOR=8,o.EUCLID=9,o.config=o.set=me,o.clone=e,o.isDecimal=Se,o.abs=re,o.acos=ie,o.acosh=se,o.add=oe,o.asin=ae,o.asinh=ue,o.atan=le,o.atanh=ce,o.atan2=pe,o.cbrt=fe,o.ceil=he,o.cos=ge,o.cosh=ve,o.div=de,o.exp=we,o.floor=ye,o.hypot=be,o.ln=Me,o.log=Ne,o.log10=xe,o.log2=Ee,o.max=qe,o.min=Ae,o.mod=Ce,o.mul=Ie,o.pow=Ue,o.random=Le,o.round=_e,o.sign=Oe,o.sin=Re,o.sinh=Te,o.sqrt=Pe,o.sub=ke,o.tan=De,o.tanh=Fe,o.trunc=Be,(t=void 0===t?{}:t)&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return o.config(t),o}(h)).default=s.Decimal=s,p=new s(p),f=new s(f),void 0!==(i=function(){return s}.call(t,r,t,e))&&(e.exports=i),s}()});e.exports=o,o=r(182),r(238),function(){"use strict";var e=o.getCore(),t=e.PARSER,n=e.groups.N,r=e.groups.P,i=e.groups.S,s=e.groups.EX,a=e.groups.FN,u=e.groups.PL,l=e.groups.CP,c=e.groups.CB,p=e.Utils.keys,f=e.Utils.even,h=e.Utils.variables,m=e.Utils.format,g=e.Utils.round,v=e.Frac,d=e.Utils.isInt,w=e.Symbol,y=e.Settings.CONST_HASH,b=e.Utils.importFunctions();function S(n,r,i){if(e.Utils.isSymbol(n))this.parse(n),this.variable=this.variable||r;else if(isNaN(n))"string"==typeof n&&this.parse(t.parse(n));else{if(i=i||0,void 0===r)throw new e.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[i]=n,this.fill(n)}}function M(){this.factors={},this.length=0}function N(t,n,r){this.terms=n||[],this.coeff=t,this.map=r,this.sum=new e.Frac(0),this.image=void 0}e.Utils.evaluate,S.fromArray=function(t,n){if(void 0===n)throw new e.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var r=new S;return r.coeffs=t,r.variable=n,r},S.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,a-=(o[i]=e)*Math.pow(r,i);for(var u=i-1;0<u;u--){var l=Math.pow(r,u),c=a/l;a-=(c=Math.sign(c)*Math.floor(Math.abs(c)))*l,o[u]=c}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new v(o[u]);return S.fromArray(o,s)},S.prototype={parse:function(r,i){if(this.variable=h(r)[0],!r.isPoly())throw e.exceptions.NerdamerTypeError("Polynomial Expected! Received "+e.Utils.text(r));if(i=i||[],(r=r.power.absEquals(1)?r:t.expand(r)).group===e.groups.N)i[0]=r.multiplier;else if(r.group===e.groups.S)i[r.power.toDecimal()]=r.multiplier;else for(var s in r.symbols){var o=r.symbols[s];if(s=o.power,e.Utils.isSymbol(s))throw new e.exceptions.NerdamerTypeError("power cannot be a Symbol");s=o.group===n?0:s.toDecimal(),o.symbols?this.parse(o,i):i[s]=o.multiplier}this.coeffs=i,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new v(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(0<this.coeffs[s]){i=this.coeffs[s];break}if(i){for(;n<s;s--)this.coeffs[s]=this.coeffs[s].subtract(new v(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new v(e));r=this.coeffs[n]}}var o,a=r.mod(e),u=r.subtract(a).divide(e);u.equals(0)||(r=(r=this.coeffs[o=n+1]||new v(0)).add(u),this.coeffs[o]=new v(r),this.coeffs[n]=new v(a))}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new v(0),i=e.coeffs[n]||new v(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(t){for(var n=this.variable,r=e.Utils.arrayClone(this.coeffs),i=e.Utils.arrayClone(t.coeffs),s=r.length,o=i.length-1,a=[],u=0;u<s;u++){var l=s-(u+1),c=l-o,p=r[l].divide(i[o]);if(c<0)break;a[c]=p;for(var f=0;f<=o;f++)r[f+c]=r[f+c].subtract(i[f].multiply(p))}return t=S.fromArray(r,n||"x").trim(),[S.fromArray(a,n||"x"),t]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new v(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new v(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new v(Math.pow(e,r)))))}return t},clone:function(){var e=new S;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(t){if(this.coeffs.length-1<t.coeffs.length-1)return t.gcd(this);for(var n=this;!t.isZero();){var r=t.clone();t=(n=n.clone()).divide(r)[1],n=r}var i=e.Math2.QGCD.apply(null,n.coeffs);if(!i.equals(1))for(var s=n.coeffs.length,o=0;o<s;o++)n.coeffs[o]=n.coeffs[o].divide(i);return n},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new v(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new v(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(t){for(var n=[],r=0;r<this.coeffs.length;r++){var i=this.coeffs[r];i.equals(0)||-1!==n.indexOf(i)||n.push(i)}var s=[e.Math2.QGCD.apply(void 0,n),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();return t&&((t=[])[s[1]-1]=s[0],s=S.fromArray(t,this.variable).fill()),s},quad:function(e){var t=[];if(3<this.coeffs.length)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error("Polynomial array has no terms");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=S.fromArray([new v(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&1<t){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,r=r.divide(i=o)[0]}return[s,i,t]},toSymbol:function(){var n=this.coeffs.length,r=this.variable;if(0===n)return new e.Symbol(0);for(var i=n-1,s="",o=0;o<n;o++){var a=o===i?"":"+",u=this.coeffs[o];u.equals(0)||(s+=u+"*"+r+"^"+o+a)}return t.parse(s)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},w.prototype.coeffs=function(e,n){n&&!this.isPoly(!0)&&t.error("Polynomial expected when requesting coefficients with order"),e=e||[];var r,i=this.clone().distributeMultiplier();if(i.isComposite())for(var s in i.symbols)(s=i.symbols[s]).isComposite()?s.clone().distributeMultiplier().coeffs(e,n):n?e[s.isConstant()?0:s.power.toDecimal()]=s.multiplier:e.push(s.multiplier);else n?e[i.isConstant(!0)?0:i.power.toDecimal()]=i.multiplier:i.group===c&&i.isImaginary()?(r=new w(i.multiplier),i.each((function(e){(e.isConstant(!0)||e.imaginary)&&(r=t.multiply(r,e))})),e.push(r)):e.push(i.multiplier);if(n)for(var o=0;o<e.length;o++)void 0===e[o]&&(e[o]=new w(0));return e},w.prototype.tBase=function(e){if(void 0===e)throw new Error("Symbol.tBase requires a map object!");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new N(s.multiplier,[],e);if(o===c)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},w.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return("1"===t?"":t+"*")+e+("1"===n?"":"^"+n)},w.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t];if(!(t=e.symbols[t]))return!1;if(n.value!==t.value)return!1}return!0},w.prototype.groupTerms=function(n){var r,i,s;n=String(n);var o=[];return this.each((function(a){if(a.group===u){s=a.groupTerms(n);for(var l=0;l<s.length;l++){var c=s[l];c&&(o[l]=c)}}else r=e.Utils.decompose_fn(a,n,!0),i=r.x.value===n?Number(r.x.power):0,o[i]=t.add(o[i]||new w(0),r.a)})),o},w.prototype.collectFactors=function(){var e=[];return this.group===c?this.each((function(t){e.push(t.clone())})):e.push(this.clone()),e},M.prototype.getNumberSymbolics=function(){var e=0;return this.each((function(t){t.isConstant(!0)||e++})),e},M.prototype.add=function(n){if(n.equals(0))return this;if(n.equals(-1)&&0<this.length){var r=e.Utils.firstObject(this.factors,null,!0);return this.add(t.symfunction(e.Settings.PARENTHESIS,[r.obj]).negate()),delete this.factors[r.key],this.length--,this}if(n.group===c){var i=this;n.multiplier.equals(1)||i.add(new w(n.multiplier)),n.each((function(e){i.add(e)}))}else{if(this.preAdd&&(n=this.preAdd(n)),(r=(n=this.pFactor?t.pow(n,new w(this.pFactor)):n).isConstant())&&n.equals(1))return this;(r=r?n.value:n.text())in this.factors?(this.factors[r]=t.multiply(this.factors[r],n),this.factors[r].equals(1)&&(delete this.factors[r],this.length--)):(this.factors[r]=n,this.length++)}return this},M.prototype.toSymbol=function(){for(var n=new w(1),r=Object.values(this.factors).sort((function(e,t){return e.group>t.group})),i=0,s=r.length;i<s;i++){var o=(o=r[i]).power.equals(1)&&""!==o.fname?t.symfunction(e.PARENTHESIS,[o]):o;n=t.multiply(n,o)}return""===n.fname?w.unwrapPARENS(n):n},M.prototype.merge=function(e){for(var n in e)n in this.factors?this.factors[n]=t.multiply(this.factors[n],e[n]):this.factors[n]=e[n];return this},M.prototype.each=function(t){for(var n in this.factors){var r=this.factors[n];r.fname===e.PARENTHESIS&&r.isLinear()&&(r=r.args[0]),t.call(this,r,n)}return this},M.prototype.count=function(){return p(this.factors).length},M.prototype.clean=function(){try{var t=e.Settings.CONST_HASH;this.factors[t].lessThan(0)&&(this.factors[t].equals(-1)?delete this.factors[t]:this.factors[t].negate(),this.each((function(e){e.negate()})))}catch(t){}},M.prototype.toString=function(){return this.toSymbol().toString()},N.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},N.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap(),n.equals(0)||e.push(this.rev_map[t])}return e.join(" ")},N.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},N.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var n=new w(this.coeff),r=0;r<this.terms.length;r++){var i=e[r],s=this.terms[r];s.equals(0)||i===y||((i=new w(i)).power=s,n=t.multiply(n,i))}return n},N.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e,t={};for(e in this.map)t[this.map[e]]=e;return this.rev_map=t},N.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},N.prototype.getImg=function(){return this.image||this.generateImage(),this.image},N.prototype.fill=function(){for(var t=this.map.length,n=0;n<t;n++)void 0===this.terms[n]?this.terms[n]=new e.Frac(0):this.sum=this.sum.add(this.terms[n]);return this},N.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new N(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},N.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new N(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},N.prototype.isZero=function(){return this.coeff.equals(0)},N.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},e.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},e.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},e.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},e.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some((function(e){return-1<t.indexOf(e)}))},e.Utils.subFunctions=function(t,n){n=n||{};var r=[];return t.each((function(t){var i,s;t.group===a||t.previousGroup===a?(i=e.Utils.text(t,"hash"),(s=n[i])||(s=t.fname+p(n).length,n[i]=s),r.push(t.altVar(s))):t.group===c||t.group===u||t.group===l?r.push(e.Utils.subFunctions(t,n)):r.push(t.text())})),t.group===l||t.group===u?t.altVar(e.Utils.inBrackets(r.join("+"))):t.group===c?t.altVar(e.Utils.inBrackets(r.join("*"))):t.text()},e.Utils.getFunctionsSubs=function(e){var n,r={};for(n in e)r[e[n]]=t.parse(n);return r};var E=e.Algebra={version:"1.4.6",proots:function(n,r){function s(t,n,i){for(var s=function(t,n){var i=t.slice(0);if(t.unshift(n),100<n)throw new e.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to 100. ");var s=[];for((t={}).Degree=n,d=0;d<n;d++)s.push(0);var o=s.slice(0);function a(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-t*s.b+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function u(e,t,n,r,i,s,o,u,l){var c=new Object,p=3;return c.b=c.a=0,a(t,o,u,s,l,c),i.c=c.a,i.d=c.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=u*r,Math.abs(i.d)>=Math.abs(i.c)?(p=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(p=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-n*(i.d/i.c)+r,i.a7=i.g*i.d+i.h*i.f+n)),p}function l(e,t,n,r,i,s,o,a,u){if(3!=n)if(r=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(r))for(s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-u[0]*s.a7+u[1],l=2;l<t;l++)o[l]=-u[l-1]*s.a7+a[l-2]*s.a3+u[l];else for(o[0]=0,o[1]=-u[0]*s.a7,l=2;l<t;l++)o[l]=-u[l-1]*s.a7+a[l-2]*s.a3;else{o[1]=o[0]=0;for(var l=2;l<t;l++)o[l]=a[l-2]}}function c(e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g,v){var d;t.b=t.a=0,3!=e&&(a=2!=e?(d=n+f*o+p*l,a+(f+h*l)*u):(d=(n+c)*l+p,(l+f)*a+h*u),u=-m[g-1]/v[g],0!=(d=-(i=h*(m=-(m[g-2]+u*v[g-1])/v[g])*r-((v=u*s)+(g=u*u*i)))+a+u*d)&&(t.a=-(f*(g+v)+h*(u*r+m*s))/d+f,t.b=h*(1+i/d)))}function p(e,t,n,r){var i,s,o;(r.sr=r.si=r.lr=r.li=0)!=e?0!=n?(i=t/2,s=Math.abs(i)<Math.abs(n)?(o=-(o=0<=n?e:-e)+i*(i/Math.abs(n)),Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,Math.sqrt(Math.abs(o))*Math.abs(i)),0<=o?(r.lr=(-i+(s=0<=i?-s:s))/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function f(e,t,n,r,i,s,o,f,h,m,g,v){var d,w,y,b,S,M,N,E,x,q,A,C,I,U,L,_,O,R,T,P,k,D,F,B,G,V=new Object,j=new Object,H=new Array(t),X=new Array(t),Z=1;for(v.NZ=0,b=y=.25,S=r,E=i,V.b=V.a=0,a(h,g,i,f,m,V),d=V.a,w=V.b,j.h=j.g=j.f=j.e=j.d=j.c=j.a7=j.a3=j.a1=0,F=u(e,o,d,w,j,s,g,i,H),P=0;P<n;P++){if(R=1,l(e,o,F,d,w,j,s,H,m),c(F=u(e,o,d,w,j,s,g,i,H),V,d,j.a1,j.a3,j.a7,w,j.c,j.d,j.f,j.g,j.h,g,i,s,o,f),L=V.a,O=_=V.b,q=0!=s[o-1]?-f[o]/s[o-1]:0,A=I=1,0!=P&&3!=F&&(B=(U=(I=0!=O?Math.abs((O-E)/O):I)<N?I*N:1)<b?1:0,(k=(C=(A=0!=q?Math.abs((q-S)/q):A)<M?A*M:1)<y?1:0)||B)){for(T=0;T<o;T++)X[T]=s[T];for(x=q,D=G=0;;){if(!R||0!=(R=0)||!k||B&&!(C<U)){if(function(e,t,n,r,i,s,o,f,h,m,g,v){var d,w,y,b,S,M,N,E,x,q=new Object,A=0,C=0;n.NZ=0,b=r,M=i;do{if(q.li=q.lr=q.si=q.sr=0,p(1,b,M,q),n.szr=q.sr,n.szi=q.si,n.lzr=q.lr,n.lzi=q.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(a(o,b,M,h,s,f),N=Math.abs(-n.szr*f.b+f.a)+Math.abs(n.szi*f.b),E=Math.sqrt(Math.abs(M)),d=2*Math.abs(s[0]),S=-n.szr*f.b,x=1;x<t;x++)d=d*E+Math.abs(s[x]);if(N<=20*(d=(9*(d=d*E+Math.abs(S+f.a))+2*Math.abs(S)-7*(Math.abs(f.a+S)+E*Math.abs(f.b)))*e)){n.NZ=2;break}if(20<++A)break;if(2<=A&&y<=.01&&w<=N&&!C){for(a(o,b-=b*(y=y<e?Math.sqrt(e):Math.sqrt(y)),M+=M*y,h,s,f),x=0;x<5;x++)l(e,t,u(e,t,f.a,f.b,g,v,b,M,m),f.a,f.b,g,v,m,s);C=1,A=0}}while(w=N,l(e,t,u(e,t,f.a,f.b,g,v,b,M,m),f.a,f.b,g,v,m,s),c(u(e,t,f.a,f.b,g,v,b,M,m),f,f.a,g.a1,g.a3,g.a7,f.b,g.c,g.d,g.f,g.g,g.h,b,M,v,t,h),S=f.a,0!=(N=f.b)&&(y=Math.abs((-M+N)/N),b=S,M=N),0!=N)}(e,o,v,L,_,m,h,V,f,H,j,s),d=V.a,w=V.b,0<v.NZ)return;if(Z=G=1,b*=.25,D||!k)Z=0;else for(T=0;T<o;T++)s[T]=X[T]}if(0!=Z){if(V.a=x,Z=function(e,t,n,r,i,s,o,a,u){var l,c,p,f,h,m,g,v,d,w,y,b=r-1;for(t.NZ=y=d=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(p=Math.abs(m),f=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*f+Math.abs(o[w]);if(p<=20*e*(2*l-p)){t.NZ=1,t.szr=g,t.szi=0;break}if(10<++y)break;if(2<=y&&Math.abs(v)<=.001*Math.abs(-v+g)&&h<p){d=1,t.a=g;break}for(h=p,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(v=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=v*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=v=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return d}(e,v,V,o,f,h,m,s,H),x=V.a,0<v.NZ)return;if(D=1,y*=.25,0!=Z){L=-(x+x),_=x*x;continue}}for(T=0;T<o;T++)s[T]=X[T];if(!B||G)break}a(h,g,i,f,m,V),F=u(e,o,d=V.a,w=V.b,j,s,g,i,H)}E=O,S=q,N=I,M=A}}!function(e,t,n,r){for(var i,s,o,a,u,l,c,h,m,g,v,d,w,y,b=e.Degree,S=.017453292519943295,M=Math.LN2,N=e.Degree+1,E=new Array(N),x=new Array(N),q=new Array(N),A=new Array(N),C=new Object,I=new Object,U=1;i=U,1<(l=1+(U/=2)););var L=Number.MIN_VALUE/i,_=Math.cos(94*S),O=Math.sin(94*S),R=Math.sqrt(.5),T=-R;for(I.NZ=m=0,I.szr=I.szi=I.lzr=I.lzi=0;0==t[b];)n[m]=r[m]=0,b--,m++;for(w=b+1;1<=b;){if(b<=2){b<2?(n[e.Degree-1]=-t[1]/t[0],r[e.Degree-1]=0):(p(t[C.li=C.lr=C.si=C.sr=0],t[1],t[2],C),n[e.Degree-2]=C.sr,r[e.Degree-2]=C.si,n[e.Degree-1]=C.lr,r[e.Degree-1]=C.li);break}for(a=0,u=Number.MAX_VALUE,P=0;P<w;P++)a<(k=Math.abs(t[P]))&&(a=k),0!=k&&k<u&&(u=k);if(((v=L/u)<=1&&10<=a||1<v&&Number.MAX_VALUE/v>=a)&&(v=0==v?Number.MIN_VALUE:v,v=Math.floor(Math.log(v)/M+.5),1!=(o=Math.pow(2,v))))for(P=0;P<w;P++)t[P]*=o;for(var P=0;P<w;P++)x[P]=Math.abs(t[P]);x[b]=-x[b],d=b-1,k=Math.exp((Math.log(-x[b])-Math.log(x[0]))/b),D=k=0!=x[d]&&(D=-x[b]/x[d])<k?D:k;do{var k,D=.1*(k=D),F=x[0];for(P=1;P<w;P++)F=F*D+x[P]}while(0<F);do{var B=F=x[0];for(P=1;P<b;P++)B=k*B+(F=k*F+x[P])}while(k-=s=(F=k*F+x[b])/B,.005<Math.abs(s/k));var G=k;for(P=1;P<b;P++)E[P]=(b-P)*t[P]/b;for(E[0]=t[0],U=t[b],l=t[d],y=0==E[d]?1:0,g=0;g<5;g++)if(c=E[d],y){for(P=0;P<d;P++)E[m=d-P]=E[m-1];y=(E[0]=0)==E[d]?1:0}else{var V=-U/c;for(P=0;P<d;P++)E[m=d-P]=V*E[m-1]+t[m];E[0]=t[0],y=Math.abs(E[d])<=Math.abs(l)*i*10?1:0}for(P=0;P<b;P++)A[P]=E[P];for(g=1;g<=20;g++){if(h=-O*T+_*R,T=O*R+_*T,f(i,N,20*g,h=G*(R=h),G,E,b,t,w,q,-2*h,I),0!=I.NZ){for(n[m=e.Degree-b]=I.szr,r[m]=I.szi,b=(w-=I.NZ)-1,P=0;P<w;P++)t[P]=q[P];1!=I.NZ&&(n[m+1]=I.lzr,r[m+1]=I.lzi);break}for(P=0;P<b;P++)E[P]=A[P]}if(20<g){e.Degree-=b;break}}}(t,i,o,s);var h=s.length;for(d=0;d<h;d++){var m=g(s[d],r+8),v=g(o[d],r+8),w=m<0?"-":"";0===(v=2<r-String(v).length?v:o[d])&&(v=""),0===m&&(m=""),m=1===Math.abs(m)?w+"i":m?m+"*i":"",m=v&&m?v+"+"+m:v+m,o[d]=m.replace(/\+\-/g,"-")}return o}(t,i).concat(a),o=0;o<0;o++)s.unshift(0);return s}r=r||7;var o,a=[];if(n instanceof w&&n.isPoly()){if(n.distributeMultiplier(),n.group===u&&(o=e.Utils.arrayMin(p(n.symbols)),o=n.symbols[o].clone().toUnitMultiplier(),n=t.expand(t.divide(n,o)),a.push(0)),n.group===e.groups.S)return[0];n.group===e.groups.PL&&(h=p(n.symbols),l=e.Utils.arrayMin(h),n=e.PARSER.divide(n,e.PARSER.parse(n.value+"^"+l)));for(var l=p(n.symbols).sort().pop(),c=n.group===e.groups.PL?n.symbols:n.symbols[l],f=c.group,h=f===i?[c.power.toDecimal()]:p(c.symbols),m=[],v=e.Utils.arrayMax(h),d=1;d<=v;d++){var b=0;-1!==h.indexOf(d+"")&&(b=(f===i?c:c.symbols[d]).multiplier),m.unshift(b)}return m.push(n.symbols[y].multiplier),c.group===i&&(m[0]=c.multiplier),s(m,0,v)}if(e.Utils.isArray(n)){var S=n,M=(m=[],h=[],0);for(d=0;d<S.length;d++){for(var N=S[d][0],E=S[d][1],x=E-M-1,q=0;q<x;q++)m.unshift(0);m.unshift(N),0!==E&&h.push(E),M=E}return s(m,0,v=Math.max.apply(void 0,h))}throw new e.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!")},roots:function(n){return n.isConstant(!0,!0)?e.Utils.nroots(n):(n=E.proots(n).map((function(e){return t.parse(e)})),e.Vector.fromArray(n))},froot:function(t,n,r){return function(n){for(var i=r||e.Utils.build(e.Calculus.diff(t.clone())),s=t instanceof Function?t:e.Utils.build(t),o=!1,a=0;!o;){var u=n-s(n)/i(n),l=Math.abs(u)-Math.abs(n);n=u,Math.abs(l)<1e-12?o=!0:1e4<a&&(o=!(n=null)),a++}return n}(Number(n))},quad:function(e,n,r){function i(e,n,r,i){return t.parse("-("+n+"+"+i+"*sqrt(("+n+")^2-4*("+e+")*("+r+")))/(2*"+e+")")}return[i(e,n,r,1),i(e,n,r,-1)]},sumProd:function(e,t){return E.quad(-t,e,-1).map((function(e){return e.invert()}))},coeffs:function(e,n,r){n=String(n),e=t.expand(e),r=r||[new w(0)],e.group===s&&e.contains(n,!0)&&t.error("Unable to get coefficients using expression "+e.toString());var i,o=h(e);if(1!==o.length||o[0]!==n||e.isImaginary())n||t.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),-1===o.indexOf(n)?r[0]=t.add(e,r[0]):(r=r||[new w(0)],e.group===c?((i=e.symbols[n])||t.error("Expression is not a polynomial!"),o=Number(i.power),((m=t.divide(e.clone(),i.clone())).contains(n,!0)||o<0||!d(o))&&t.error("Expression is not a polynomial!"),(f=r[o])&&(m=t.add(f,m)),r[o]=m):e.group===l&&e.each((function(e){E.coeffs(e.clone(),n,r)}),!0));else for(var a=new S(e).coeffs.map((function(e){return new w(e)})),u=0,p=a.length;u<p;u++){var f,m=a[u];(f=r[u])&&(m=t.add(f,m)),r[u]=m}for(u=0,p=r.length;u<p;u++)void 0===r[u]&&(r[u]=new w(0));return r},polyPowers:function(t,r,s){if(s=s||[],(f=t.group)===u&&r===t.value)s=s.concat(p(t.symbols));else if(f===l)for(var o in t.symbols){var a=t.symbols[o],f=a.group;o=a.value,f===i&&r===o?s.push(a.power):f===u||f===l?s=E.polyPowers(a,r,s):f===c&&a.contains(r)?(a=a.symbols[r])&&s.push(a.power):f!==n&&r===o||s.push(0)}else f===c&&t.contains(r)&&s.push(e.Utils.decompose_fn(t,r,!0).x.power);return e.Utils.arrayUnique(s).sort()},Factor:{split:function(e){var n=new w(1),r=new w(1);return E.Factor.factor(e,new M).each((function(e){var i=t.parse(e);e.isConstant(!0)?n=t.multiply(n,i):r=t.multiply(r,i)})),[n,r]},mix:function(e,t){for(var n=p(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(n,r){try{if(n.group===l){for(var i=t.expand(n.clone(),!0).collectSymbols(null,null,(function(e,t){return(t.length||1)-(e.length||1)})),s={},o=[],a=0;a<i.length;a++){var u=i[a];o.push(u.multiplier.clone()),u.each((function(e){var t=Number(e.power);if(isNaN(t))throw new Error("exiting");e.value in s?(t<s[e.value][0]&&(s[e.value][0]=t),s[e.value][1].push(e)):s[e.value]=[t,[e]]}))}var c,p=new w(1);for(c in s)s[c][1].length===i.length&&(p=t.multiply(p,t.pow(new w(c),new w(s[c][0]))));var f=e.Math2.QGCD.apply(null,o);if(!f.equals(1))for(r.add(new w(f)),a=0;a<i.length;a++)i[a].multiplier=i[a].multiplier.divide(f);if(!p.equals(1))for(r.add(p),n=new w(0),a=0;a<i.length;a++)n=t.add(n,t.divide(i[a],p.clone()))}}catch(n){}return n},zeroes:function(n,r){function i(){throw new e.exceptions.ValueLimitExceededError("Exiting")}try{for(var s,o,a,u=(n=t.expand(n.clone())).toString(),c=h(n),p=new w(0),f=[],m=[],g=0,y=c.length;g<c.length;g++){for(var b={},S=0;S<y;S++)g!==S&&(b[c[S]]=0);var M,N=(M=t.parse(u,b)).power;d(N)||i(),f.push(M),m.push(M.power)}for(e.Utils.allSame(m)?(o=n.length,2===(a=f.length)&&(s=new v(m[0]/(o-1))),3===a&&(s=new v(m[0]/Math.round((Math.sqrt(8*o-1)-3)/2)))):s=e.Math2.QGCD.apply(null,m),d(s)||i(),g=0;g<f.length;g++){var x=f[g],q=x.power.clone().divide(s);x.multiplier=new v(Math.pow(x.multiplier,1/q)),x.power=s.clone(),p=t.add(p,x)}if(p.group!==l)return n;for(;;){var A=E.div(n.clone(),p.clone());if(!A[1].equals(0))break;if(n=A[0],r.add(p.clone()),n.equals(1))break}}catch(u){}return n},factor:function(n,r){if(n.isConstant())return e.Math2.factor(n);var i,s,o=t.parse(n);return(r=E.Factor._factor(o,r)).equals(n)||r.group===c&&(i=new w(1),n=t.parse(r.power),s=t.parse(r.multiplier),r.toUnitMultiplier(),r.multiplier.lessThan(0)&&(i.negate(),r.negate()),r.each((function(e){(e=t.parse(E.Factor._factor(e))).group===c?(s=t.multiply(s,w.create(e.multiplier)),e.each((function(e){e=t.parse(E.Factor._factor(e)),i=t.multiply(i,e),e.group===c&&(s=t.multiply(s,w.create(e.multiplier)))}))):i=t.multiply(i,e)})),r=t.pow(t.multiply(s,i),n)),r},quadFactor:function(n,r){if(n.isPoly()&&E.degree(n.equals(2))){var i=e.Utils.variables(n)[0],s=E.coeffs(n,i);if((l=E.Factor._factor(s[2].clone())).group===c){var o=l.collectSymbols();if(2<o.length)return n;var a=t.multiply(t.parse(s[0]),t.parse(o[0])),u=t.parse(s[1]).negate(),l=t.parse(o[1]);a=E.quad(l,u,a).filter((function(t){if(e.Utils.isInt(t))return t})),1===a.length&&(a=a[0],s=t.divide(s[0],t.parse(a)),e.Utils.isInt(s)&&(r.add(t.parse(m("({0})*({1})+({2})",o[1],i,s))),r.add(t.parse(m("({0})*({1})+({2})",o[0],i,a))),n=new w(1)))}}return n},cubeFactor:function(e,n){var r,i,s,o,a,u;return!e.isComposite()||2===(u=e.collectSymbols()).length&&(r=u[0].sign(),i=u[0].clone().abs(),s=u[1].sign(),o=u[1].clone().abs(),i.isCube()&&o.isCube()&&(r<s&&([r,s]=[s,r],[i,o]=[o,i]),a=t.parse(i.getNth(3)),u=t.parse(o.getNth(3)),a=t.multiply(t.expand(t.pow(i.clone().toUnitMultiplier(),t.parse("1/3"))),a),u=t.multiply(t.expand(t.pow(o.clone().toUnitMultiplier(),t.parse("1/3"))),u),1===r&&-1===s?(n.add(t.parse(m("(({0})-({1}))",a,u))),n.add(t.parse(m("(({0})^2+({0})*({1})+({1})^2)",a,u))),e=w(1)):1===r&&1===s&&(n.add(t.parse(m("(({0})+({1}))",a,u))),n.add(t.parse(m("(({0})^2-({0})*({1})+({1})^2)",a,u))),e=w(1)))),e},_factor:function(n,r){var s;if(n.group,n.group===a){var o=n.args[0];if(o.group===i&&o.isSimple())return n}else if(n.group===i&&n.isSimple())return n;n.group===l&&(n.distributeMultiplier(!0),s=new w(0),n.each((function(e){(e.group===l&&e.power.greaterThan(1)||e.group===c)&&(e=t.expand(e)),s=t.add(s,e)})),s.power=n.power,n=s),o=(n=n.group===a&&"sqrt"!==n.fname?e.Utils.evaluate(n):n).clone();try{if(n.group===c){var u=t.parse(n.power),m=E.Simplify.strip(n.getDenom()),g=E.Simplify.strip(n.getNum()),v=m.pop(),y=g.pop();if(y.equals(n))return n;var b=E.Factor.factor(y),S=E.Factor.factor(v),N=E.Simplify.unstrip(g,b),x=E.Simplify.unstrip(m,S);return t.divide(N,x)}if(n.group===i)return n;if(n.isConstant())return n.equals(1)?n.clone():e.Math2.factor(n);if(u=n.power.clone(),!d(u)||u.lessThan(0)&&n.group===a)return n;var q=u.sign();n.toLinear(),r=r||new M;var A={};n=t.parse(e.Utils.subFunctions(n,A)),0<p(A).length&&(r.preAdd=function(n){return t.parse(n,e.Utils.getFunctionsSubs(A))}),n.isLinear()||(r.pFactor=n.power.toString(),n.toLinear());var C=h(n);n.isImaginary()&&C.push(e.Settings.IMAGINARY);var I=1<C.length;if(I){var U=!0,L=!0;if(n.each((function(e){e.group!==i&&(U=!1),e.multiplier.equals(1)||(L=!1)})),U&&L)return t.pow(t.parse(n,e.Utils.getFunctionsSubs(A)),t.parse(u))}var _=new M;n=E.Factor.coeffFactor(n,_),_.each((function(e){f(u)&&e.lessThan(0)&&e.negate(),q<0&&e.invert(),r.add(e)}));var O=new M;if(n=E.Factor.powerFactor(n,O),O.each((function(e){q<0&&e.invert(),r.add(e)})),I)n=E.Factor.cubeFactor(n,r),n=E.Factor.mfactor(n,r),r.each((function(e){q<0&&e.power.negate()}));else{var R=C[0];n=E.Factor.squareFree(n,r,R);var T=new M;n=E.Factor.trialAndError(n,T,R);var P,k=T.toSymbol();if(k.equals(o))return k;for(P in T.factors){var D=T.factors[P];r.add(t.pow(D,t.parse(u)))}n.equals(o)&&(n=E.Factor.quadFactor(n,r))}n=t.parse(n,e.Utils.getFunctionsSubs(A));var F=1===r.length;r.add(t.pow(n,t.parse(u)));var B=r.toSymbol();return F&&n.equals(1)&&B.isLinear()?t.pow(B,t.parse(u)):B}catch(n){return o}},reduce:function(e,n){if(e.group===l&&2===e.length){var r=e.collectSymbols().sort((function(e,t){return t.multiplier-e.multiplier}));if(r[0].power.equals(r[1].power)){var i=t.parse(r[0].power),s=r[0].clone().toLinear(),o=r[1].clone().toLinear();n.add(t.add(s.clone(),o.clone())),o.negate();for(var a=Number(i),u=new w(0),c=1;c<=a;c++){var p=t.pow(s.clone(),t.subtract(i.clone(),new w(c))),f=t.pow(o.clone(),t.subtract(new w(c),new w(1)));u=t.add(u,t.multiply(p,f))}return u}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===i)return e;var r=new S(e,n).squareFree();return 1===(n=r[2])?e:((e=r[1].toSymbol()).power=e.power.multiply(new v(n)),t.add(E.Factor.factor(e)),E.Factor.squareFree(r[0].toSymbol(),t))},powerFactor:function(n,r){if(n.group!==u||n.previousGroup===s)return n;var i=p(n.symbols);if(!e.Utils.allNumeric(i))return n;i=e.Utils.arrayMin(i);var o=new w(0),a=t.parse(n.value+"^"+i);return n.each((function(e){e=t.divide(e,a.clone()),o=t.add(o,e)})),r.add(a),o},coeffFactor:function(t,n){var r,i,s,o;return t.isComposite()&&((r=e.Math2.QGCD.apply(null,t.coeffs())).equals(1)?((i=function(e){var t;return e.group===c?(t=0,e.each((function(e){t+=e.power}))):t=Number(e.power),t})(o=(s=t.collectSymbols(null,null,null,!0).sort((function(e,t){return e.isConstant(!0)?1:t.power-e.power})))[0])>i(s[1])||s[1].isConstant(!0))&&o.multiplier.lessThan(0)&&(n.add(new w(-1)),t.each((function(e){e.negate()}),!0)):(t.each((function(e){e.isComposite()?e.each((function(e){e.multiplier=e.multiplier.divide(r)})):e.multiplier=e.multiplier.divide(r)})),t.updateHash()),n&&n.add(new w(r))),t},trialAndError:function(t,n,r){var s=t.clone();try{var o=[];if(t.isConstant()||t.group===i)return t;for(var a=new S(t,r),u=a.coeffs[0],l=e.Math2.ifactor(u),c=E.proots(t),p=0;p<c.length;p++){var f=c[p],h=1;if(!isNaN(f)){for(var m in l){var g=e.Utils.round(Math.log(m)/Math.log(Math.abs(f)),8);if(d(g)){f=m,h=g;break}}var w=new v(f),y=[new v(w.num).negate()];y[h]=new v(w.den);var b=S.fromArray(y,a.variable).fill(),M=a.divide(b);M[1].equalsNumber(0)&&(a=M[0],o.push(b.toSymbol()))}}return a.equalsNumber(1)||(a=E.Factor.search(a,n)),o.forEach((function(e){n.add(e)})),a.toSymbol()}catch(t){return s}},search:function(t,n,r){function i(e,i,o,a){return(o=S.fit(e,i,o,r,a,s))&&1<o.coeffs.length&&(a=t.divide(o))[1].equalsNumber(0)?(n.add(o.toSymbol()),[a[0],o]):null}r=r||10;var s=t.variable,o=t.coeffs[0],a=e.Math2.ifactor(o),u=t.lc(),l=e.Math2.ifactor(u),c=t.sub(r),p=e.Math2.ifactor(c),f=E.Factor.mix(p,c<0),h=Math.ceil(t.coeffs.length/2),m=u.lessThan(0),g=o.lessThan(0);for(a[l[1]=1]=1;h--;)for(var v in l)for(var d in a)for(var w=0;w<f.length;w++){var y=i(v,d,f[w],h);if(y)return t=y[0],t=e.Utils.isPrime(t.sub(r))?t:E.Factor.search(t,n);y||(m&&g?y=i(-v,-d,f[w],h):m?y=i(-v,d,f[w],h):g&&(y=i(v,-d,f[w],h)))}return t},mSqfrFactor:function(t,n){if(t.group!==a)for(var r=h(t).reverse(),i=0;i<r.length;i++)do{if(r[i]!==t.value){var s=e.Calculus.diff(t,r[i]),o=E.Factor.coeffFactor(s);if(o.equals(0))break;var u=!0;if(o.isConstant()&&t.isComposite()&&t.each((function(e){e.multiplier%o!=0&&(u=!1)}),!0),u){var l=E.div(t,o.clone()),c=l[1].equals(0);if(t.equals(l[0])&&l[1].equals(0))break;if(l[0].isConstant()){n.add(l[0]);break}}else c=!1;c&&(n.add(l[0]),t=o)}else n.add(t),t=new w(1)}while(c);return t},sqdiff:function(n,r){if(n.isConstant("all"))return n;try{var s,o,a,u,l,c=function(t){return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){return w.unwrapPARENS(b.sqrt(b.abs(t)))}),!0)},p=e.Utils.separate(n.clone()),h=[];for(s in p)"constants"!==s&&h.push(p[s]);if(h.sort((function(e,t){return t.power-e.power})),2===h.length){if(l=h.pop(),o=h.pop(),f(l.power)&&f(o.power)&&l.sign()===o.sign()&&l.group===i&&o.group===i)throw new Error("Unable to factor");l.isComposite()&&o.power.equals(2)?(o=c(o),(a=E.Factor.factor(t.add(l,p.constants))).power.equals(2)&&(a.toLinear(),r.add(t.subtract(a.clone(),o.clone())),r.add(t.add(a,o)),n=new w(1))):(l=l.powSimp(),o=o.powSimp(),l.group!==i&&""!==l.fname||!l.power.equals(2)||o.group!==i&&""!==o.fname||!o.power.equals(2)||p.constants||(l.multiplier.lessThan(0)&&(u=o,o=l,l=u),l.multiplier.greaterThan(0)&&(l=c(l),o=c(o)),r.add(t.subtract(l.clone(),o.clone())),r.add(t.add(l,o)),n=new w(1)))}}catch(n){}return n},mfactor:function(n,r){if(n.group===a){var i,s;"sqrt"===n.fname?(i=new M,s=E.Factor.common(n.args[0].clone(),i),s=E.Factor.coeffFactor(s,i),n=t.multiply(t.symfunction("sqrt",[s]),t.parse(n.multiplier)),i.each((function(r){n=t.multiply(n,t.parse(e.Utils.format("sqrt({0})",r)))}))):r.add(n)}else{n=E.Factor.mSqfrFactor(n,r);for(var o,u=h(n),l=n.collectSymbols().map((function(e){return w.unwrapSQRT(e)})),c={},p={},f=u.length,m=l.length,g=0;g<f;g++){var v=u[g];c[v]=new w(0);for(var y=0;y<m;y++){var b,S=l[y];S.contains(v)&&(b=(S.value===v?S:S.symbols[v]).power.toDecimal(),(!p[v]||b<p[v])&&(p[v]=b),c[v]=t.add(c[v],S.clone()))}}for(o in c){var N=t.parse(o+"^"+p[o]),x=t.divide(c[o],N),q=t.expand(x);if(q.equals(1))break;if((x=E.div(n.clone(),q))[0].equals(0))break;if(x[1].equals(0)){var A=!1;if(x[0].each((function(e){d(e.multiplier)||(A=!0)})),A){x[1]=t.expand(t.multiply(x[1],q));break}}if(q=d(q)&&q.lessThan(0),x[1].equals(0)&&!q)return(N=(q=E.div(n.clone(),x[0].clone()))[0]).equals(0)?n:(n=q[1],N.equals(-1)&&!n.equals(0)?n:(q=x[0],n.equals(q)?(x=E.Factor.reduce(q,r),n.equals(x)?x:E.Factor.mfactor(x,r)):(r.add(q),n.equals(0)?N:N.isConstant("all")?(r.add(N),N):E.Factor.mfactor(N,r))))}}return n=E.Factor.sqdiff(n,r),n=E.Factor.zeroes(n,r)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!E.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,r=e.group;if(r===u||r===l)for(var o in t=!0,e.symbols){var p=e.symbols[o];if((o=p.group)!==a&&o!==s||(t=!1),o===c)t=1===h(p).length;else if(o===u||o===l)t=E.isLinear(p);else if(p.group!==n&&"1"!==p.power.toString()){t=!1;break}}else r===i&&1===e.power&&(t=!0);return t},gcd:function(){var n=1===arguments.length&&arguments[0]instanceof e.Vector?arguments[0].elements:e.Utils.arguments2Array(arguments);if(0===n.length)return new w(1);if(1===n.length)return n[0];for(var r=[],i=!1,s=0;s<n.length;s++)if(n[s].group===a&&"gcd"===n[s].fname)(n=n.concat(arguments[s].args)).splice(s,1);else{var o=h(n[s]);if(e.Utils.haveIntersection(o,r)){i=!0;break}r=r.concat(o)}if(i||0===r.length){if(n.every((function(e){return e.getDenom().equals(1)}))){var u=n[0];for(s=1;s<n.length;s++)u=E.gcd_(n[s],u);return u}return t.divide(E.gcd.apply(null,n.map((function(e){return e.getNum()}))),E.lcm.apply(null,n.map((function(e){return e.getDenom()}))))}return t.symfunction("gcd",n)},gcd_:function(n,i){if(n.group!==a&&n.group!==r||(n=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(n)}))),i.group===a&&(i=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(i)}))),n.isConstant()&&i.isConstant())return new w(e.Math2.QGCD(new v(+n),new v(+i)));var o=t.multiply(n.getDenom()||new w(1),i.getDenom()||new w(1)).invert();if(n=t.multiply(n.clone(),o.clone()),i=t.multiply(i.clone(),o.clone()),n=t.expand(n),i=t.expand(i),n.group===c||i.group===c){var u=t.divide(n.clone(),i.clone());if(!(g=t.multiply(i.clone(),u.getDenom().invert())).equals(1))return g}if(n.group===s||i.group===s){u=new w(e.Math2.GCD(n.multiplier,i.multiplier));var l=E.gcd_(n.value===y?new w(1):t.parse(n.value),i.value===y?new w(1):t.parse(i.value)),p=E.gcd_(t.parse(n.power),t.parse(i.power));return t.multiply(u,t.pow(l,p))}if(n.length<i.length&&(g=n,n=i,i=g),l=h(n),p=h(i),l.length===p.length&&1===l.length&&l[0]===p[0]||1===l.length&&0===p.length||0===l.length&&1===p.length)return n=new S(n),i=new S(i),t.divide(n.gcd(i).toSymbol(),o);var f,m=[];for(n.each((function(e){m.push(e.multiplier)})),i.each((function(e){m.push(e.multiplier)}));!i.equals(0);){var g=i.clone();if(n=n.clone(),f=E.div(n,g),i=f[1],f[0].equals(0))return t.divide(new w(e.Math2.QGCD(n.multiplier,i.multiplier)),o);n=g}var d=e.Math2.QGCD.apply(void 0,m);return d.equals(1)||n.each((function(e){e.multiplier=e.multiplier.divide(d)})),!n.equals(1)||n.isConstant()||i.isConstant()?t.divide(n,o):t.divide(t.symfunction("gcd",arguments),o)},lcm:function(){var n;1===arguments.length?arguments[0]instanceof e.Vector?n=arguments[0].elements:t.error("lcm expects either 1 vector or 2 or more arguments"):n=e.Utils.arguments2Array(arguments);var r=n.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1)),i=function(e,t){t=Number(t);for(var n,r,i=[],s=Math.pow(2,e.length),o=t;o<s;o++){for(n=[],r=e.length-1;0!=(o&1<<r)&&n.push(e[r]),r--;);n.length===t&&i.push(n)}return i}(arguments,arguments.length-1).map((function(e){return e.reduce((function(e,n){return t.multiply(e,n.clone())}),new w(1))}));return i=n.every((function(t){return e.Utils.isVariableSymbol(t)}))?t.symfunction("gcd",e.Utils.arrayUnique(i)):E.gcd.apply(null,i),t.divide(r,i)},divide:function(n,r){var i=e.Algebra.Factor.factor(n.clone()),s=i.getDenom();return s.isConstant("all")?s=new w(1):n=t.expand(w.unwrapPARENS(t.multiply(i,s.clone()))),n=E.div(n,r),r=t.divide(n[1],r),t.divide(t.add(n[0],r),s)},div:function(n,r){var s,o,a=[new w(0),n.clone()];try{if(r.isConstant("all"))return n.each((function(e){e.multiplier=e.multiplier.divide(r.multiplier)})),[n,new w(0)];if(n=t.expand(n),r=t.expand(r),n.group===i&&r.group===l){var u=n.value,c=e.Utils.decompose_fn(r.clone(),u,!0);if(n.isLinear()&&c.x&&c.x.isLinear()&&r.isLinear()){var p=w.create(n.multiplier);return[t.divide(p.clone(),c.a.clone()),t.divide(t.multiply(p,c.b),c.a).negate()]}}if(n.group===i&&r.group===i){var f=t.divide(n.clone(),r.clone());return f.isConstant()?[f,new w(0)]:[new w(0),n.clone()]}var m,g,d=n.hasFunc(),b=r.hasFunc(),M=!1;(d||b)&&(M=!0,m={},n=t.parse(e.Utils.subFunctions(n,m)),r=t.parse(e.Utils.subFunctions(r,m)),g=e.Utils.getFunctionsSubs(m));var E=e.Utils.arrayUnique(h(n).concat(h(r)));if((n.isImaginary()||r.isImaginary())&&E.push(e.Settings.IMAGINARY),1===E.length)var x=(Q=new S(n).divide(new S(r)))[0].toSymbol(),q=Q[1].toSymbol();else{E.push(y);var A=function(e){for(var n=new w(0),r=0;r<e.length;r++){var i=e[r].toSymbol();n=t.add(n,i)}return n},C=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),1<i)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},I=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s=C(n),o=t+1;o<r;o++){var a=e[o];if(!(v=n.sum.equals(a.sum))&&s)break;if(v){for(var u,l,c,p,f=n.terms.length,h=0;h<f;h++){var m=n.terms[h],g=a.terms[h];void 0!==u&&!m.greaterThan(u)||(u=m,c=h),void 0!==l&&!g.greaterThan(l)||(l=g,p=h)}var v,d=u.subtract(a.terms[c]);if(d<(v=l.subtract(n.terms[p]))){s=[l,p,a];break}if(v<d){s=[u,c,n];break}}else if(s=C(a))break;s=C(a)}if(!s)return C(e[0],!0);for(o=0;o<R.length;o++){var w,y=R[o].terms;if((w=s[1])===y.length-1)return;if(!(i=y[w]).equals(0))break}return i.equals(0)?I(e,++t):s}},U=e.Utils.toMapObj(E),L=function(e,t){return t.sum.subtract(e.sum)},_=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},O=n.tBase(U).sort(L),R=r.tBase(U).sort(L),T=_(O[0],R[0])&&O[0].count>R[0].count?R:O,P=I(T),k=[];if(P){var D=P[1],F=function(e,t){var n=e.len(),r=t.len();return t=t.terms[D],e=e.terms[D],n<r&&t.greaterThan(e)?r-n:t.subtract(e)};D=function(e,t){for(var n=[],r=0;r<e.length;r++)for(var i=e[r],s=0;s<i.terms.length;s++){var o=n[s],a=i.terms[s];0===r?n[s]=a:o&&!o.equals(a)&&(n[s]=void 0)}for(r=0;r<n.length;r++)if((i=n[r])&&!i.equals(0))return r;return t}(O,D),O.sort(F),R.sort(F);var B=R[0],G=O[0],V=new N(new v(1),[],G.map);if(B.sum.greaterThan(G.sum)&&1<G.len())for(var j=0;j<G.terms.length;j++){var H=B.terms[j].subtract(G.terms[j]);if(H.equals(0))V.terms[j]=new v(0);else{var X=H.add(new v(1));V.terms[j]=H;for(var Z=0;Z<O.length;Z++)O[Z].terms[j]=O[Z].terms[j].add(X)}}for(var z=_(O[0],R[0]),$=0;z&&(o=R,!(s=O)[0].sum.equals(o[0].sum)||s.length>=o.length);){if(200<$++)throw new e.exceptions.InfiniteLoopError("Unable to compute!");var Q=O[0].divide(R[0]);for(k.push(Q),O.shift(),j=1;j<R.length;j++){var Y=R[j].multiply(Q).generateImage(),W=O.length;for(0===W&&(Y.coeff=Y.coeff.neg(),O.push(Y),O.sort(F)),Z=0;Z<W;Z++){var J=O[Z];if(J.getImg()===Y.getImg()){J.coeff=J.coeff.subtract(Y.coeff),J.coeff.equals(0)&&(e.Utils.remove(O,Z),Z--);break}Z===W-1&&(Y.coeff=Y.coeff.neg(),O.push(Y),O.sort(F))}}if(!(z=_(O[0],R[0]))&&O.length>=R.length)for(j=1;j<O.length;j++)if(z=_(O[j],R[0])){O.unshift(e.Utils.remove(O,j));break}}}x=A(k),q=A(O),void 0!==V&&(V=V.toSymbol(),x=t.divide(x,V.clone()),q=t.divide(q,V))}return M&&(x=t.parse(x.text(),g),q=t.parse(q.text(),g)),[x,q]}catch(n){return a}},line:function(n,r,i){e.Utils.isArray(n)&&(n=e.Utils.convertToVector(n)),e.Utils.isArray(r)&&(r=e.Utils.convertToVector(r)),i=t.parse(i||"x"),e.Utils.isVector(n)&&e.Utils.isVector(r)||t.error('Line expects a vector! Received "'+n+'" & "'+r+'"');var s=t.subtract(r.e(1).clone(),n.e(1).clone());return r=t.subtract(r.e(2).clone(),n.e(2).clone()),s=t.divide(r,s),i=t.multiply(i,s.clone()),s=t.multiply(n.e(1).clone(),s),t.add(t.subtract(i,s),n.e(2).clone())},PartFrac:{createTemplate:function(e,n,r,s){(e=E.Factor.factor(e)).each((function(t,n){var r;t.group===a&&""===t.fname&&t.args[0].group===i&&(r=t.args[0],this.symbols?(delete this.symbols[n],this.symbols[r.value]=r):e=t.args[0])}));for(var o=n.collectFactors(),u=[],l=[],c=new w(1),p=0;p<o.length;p++){var f=w.unwrapPARENS(o[p]);if(f.power.greaterThan(1))for(var h=Number(f.power),m=f.clone().toLinear(),g=Number(E.degree(m,s)),v=0;v<h;v++){var d=t.pow(m.clone(),new w(v+1));r.push(d.clone());var y=t.divide(e.clone(),d.clone());l.push(g),u.push(y)}else g=Number(E.degree(f,s)),r.push(f),y=t.divide(e.clone(),f.clone()),y=t.expand(w.unwrapPARENS(y)),l.push(g),u.push(y)}return[r=r.map((function(e){return t.multiply(e,c.clone())})),u,l]},partfrac:function(n,r,i){var s=h(n);r=r||t.parse(s[0]);try{var o,a,u,l,c,p,f,m,g,v,d,y,b,S,M=t.expand(n.getNum()),N=t.expand(n.getDenom().toUnitMultiplier());if(M.multiplier=n.multiplier,u=M.groupTerms(r),Number(E.degree(M,r))>=Number(E.degree(N,r))?(m=(f=E.div(M.clone(),t.expand(N.clone())))[0],u=(M=f[1]).groupTerms(r)):m=new w(0),1===Number(E.degree(N,r))){var x=t.divide(M,N);return i?[m,x]:t.add(m,x)}a=E.Factor.factor(N),d=E.PartFrac.createTemplate(N.clone(),a,[],r),y=d[0],g=d[1],l=d[2],p=[u.length],c=[],o=[],v=[],g.map((function(e,n){b=y[n],S=l[n];for(var i=0;i<S;i++){o.push(b.clone());var s=w.create(r,i),a=t.expand(t.multiply(e,s.clone())).groupTerms(r),u=a.length;p.push(u),c.push(a),v.push(s.clone())}}));for(var q=e.Utils.arrayMax(p),A=new e.Matrix(e.Utils.fillHoles(u,q)).transpose(),C=new e.Matrix,I=0;I<c.length;I++)C.elements.push(e.Utils.fillHoles(c[I],q));var U=t.multiply(C.transpose().invert(),A),L=i?[m]:m;return U.each((function(e,n){n=t.multiply(v[n],t.divide(e,o[n])),i?L.push(n):L=t.add(L,n)})),L}catch(s){try{if(n.isComposite()){var _={};n.each((function(e){var n=e.getDenom(),r=e.getNum();e=_[n],_[n]=e?t.add(e,r):r}));var O,R=new w(0);for(O in _)R=t.add(R,t.divide(_[O],t.parse(O)));n=R}}catch(s){}}return n}},degree:function(n,r,o){if(o=o||{nd:[],sd:[],depth:0},!r){var a=h(n);if(1<a.length)throw new Error("You must specify the variable for multivariate polynomials!");if(0===a.length)return new w(0);r=t.parse(a[0])}return a=n.group,n.isComposite()?((n=n.clone()).distributeExponent(),n.each((function(e){o.depth++,E.degree(e,r,o),o.depth--}))):n.group===c?n.each((function(e){o.depth++,E.degree(e,r,o),o.depth++})):a===s&&n.value===r.value?o.sd.push(n.power.clone()):a===i&&n.value===r.value?o.nd.push(t.parse(n.power)):o.nd.push(new w(0)),n=0<o.nd.length?e.Utils.arrayMax(o.nd):void 0,0===o.depth&&0<o.sd.length?(void 0!==n&&o.sd.unshift(n),t.symfunction("max",o.sd)):e.Utils.isSymbol(n)?n:t.parse(n)},sqComplete:function(n,r,i){e.Utils.isSymbol(r)||(r=t.parse(r));var s,o,a,u,l,c=function(t){throw new e.exceptions.ValueLimitExceededError(t=t||"Stopping")};return n.isPoly(!0)||c("Must be a polynomial!"),u=e.Utils.inBrackets,n=n.clone(),(s=e.Algebra.degree(n,r)).equals(2)||c("Cannot complete square for degree "+s),l=(a=e.Algebra.coeffs(n,r))[2],c=a[1].sign(),s=t.divide(a[1],new w(2)),n=t.pow(s.clone(),new w(2)),i?[l,s,o]:(l=b.sqrt(l),n=t.divide(b.sqrt(n),l.clone()),o=t.subtract(a[0],t.pow(n.clone(),new w(2))),{a:n=t.parse(u(l.clone()+"*"+r+(c<0?"-":"+")+n)),c:o,f:t.add(t.pow(n.clone(),new w(2)),o.clone())})},Simplify:{strip:function(e){var n=t.parse(e.multiplier);e.toUnitMultiplier();var r=t.parse(e.power);return e.toLinear(),[n,r,e]},unstrip:function(e,n){var r=e[0];return e=e[1],t.multiply(r,t.pow(n,e))},complexSimp:function(e,n){var r=e.realpart(),i=e.imagpart(),s=n.realpart(),o=n.imagpart();return e=t.multiply(r.clone(),s.clone()),n=t.multiply(i.clone(),o.clone()),i=t.multiply(s.clone(),i),r=t.multiply(r,o.clone()),o=t.add(t.pow(s,new w(2)),t.pow(o,new w(2))),t.divide(t.add(t.add(e,n),t.multiply(t.subtract(i,r),w.imaginary())),o)},trigSimp:function(n){var r,i,s,o,a,u;return n.containsFunction(["cos","sin","tan"])&&(n=n.clone(),i=(n=(r=E.Simplify.strip(n)).pop()).clone(),n.group===l?(s=new w(0),n.each((function(e){e=E.Simplify.trigSimp(e.fnTransform()),s=t.add(s,e)}),!0),i=t.pow(t.multiply(new w(n.multiplier),s),new w(n.power))):n.group===c&&(o=n.getNum(),a=n.getDenom(),(i="sin"===o.fname&&"cos"===a.fname&&o.args[0].equals(a.args[0])&&o.power.equals(a.power)?t.parse(e.Utils.format("({0})*({1})*tan({2})^({3})",a.multiplier,o.multiplier,o.args[0],o.power)):i).group===c&&(u=new w(1),i.each((function(n){"tan"===n.fname&&(n=t.parse(e.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",n.multiplier,E.Simplify.simplify(n.args[0]),n.power))),u=t.multiply(u,n)})),i=u)),n=i=E.Simplify.unstrip(r,i).distributeMultiplier()),n},fracSimp:function(e){var n=e.getDenom();if((e=(u=e.getNum()).isImaginary()&&n.isImaginary()?E.Simplify.complexSimp(u,n):e).isComposite()){for(var r,i,s,o,a,u,l=(e=1<e.power?t.expand(e):e).collectSymbols(),c=l.pop();l.length;)a=l.pop(),o=t.parse(c.getDenom()),s=t.parse(a.getDenom()),r=c.getNum(),i=a.getNum(),a=t.multiply(o.clone(),s.clone()),s=t.multiply(r,s),o=t.multiply(i,o),o=t.add(s,o),c=t.divide(o,a);return n=t.expand(c.getDenom()),(n=(u=t.expand(c.getNum())).isImaginary()&&n.isImaginary()?E.Simplify.complexSimp(u,n):t.divide(u,n)).equals(e)?e:E.Simplify.simplify(n)}return e},ratSimp:function(e){var n,r;return e.group===c&&(n=e.getDenom(),r=e.getNum().distributeMultiplier(),n=E.Simplify.fracSimp(n),r=E.Simplify.fracSimp(r),e=t.divide(r,n)),e},sqrtSimp:function(e,r){if(e.isSQRT()){var i,s,o=E.Factor.factor(e.args[0].clone()),a=t.parse(o.multiplier),u=a.sign(),l=t.sqrt(a.abs());if(d(l))return o.group===c?(i=new w(1),o.each((function(e){var r;e.group===n?(r=t.sqrt(e.clone()),d(r)?l=t.multiply(l,r):i=t.multiply(i,e)):i=t.multiply(i,e)})),u=t.multiply(i,t.parse(u)),(s=t.sqrt(u.clone())).isImaginary&&(s=t.sqrt(t.expand(u.clone())))):s=t.sqrt(o.clone().toUnitMultiplier()),t.multiply(l,s)}else e.isComposite()&&e.isLinear()?(l=new w(0),e.each((function(e){l=t.add(l,E.Simplify.sqrtSimp(e))}),!0),l=t.multiply(l,t.parse(e.multiplier))):e.group===c&&(l=t.parse(e.multiplier),e.each((function(e){e=E.Simplify.sqrtSimp(e),l=t.multiply(l,e)}),!0),l=t.pow(l,t.parse(e.power)));return l||t.parse(e)},patternSub:function(t){var n={},r=function(e){var t=!1;return e.each((function(e){e.group===l?t=!0:e.symbols&&(t=r(e))})),t},i=function(s){s.each((function(s){var o;!s.symbols&&s.group!==a||(r(s)?i(s):n[s.value]||(o=e.Utils.getU(t),n[s.value]=o,t=t.sub(s.value,o)))}),!0)};return i(t),[t,n]},simplify:function(n){var r=E.Simplify.strip(n);if(n=r.pop(),(n=E.Simplify.fracSimp(n)).isConstant()||n.group===e.groups.S)return r.push(n),E.Simplify.unstrip(r,n);var i,s=n.clone();return s=E.Simplify.trigSimp(s),s=E.Simplify.ratSimp(s),(s=E.Factor.factor(s)).group===e.groups.CP&&s.isLinear()&&(n=s.multiplier.clone(),s.toUnitMultiplier(),i=new w(0),s.each((function(e){e=E.Simplify.simplify(e),i=t.add(i,e)})),(s=i).multiplier=i.multiplier.multiply(n)),E.Simplify.unstrip(r,s)}},Classes:{Polynomial:S,Factors:M,MVTerm:N}};e.Expression.prototype.simplify=function(){return E.Simplify.simplify(this.symbol)},o.useAlgebraDiv=function(){var n=E.divideFn=t.divide,r=0;t.divide=function(t,i){return i=1==++r?e.Algebra.divide(t,i):n(t,i),r=0,i}},o.useParserDiv=function(){E.divideFn&&(t.divide=E.divideFn),delete E.divideFn},o.register([{name:"factor",visible:!0,numargs:1,build:function(){return E.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return E.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return E.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return E.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return E.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return E.divide}},{name:"div",visible:!0,numargs:2,build:function(){return E.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return E.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return E.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){return function(){var t=E.coeffs.apply(E,arguments);return new e.Vector(t)}}},{name:"line",visible:!0,numargs:[2,3],build:function(){return E.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){return function(e,t){try{return t=t||h(e)[0],E.sqComplete(e.clone(),t).f}catch(t){return e}}}}]),o.updateAPI()}(),void 0===o&&(o=r(182),r(684)),function(){"use strict";var e=o.getCore(),t=e.PARSER,n=e.Frac,r=e.Settings,i=e.Utils.isSymbol,s=e.groups.FN,a=e.Symbol,u=e.Utils.text,l=e.Utils.inBrackets,c=e.Utils.isInt,p=e.Utils.format,f=e.Utils.even,h=e.Utils.evaluate,m=e.groups.N,g=e.groups.S,v=(s=e.groups.FN,e.groups.PL),d=e.groups.CP,w=e.groups.CB,y=e.groups.EX,b=e.groups.P,S=r.LOG,M="sqrt",N="sin",E="cos",x="tan",q="sec",A="csc",C="cot",I="asin",U="atan",L="sinh",_="cosh",O="tanh";function R(e){this.message=e||""}R.prototype=new Error,a.prototype.hasIntegral=function(){return this.containsFunction("integrate")},a.prototype.fnTransform=function(){if(this.group!==s)return this;var e,n,r,i=this.args[0],o=new a(this.multiplier),u=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case L:r=t.parse(p("(e^({0})-e^(-({0})))/2",i));break;case _:r=t.parse(p("(e^({0})+e^(-({0})))/2",i));break;case O:r=t.parse(p("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",i));break;case x:r=t.parse(p("sin({0})/cos({0})",i));break;case A:r=t.parse(p("1/sin({0})",i));break;case q:r=t.parse(p("1/cos({0})",i));break;default:r=u}else if(this.power.equals(2))switch(this.fname){case N:r=t.parse(p("1/2-cos(2*({0}))/2",i));break;case E:r=t.parse(p("1/2+cos(2*({0}))/2",i));break;case x:r=t.parse(p("sin({0})^2/cos({0})^2",i));break;case _:r=t.parse(p("1/2+cosh(2*({0}))/2",i));break;case L:r=t.parse(p("-1/2+cosh(2*({0}))/2",i));break;case O:r=t.parse(p("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",i));break;case q:r=t.parse(p("(1-cos(2*({0})))/(1+cos(2*({0})))+1",i));break;default:r=u}else this.fname===q?r=t.parse(p("1/cos({0})^({1})",this.args[0],this.power)):this.fname===A?r=t.parse(p("1/sin({0})^({1})",this.args[0],this.power)):this.fname===x?r=this.power.lessThan(0)?t.parse(p("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):t.parse(p("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power)):this.fname===N&&this.power.lessThan(0)?r=t.parse(p("csc({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===E&&this.power.lessThan(0)?r=t.parse(p("sec({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===N&&this.power.equals(3)?r=t.parse(p("(3*sin({0})-sin(3*({0})))/4",this.args[0])):this.fname===E&&this.power.equals(3)?r=t.parse(p("(cos(3*({0}))+3*cos({0}))/4",this.args[0])):this.fname!==E&&this.fname!==N||!f(this.power)?r=u:(n=this.power/2,e=t.pow(this.clone().toLinear(),t.parse(2)).fnTransform(),n=t.expand(t.pow(e,t.parse(n))),r=new a(0),n.each((function(e){e=e.fnTransform(),r=t.add(r,e)}),!0));return t.multiply(r,o)},a.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===g)return!1;if(this.fname&&(e.Utils.in_trig(this.fname)||e.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].hasTrig())return!0;return!1},e.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},e.Utils.toCommonDenominator=function(n){if(n.isComposite()&&n.isLinear()){var r=new a(n.multiplier),i=new a(1),s=new a(0);return n.each((function(e){i=t.multiply(i,e.getDenom())}),!0),n.each((function(e){var n=e.getNum();e=e.getDenom(),e=t.multiply(n,t.divide(i.clone(),e)),s=t.add(s,e)})),t.multiply(r,e.Algebra.divide(t.expand(s),t.expand(i)))}return n},e.Utils.in_inverse_trig=function(e){return-1!==[I,"acos",U,"acsc","asec","acot"].indexOf(e)},e.Utils.in_trig=function(e){return-1!==[E,N,x,q,A,C].indexOf(e)},e.Utils.in_htrig=function(e){return-1!==[L,_,O,"acsch","asech","acoth"].indexOf(e)},e.Matrix.jacobian=function(t,n){var r=new e.Matrix;return(n=n||e.Utils.arrayGetVariables(t)).forEach((function(n,i){t.forEach((function(t,s){t=e.Calculus.diff(t.clone(),n),r.set(s,i,t)}))})),r},e.Matrix.prototype.max=function(){var e=new a(0);return this.each((function(t){(t=t.abs()).gt(e)&&(e=t)})),e},e.Matrix.cMatrix=function(n,r){var i=new e.Matrix;return r.forEach((function(e,r){i.set(r,0,t.parse(n))})),i};var T=e.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==s)return!1;return!0},P=e.Utils.cosAsinBtranform=function(e,n){return e=e.args[0],n=n.args[0],t.parse(p("(sin(({0})+({1}))-sin(({0})-({1})))/2",e,n))},k=e.Utils.cosAsinAtranform=function(e,n){return 1!==Number(n.power)?t.multiply(e,n):(e=e.args[0],t.parse(p("(sin(2*({0})))/2",e)))},D=e.Utils.cosAsinBtranform=function(e,n){return e=e.args[0],n=n.args[0],t.parse(p("(cos(({0})+({1}))-cos(({0})-({1})))/2",e,n))},F=e.Utils.trigTransform=function(e){for(var n,r,i,o,u={},l=new a(1),c=0,p=e.length;c<p;c++)(i=e[c]).group===s?(r=i.fname)===E&&u.sin?(n=(u.sin.args[0].toString()!==i.args[0].toString()?P:k)(i,u.sin),delete u.sin,l=t.multiply(l,n)):r===N&&u.cos?(n=(u.cos.args[0].toString()!==i.args[0].toString()?P:k)(i,u.cos),delete u.cos,l=t.multiply(l,n)):r===N&&u.sin?(n=u.sin.args[0].toString()!==i.args[0].toString()?D(i,u.sin):t.multiply(i,u.sin),delete u.sin,l=n):u[r]=i:l=t.multiply(l,i);for(o in u)l=t.multiply(l,u[o]);return l};e.Settings.integration_depth=10,e.Settings.max_lim_depth=10;var B=e.Calculus={version:"1.4.6",sum:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");var o;return r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)?(o=s-i<200?"":"PARSE2NUMBER",i=Number(i),s=Number(s),e.Utils.block(o,(function(){for(var o=n.text(),u={"~":!0},l=new e.Symbol(0),c=i;c<=s;c++){u[r]=new a(c);var p=t.parse(o,u);l=t.add(l,p)}return l}))):t.symfunction("sum",arguments)},product:function(n,r,i,s){if(r.group!==e.groups.S)throw new e.exceptions.NerdamerTypeError("Index must be symbol. "+u(r)+" provided");return r=r.value,e.Utils.isNumericSymbol(i)&&e.Utils.isNumericSymbol(s)?e.Utils.block(s-i<200?"":"PARSE2NUMBER",(function(){i=Number(i),s=Number(s.multiplier);for(var o=n.text(),u={},l=new e.Symbol(1),c=i;c<=s;c++)u[r]=new a(c),l=t.multiply(l,t.parse(o,u));return l})):t.symfunction("product",arguments)},diff:function(o,c,f){if(e.Utils.isVector(o)){var h=new e.Vector([]);return o.each((function(e){h.elements.push(B.diff(e,c,f))})),h}if(e.Utils.isMatrix(o)){var L=new e.Matrix;return o.each((function(e,t,n){L.set(t,n,B.diff(e,c,f))})),L}var _,R,T=i(c)?c.text():c;return f=i(f)?f.multiplier:f||1,void 0===T&&(T=e.Utils.variables(o)[0]),o.group===s&&o.fname===M&&(R=o.args[0],_=o.power.clone(),R.group===m&&R.group===b||(R.power=i(R.power)?t.multiply(R.power,t.multiply(new a(.5)),_):R.power.multiply(new n(.5)).multiply(_),R.multiplier=R.multiplier.multiply(o.multiplier)),o=R),o=o.group!==s||i(o.power)?k(o):(_=k(t.parse(o)),R=B.diff(o.args[0].clone(),T),t.multiply(_,R)),1<f?B.diff(o,c,--f):o;function P(e){return e.value!==T&&!e.contains(T,!0)||(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new n(1)),e.power.equals(0)&&(e=a(e.multiplier))),e}function k(e){if((R=e.group)===m||R===g&&e.value!==T||R===b)e=a(0);else if(R===g)e=P(e);else{if(R===w){var o=e.multiplier.clone();e.toUnitMultiplier();var f=t.multiply(function(e){for(var n=e.collectSymbols(),r=new a(0),i=n.length,s=0;s<i;s++){for(var o=B.diff(n[s].clone(),T),u=0;u<i;u++)s!==u&&(o=t.multiply(o,n[u].clone()));r=t.add(r,o)}return r}(e),P(e));return f.multiplier=f.multiplier.multiply(o),f}if(R===s&&e.power.equals(1))switch(e.fname){case S:M=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=M.multiplier.divide(e.multiplier);break;case E:e.fname=N,e.multiplier.negate();break;case N:e.fname=E;break;case x:e.fname=q,e.power=new n(2);break;case q:e=D(e,x);break;case A:e=D(e,"-cot");break;case C:e.fname=A,e.multiplier.negate(),e.power=new n(2);break;case I:e=t.parse("(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case"acos":e=t.parse("-(sqrt(1-("+u(e.args[0])+")^2))^(-1)");break;case U:e=t.parse("(1+("+u(e.args[0])+")^2)^(-1)");break;case"abs":o=e.multiplier.clone(),e.toUnitMultiplier(),(L=e.args[0].clone()).toUnitMultiplier(),(e=t.parse(l(u(e.args[0]))+"/abs"+l(u(L)))).multiplier=o;break;case"parens":e=a(1);break;case"cosh":e.fname="sinh";break;case"sinh":e.fname="cosh";break;case O:e.fname="sech",e.power=new n(2);break;case"sech":e=D(e,"-tanh");break;case"csch":var h=String(e.args[0]);return t.parse("-coth("+h+")*csch("+h+")");case"coth":return h=String(e.args[0]),t.parse("-csch("+h+")^2");case"asinh":e=t.parse("(sqrt(1+("+u(e.args[0])+")^2))^(-1)");break;case"acosh":e=t.parse("(sqrt(-1+("+u(e.args[0])+")^2))^(-1)");break;case"atanh":e=t.parse("(1-("+u(e.args[0])+")^2)^(-1)");break;case"asech":h=String(e.args[0]),e=t.parse("-1/(sqrt(1/("+h+")^2-1)*("+h+")^2)");break;case"acoth":e=t.parse("-1/(("+e.args[0]+")^2-1)");break;case"acsch":h=String(e.args[0]),e=t.parse("-1/(sqrt(1/("+h+")^2+1)*("+h+")^2)");break;case"asec":h=String(e.args[0]),e=t.parse("1/(sqrt(1-1/("+h+")^2)*("+h+")^2)");break;case"acsc":h=String(e.args[0]),e=t.parse("-1/(sqrt(1-1/("+h+")^2)*("+h+")^2)");break;case"acot":e=t.parse("-1/(("+e.args[0]+")^2+1)");break;case"S":h=String(e.args[0]),e=t.parse("sin((pi*("+h+")^2)/2)");break;case"C":h=String(e.args[0]),e=t.parse("cos((pi*("+h+")^2)/2)");break;case"Si":h=e.args[0],e=t.parse("sin("+h+")/("+h+")");break;case"Shi":h=e.args[0],e=t.parse("sinh("+h+")/("+h+")");break;case"Ci":h=e.args[0],e=t.parse("cos("+h+")/("+h+")");break;case"Chi":h=e.args[0],e=t.parse("cosh("+h+")/("+h+")");break;case"Ei":h=e.args[0],e=t.parse("e^("+h+")/("+h+")");break;case"Li":h=e.args[0],e=t.parse("1/"+r.LOG+"("+h+")");break;case"erf":e=t.parse("(2*e^(-("+e.args[0]+")^2))/sqrt(pi)");break;case"atan2":var M=String(e.args[0]);h=String(e.args[1]),e=t.parse("("+h+")/(("+h+")^2+("+M+")^2)");break;case"sign":e=new a(0);break;case"sinc":e=t.parse(p("(({0})*cos({0})-sin({0}))*({0})^(-2)",e.args[0]));break;case r.LOG10:e=t.parse("1/(("+e.args[0]+")*"+r.LOG+"(10))");break;default:e=t.symfunction("diff",[e,c])}else if(R===y||R===s&&i(e.power)){f=R===y?e.value:R===s&&e.contains(T)?e.fname+l(u(e.args[0])):e.value+l(u(e.args[0]));var L=(t.multiply(t.parse(S+l(f)),e.power.clone()),B.diff(t.multiply(t.parse(S+l(f)),e.power.clone()),T));e=t.multiply(e,L)}else if(R!==s||e.power.equals(1)){if(R===d||R===v){var _,R=e.clone(),F=new a(0);for(_ in e.symbols)F=t.add(F,B.diff(e.symbols[_].clone(),T));e=t.multiply(P(R),F)}}else(L=e.clone()).toLinear(),L.toUnitMultiplier(),e=t.multiply(P(e.clone()),k(L))}return e.updateHash(),e}function D(e,n,r){return t.multiply(e,t.parse(n+l(r||u(e.args[0]))))}},integration:{u_substitution:function(n,r){function i(e,n,i){var s=B.diff(n,r);return(s=i?i(e,n):t.divide(e.clone(),s)).contains(r,!0)?null:s}function o(e,n){return(e=(e=B.integrate(t.symfunction(e,[new a(f)]),f,0)).sub(new a(f),n)).updateHash(),e}var u,l=n[0].clone(),c=n[1].clone(),p=l.group,f=(n=c.group,"__u__");if(p===s&&n!==s)return(u=i(c,(m=l.args[0]).clone()))?t.multiply(u,o(l.fname,m)):(u=i(c,l))?B.integration.poly_integrate(l):void 0;if(n===s&&p!==s){if(u=i(l,(m=c.args[0]).clone()))return t.multiply(u,o(c.fname,m))}else{if(p===s&&n===s)return(u=i(l.clone(),c.clone()))||(u=i(c.clone(),l.clone()))?t.multiply(B.integration.poly_integrate(c),u):void 0;if(p===y&&n!==y){if(!(u=i(c,(g=l.power).clone()))){var h=B.integration.decompose_arg(g.clone(),r),m=B.diff(h[2].clone(),r);if(m=B.integration.decompose_arg(m.clone(),r),t.multiply(h[1],m[1]).power.equals(c.power))return m=t.divide(h[0].clone(),m[0].clone()),m=t.multiply(m.clone(),t.pow(new a(l.value),t.multiply(h[0],new a(f)))),m=t.multiply(m,new a(f)),B.integration.by_parts(m,f,0,{}).sub(f,h[1].clone())}return h=B.integrate(l.sub(g.clone(),new a(f)),f,0),t.multiply(h.sub(new a(f),g),u)}if(n===y&&p!==y)return u=i(l,(g=c.power).clone()),h=B.integrate(c.sub(g,new a(f)),f,0),t.multiply(h.sub(new a(f),g),u);if(l.isComposite()||c.isComposite()){p=function(n,i){return i=B.diff(i,r),n=e.Algebra.Factor.factor(n),i=e.Algebra.Factor.factor(i),t.divide(n,i)},h=l.isComposite()?l.clone().toLinear():l.clone();var g=c.isComposite()?c.clone().toLinear():c.clone();return(u=i(h.clone(),g.clone(),p))?t.multiply(B.integration.poly_integrate(c),u):(u=i(g.clone(),h.clone(),p))?t.multiply(B.integration.poly_integrate(l),u):void 0}}},poly_integrate:function(e){var n=e.power.toString(),r=e.multiplier.toDecimal();return e=e.toUnitMultiplier().toLinear(),-1===Number(n)?t.multiply(new a(r),t.symfunction(S,[e])):t.parse(p("({0})*({1})^(({2})+1)/(({2})+1)",r,e,n))},stop:function(t){throw e.Utils.warn(t=t||"Unable to compute integral!"),new R(t)},partial_fraction:function(n,r,s,o){var u;return i(r)||(r=t.parse(r)),u=new a(0),(n=e.Algebra.PartFrac.partfrac(n,r)).group===w&&n.isLinear()?(n.each((function(e){e.isLinear()||B.integration.stop()})),n.each((function(e){u=t.add(u,B.integrate(e,r,s,o))}))):u=t.add(u,B.integrate(n,r,s,o)),u},get_udv:function(n){function r(t){var n,r=t.group;r===s?(n=t.fname,e.Utils.in_trig(n)||e.Utils.in_htrig(n)?i[3].push(t):e.Utils.in_inverse_trig(n)?i[1].push(t):n===S?i[0].push(t):B.integration.stop()):r===g||t.isComposite()&&t.isLinear()||r===w&&t.isLinear()?i[2].push(t):r===y||t.isComposite()&&!t.isLinear()?i[4].push(t):B.integration.stop()}var i=[[],[],[],[],[]];n.group===w?n.each((function(e){r(a.unwrapSQRT(e,!0))})):r(n);for(var o,u=new a(1),l=0;l<5;l++){var c=i[l],p=c.length;if(0<p){if(1<p)for(var f=new a(1),h=0;h<p;h++)f=t.multiply(f,c[h].clone());else f=c[0].clone();o?u=t.multiply(u,f):(o=f).multiplier=o.multiplier.multiply(n.multiplier)}}return[o,u]},trig_sub:function(n,r,i,s,o,a){(o=o||B.integration.decompose_arg(n.clone().toLinear(),r))[3],o[2];var u=o[0],c=o[1];if(c.power.equals(2)&&u.greaterThan(0))return r=e.Utils.getU(n),o=t.parse(x+l(r)),u=t.parse(q+l(r)+"^2"),u=t.multiply(n.sub(c,o),u),c=B.integrate(u,r,i,s).sub(o,c),e.Utils.clearU(o),c},by_parts:function(n,r,i,s){var o,u,l,c,p,f;return s.previous=s.previous||[],l=(u=B.integration.get_udv(n))[0],o=u[1],p=(c=a.unwrapSQRT(t.expand(B.diff(l.clone(),r)),!0)).clone().stripVar(r),c=t.divide(c,p.clone()),n=B.integrate(o.clone(),r,i||0),c=(u=t.multiply(n.clone(),c)).toString(),-1!==s.previous.indexOf(c)&&e.Utils.in_trig(l.fname)&&o.isE()?(s.is_cyclic=!0,new a(1)):(s.previous.push(c),l=t.multiply(l,n),n=u.multiplier.clone(),u.toUnitMultiplier(),(p=t.multiply(B.integrate(u.clone(),r,i,s),p)).multiplier=p.multiplier.multiply(n),p=t.subtract(l,p),s.is_cyclic&&(s.previous.pop(),0===s.previous.length&&(p=t.expand(p),f=new a(0),p.each((function(e){e.contains(r)||(f=t.add(f,e.clone()))})),p=t.divide(t.subtract(p,f.clone()),t.subtract(new a(1),f)))),p)},decompose_arg:e.Utils.decompose_fn},integrate:function(o,u,h,m){var b;if(u||(b=e.Utils.variables(o),u=(u=1===b.length?b[0]:u)||"x"),e.Utils.isVector(o)){var P=new e.Vector([]);return o.each((function(e){P.elements.push(B.integrate(e,u))})),P}return isNaN(u)||t.error("variable expected but received "+u),o.isConstant(!0)?t.multiply(o.clone(),t.parse(u)):(m=m||{},e.Utils.block("PARSE2NUMBER",(function(){h=h||0;var b,P=i(u)?u.toString():u,k=(ze=a.unwrapSQRT(o.clone(),!0)).group;try{if(++h>e.Settings.integration_depth&&B.integration.stop("Maximum depth reached. Exiting!"),ze.contains(P,!0)){if(k===g)b=B.integration.poly_integrate(ze,P,h);else if(k===y)if(ze.previousGroup===s&&"sqrt"!==ze.fname&&ze.fname!==r.PARENTHESIS&&B.integration.stop(),ze.contains(P)&&ze.previousGroup!==s)ze.power.contains(P)?B.integration.stop():((Rt=B.diff(ze.clone().toLinear(),P)).contains(P)&&B.integration.stop(),b=B.integration.poly_integrate(ze,P,h));else{if((Q=B.diff(ze.power.clone(),P)).contains(P)){var D=Q.stripVar(P);if((Y=t.divide(Q.clone(),D.clone())).group===g&&Y.isLinear())return D.multiplier=D.multiplier.divide(new n(2)),t.parse(p("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",D,P,ze.multiplier));B.integration.stop()}ze.isE()?Q.isLinear()?b=ze:Q.isE()&&Q.power.group===g&&Q.power.power.equals(1)?b=t.multiply(t.symfunction("Ei",[ze.power.clone()]),ze.power):B.integration.stop():(J=t.symfunction(S,[t.parse(ze.value)]),b=t.divide(ze,J)),b=t.divide(b,Q)}else if(ze.isComposite()&&ze.isLinear()){var G=t.parse(ze.multiplier);ze.toUnitMultiplier(),b=new a(0),ze.each((function(e){b=t.add(b,B.integrate(e,P,h))})),b=t.multiply(G,b)}else if(k===d)if((ze=ze.power.greaterThan(1)?t.expand(ze):ze).power.equals(1))b=new a(0),ze.each((function(e){b=t.add(b,B.integrate(e,P,h))}),!0);else{var V=Number(ze.power);G=ze.multiplier.clone(),ze.toUnitMultiplier();var j,H,X,Z=ze.clone().toLinear(),z=(xt=B.integration.decompose_arg(Z,P))[3],$=xt[2],Q=xt[0],Y=xt[1];if(-1===V&&Y.group!==v&&Y.power.equals(2)){var W,J,K,ee,te,ne,re,ie,se,oe,ae,ue=!c(z)||0<z;b=Y.group===g&&Y.power.equals(2)&&ue?(W=function(e){var n=new a(1);return e.each((function(e){n=t.multiply(n,"abs"===e.fname?e.args[0]:e)})),n},K=Q.clone(),ee=z.clone(),K=t.pow(K,new a(.5)),ee=t.pow(ee,new a(.5)),J=t.multiply(W(ee),W(K)),de=t.symfunction(U,[t.divide(t.multiply(Q,Y.toLinear()),J.clone())]),t.divide(de,J)):Y.group===g&&Y.isLinear()?t.divide(B.integration.poly_integrate(ze),Q):Y.power.equals(4)?(ae=l,K=t.parse(M+ae(Q)+"*"+P+"^2"),ee=t.parse(M+ae(2)+"*"+ae(Q)+"^"+ae("1/4")+"*"+ae(z)+"^"+ae("1/4")+"*"+P),te=t.parse(M+ae(z)),ye=t.add(t.add(K.clone(),ee.clone()),te.clone()),Ce=t.add(t.subtract(K,ee),te),ne=t.parse(M+ae(2)+"*"+ae(z)+"^"+ae("3/4")),re=t.parse(M+ae(z)+"*"+ae(z)+"^"+ae("1/4")+"*"+P),ie=t.parse("2*"+ae(z)+"*"+M+ae(2)+"*"+ae(z)+"^"+ae("1/4")),se=t.divide(t.subtract(ne.clone(),re.clone()),t.multiply(ie.clone(),Ce)),oe=t.divide(t.add(ne,re),t.multiply(ie,ye.clone())),t.add(B.integrate(se,P,h,m),B.integrate(oe,P,h,m))):B.integration.partial_fraction(ze,P,h)}else if(-.5===V)Y.group===g&&Y.power.equals(2)&&$.multiplier.lessThan(0)&&!z.multiplier.lessThan(0)?(Q.negate(),b=z.isConstant()&&Q.isConstant()?(J=t.symfunction(M,[Q.clone()]),j=t.symfunction(M,[t.multiply(Q.clone(),z)]),t.divide(t.symfunction(I,[t.divide($.toLinear(),j)]),J)):(H=t.symfunction(M,[Q]),X=t.multiply(H.clone(),Y.clone().toLinear()),t.divide(t.symfunction(U,[t.divide(X,t.symfunction(M,[Z.clone()]))]),H))):B.integration.stop();else if(.5===V&&Y.power.equals(2)&&Q.greaterThan(0))B.integration.stop();else if(Y.isLinear()&&Y.group!==v)b=t.divide(B.integration.poly_integrate(ze),Q);else{if(Y.power.equals(2)&&Q.greaterThan(0)){var le=t.parse(M+l(Q)),ce=t.parse(M+l(z)),pe=t.multiply(le.clone(),ce.clone()).invert(),fe=t.pow(z,new a(ze.power)),he=e.Utils.getU(ze);Ut=t.multiply(pe,Y.clone().toLinear());var me=t.parse(U+l(Ut)),ge=2*(Math.abs(ze.power)-1),ve=B.integrate(t.parse(E+l(he)+"^"+ge));return e.Utils.clearU(he),t.multiply(ve.sub(he,me),fe)}if(ze.group===w||ze.power.lessThan(0)){var de=ze.clone().toLinear(),we=e.Algebra.Factor.factor(de).toString()!==de.toString();if(e.Algebra.degree(de,t.parse(P)).equals(2)&&!we)try{var ye,be,Se=e.Algebra.sqComplete(de,P);Ut=e.Utils.getU(de),ye=Se.f.sub(Se.a,Ut),be=t.pow(ye,t.parse(ze.power)),b=B.integrate(be,Ut).sub(Ut,Se.a)}catch(k){B.integration.stop()}else b=B.integration.partial_fraction(ze,P,h,m)}else b=B.integration.by_parts(ze,P,h,m)}b.multiplier=b.multiplier.multiply(G)}else if(k===s){var Me=ze.args[0];G=ze.multiplier.clone(),ze.toUnitMultiplier(),Q=(xt=B.integration.decompose_arg(Me,P))[0],Y=xt[1];var Ne,Ee,xe,qe,Ae,Ce,Ie,Ue,Le,_e=ze.fname;if(_e===S||_e===I||"acos"===_e||_e===U&&Y.isLinear()){var Oe;V=ze.power.toString(),c(V)&&(h-=V),b=Me.isComposite()?(Ut=e.Utils.getU(ze),de=t.pow(t.parse(S+l(Ut)),new a(V)),pt=B.diff(Me,P),Oe=t.multiply(de,pt),ve=B.integrate(Oe,Ut,h,m),t.multiply(t.parse(G),ve.sub(Ut,Me))):t.multiply(t.parse(G),B.integration.by_parts(ze,P,h,m))}else{if(_e===x&&ze.power.lessThan(0))return(Tt=ze.clone()).power.negate(),Tt.fname=C,t.multiply(t.parse(G),B.integrate(Tt,P,h));if(!Q.contains(P,!0)&&ze.isLinear())if("abs"===_e)(Y=t.divide(Me.clone(),Q.clone())).group!==g||Y.power.lessThan(0)?B.integration.stop():b=e.Utils.even(Y.power)?B.integrate(Me,P,h):((Le=B.integrate(Y,P,h)).power=Le.power.subtract(new n(1)),t.multiply(t.multiply(t.symfunction("abs",[Y.toLinear()]),Le),Q));else{var Re=ze.args[0].group,Te=B.integration.decompose_arg(Me,P);switch((Re!==d&&Re!==g&&Re!==w||!Te[1].power.equals(1)||Me.hasFunc())&&B.integration.stop(),_e){case E:b=t.symfunction(N,[Me]);break;case N:(b=t.symfunction(E,[Me])).negate();break;case x:b=t.parse(p(r.LOG+"(sec({0}))",Me));break;case q:b=t.parse(p(r.LOG+"(tan({0})+sec({0}))",Me));break;case A:b=t.parse(p("-"+r.LOG+"(csc({0})+cot({0}))",Me));break;case C:b=t.parse(p(r.LOG+"(sin({0}))",Me));break;case L:b=t.symfunction(_,[Me]);break;case _:b=t.symfunction(L,[Me]);break;case O:b=t.parse(p(r.LOG+"(cosh({0}))",Me));break;case"asec":case"acsc":case"acot":case"asech":case"acsch":case"acoth":b=B.integration.by_parts(ze,P,h,m);break;case"sech":b=t.parse(p("atan(sinh({0}))",Me));break;case"csch":b=t.parse(p(r.LOG+"(tanh(({0})/2))",Me));break;case"coth":b=t.parse(p(r.LOG+"(sinh({0}))",Me));break;case"exp":b=B.integrate(t.parse(p("e^({0})",Me)),P,h);break;case"S":Me=ze.args[0].clone();var Pe=(it=B.integration.decompose_arg(Me,P))[1],ke=it[0],De=it[3];b=t.parse(p("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",ke,De,Y));break;case"C":Me=ze.args[0].clone(),Pe=(it=B.integration.decompose_arg(Me,P))[1],ke=it[0],De=it[3],b=t.parse(p("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",ke,De,Pe));break;case"erf":Me=ze.args[0].clone(),Pe=(it=B.integration.decompose_arg(Me,P))[1],ke=it[0],b=t.parse(p("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",ke,Pe,Me));break;case"sign":b=t.multiply(ze.clone(),Me.clone());break;default:B.integration.stop()}b=t.divide(b,Q)}else Y.isLinear()?_e===E||_e===N?(V=Number(ze.power),b=V<0?(ze.fname=_e===N?A:q,ze.invert().updateHash(),B.integrate(ze,P,h)):(Me=ze.args[0],Ne=ze.clone(),Ee=ze.clone(),ht=new a((V-1)/V),xe=t.multiply(Q.clone(),new a(V)).invert(),Ne.power=Ne.power.subtract(new n(1)),Ee.power=Ee.power.subtract(new n(2)),Rt=t.symfunction(_e===E?N:E,[Me.clone()]),_e===N&&Rt.negate(),t.add(t.multiply(t.multiply(xe,Ne),Rt),t.multiply(ht,B.integrate(t.parse(Ee),P,h))))):_e===x||_e===C?ze.args[0].isLinear(P)&&(ge=ze.power.subtract(new n(1)).toString(),Ft=ze.clone().toUnitMultiplier(),Ue=t.parse(p((_e===C?"-":"")+"1/({2}*{0})*{3}({1})^({0})",ge,Me,Q,_e)),Ft.power=Ft.power.subtract(new n(2)),Ft.power.equals(0)&&(Ft=t.parse(Ft)),b=t.subtract(Ue,B.integrate(Ft,P,h))):_e===q||_e===A?(qe=ze.power.subtract(new n(1)).toString(),Ae=ze.power.subtract(new n(2)).toString(),Ce=_e===q?x:C,Ft=ze.clone().toUnitMultiplier(),Ie=p((_e===A?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",Q,qe,Ae,Me,_e,Ce),Ue=t.parse(Ie),Ft.power=Ft.power.subtract(new n(2)),Ft.power.equals(0)&&(Ft=t.parse(Ft)),b=t.add(Ue,t.multiply(new a(Ae/qe),B.integrate(Ft,P,h)))):_e!==_&&_e!==L||!ze.power.equals(2)?B.integration.stop():b=B.integrate(ze.fnTransform(),P,h):B.integration.stop();b.multiplier=b.multiplier.multiply(G)}}else if(k===v)b=B.integration.partial_fraction(ze,P,h);else if(k===w){var Fe=(ze=ze.getDenom().group===g?t.expand(ze):ze).stripVar(P),Be=t.divide(ze.clone(),Fe.clone());if(Fe.contains(P)&&(Be=t.multiply(Be,Fe),Fe=new a(1)),Be.group!==w){if(Be.equals(1))return B.integrate(t.expand(ze),P,h);Be.clone().toLinear().isPoly(!0)&&1<e.Utils.variables(Be).length&&(Be=e.Algebra.Factor.factor(Be)),b=B.integrate(Be,P,h)}else{var Ge=Be.collectSymbols().sort((function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group})).map((function(e){return"exp"===(e=a.unwrapSQRT(e,!0)).fname?t.parse(p("({1})*e^({0})",e.args[0],e.multiplier)):e})),Ve=Ge.length;if(ze.power<0){if(2===Ve)return B.integrate(t.expand(ze),P,h,m)}else if(2===Ve){try{b=B.integration.u_substitution(Ge,P)}catch(k){}if(!b){var je,He,Xe,Ze,ze,$e,Qe,Ye,We,Je,Ke,et,tt,nt,rt,it,st,ot,at,ut,lt,ct,pt,ft,ht,mt,gt,vt,dt,wt,yt=Ge[0].group,bt=Ge[1].group,St=Ge[0],Mt=Ge[1],Nt=St.fname,Et=Mt.fname;if(ze=t.multiply(St.clone(),Mt.clone()),yt===s&&bt===s)if(Nt===S||Et===S)b=B.integration.by_parts(ze.clone(),P,h,m);else{Ge.sort((function(e,t){return t.fname>e.fname}));var xt,qt=St.args[0];qt.isLinear()&&(qt.group===d||qt.group===w||qt.group===g)||B.integration.stop(),Y=(xt=B.integration.decompose_arg(qt,P))[1],Q=xt[0],Y.isLinear()||B.integration.stop();var At,Ct=Mt.args[0];if(qt.equals(Ct))if(Nt===N&&Et===E||Nt===E&&Et===N)if(St.power.lessThan(0)&&B.integration.stop(),Nt===N&&St.power.add(Mt.power).equals(0))St.fname=x,St.updateHash(),b=B.integrate(St,P,h);else if(f(St.power)&&Et===E&&Mt.power.lessThan(0)){ge=Number(St.power)/2;var It=t.parse(p("(1-cos({0})^2)^({1})",St.args[0],ge));b=B.integrate(t.expand(t.multiply(It,Mt.clone())),P,h,m)}else if(f(St.power)&&Et===N&&Mt.power.lessThan(0))ge=Number(St.power)/2,It=t.parse(p("(1-sin({0})^2)^({1})",St.args[0],ge)),b=B.integrate(t.expand(t.multiply(It,Mt.clone())),P,h,m);else{var Ut,Lt=e.Utils.even(St.power),_t=e.Utils.even(Mt.power);if(b=new a(0),Lt&&_t){var Ot=function(e){var n=e.power/2;return n=e.fname===E?"((1/2)+(cos(2*("+e.args[0]+"))/2))^"+n:"((1/2)-(cos(2*("+e.args[0]+"))/2))^"+n,t.parse(n)},Rt=(Q=Ot(St),z=Ot(Mt),t.multiply(Q,z));return(Tt=t.expand(Rt)).each((function(e){b=t.add(b,B.integrate(e,P,h))})),t.multiply(b,Fe)}Ft=Lt?(Ut=St,Mt):(Ut=Mt,St);var Tt,Pt=Ut.fname===E?-1:1,kt=((ge=Ft.power)-1)/2,Dt=t.parse("(1-"+Ut.fname+e.Utils.inBrackets(qt)+"^2)^"+kt);(Tt=t.expand(t.multiply(new a(Pt),t.multiply(Ut.clone(),Dt)))).each((function(e){b=t.add(b,B.integration.poly_integrate(e.clone()))}))}else Nt===q&&Et===x&&Y.isLinear()&&Mt.isLinear()?b=t.parse(p("sec({0})^({1})/({1})",St.args[0],St.power)):Nt===x&&Et===q&&Y.isLinear()?St.isLinear()&&Mt.isLinear()?b=t.divide(t.symfunction(q,[qt.clone()]),Q):f(St.power)?(V=Number(St.power)/2,Rt=t.parse(p("(sec({0})^2-1)^({1})",St.args[0],V)),b=B.integrate(t.expand(t.multiply(Rt,Mt)),P,h)):B.integration.stop():b=Nt===q&&Et===E?(St.fname=E,St.invert().updateHash(),B.integrate(t.multiply(St,Mt),P,h)):Nt===N&&Et===A?(Mt.fname=N,Mt.invert().updateHash(),B.integrate(t.multiply(St,Mt),P,h)):(Rt=Nt!==x||Et!==E&&Et!==N||!Mt.power.lessThan(0)?t.multiply(St.fnTransform(),Mt.fnTransform()):t.multiply(St.fnTransform(),Mt),B.integrate(t.expand(Rt),P,h));else Nt!==N&&Nt!==E||Et!==N&&Et!==E?B.integration.stop():St.isLinear()&&Mt.isLinear()?b=St.args[0].isLinear()&&Mt.args[0].isLinear()?(Et===N?($=St.args[0],At=Mt.args[0]):(At=St.args[0],$=Mt.args[0]),de=t.parse(p("(sin(({1})+({0}))+sin(({1})-({0})))/2",$.toString(),At.toString())),B.integrate(de,P,h)):(Vt=F(Ge),B.integrate(t.expand(Vt),P,h)):(Vt=new a(1),Ge.map((function(e){e=e.fnTransform(),Vt=t.multiply(Vt,e)})),Rt=t.expand(Vt),(b=B.integrate(Rt,P,h)).hasIntegral()&&(b=B.integrate(F(Vt.collectSymbols()),P,h)))}else yt===s&&bt===g?(je=St.isLinear(),St.fname===E&&je&&Mt.power.equals(-1)?b=t.symfunction("Ci",[St.args[0]]):St.fname===E&&Mt.power.equals(-1)?b=B.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===_&&je&&Mt.power.equals(-1)?b=t.symfunction("Chi",[St.args[0]]):St.fname===_&&Mt.power.equals(-1)?b=B.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===N&&je&&Mt.power.equals(-1)?b=t.symfunction("Si",[St.args[0]]):St.fname===N&&Mt.power.equals(-1)?b=B.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===L&&je&&Mt.power.equals(-1)?b=t.symfunction("Shi",[St.args[0]]):St.fname===L&&Mt.power.equals(-1)?b=B.integrate(t.multiply(St.fnTransform(),Mt.clone()),P,h):St.fname===S&&Mt.power.equals(-1)?b=B.integration.poly_integrate(St,P,h):"erf"===St.fname?Mt.power.equals(1)&&(ke=(it=B.integration.decompose_arg(St.args[0],P))[0],Pe=it[1],Me=St.args[0].toString(),b=t.parse(p("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",ke,Pe,Me))):b=B.integration.by_parts(ze,P,h,m)):yt===y&&bt===g?(Y=Nt===S?B.integration.decompose_arg(St.args[0],P)[1]:null,b=St.isE()&&(St.power.group===g||St.power.group===w)&&Mt.power.equals(-1)?t.symfunction("Ei",[St.power.clone()]):Nt===S&&Y.value===Mt.value?B.integration.poly_integrate(St,P,h):B.integration.by_parts(ze,P,h,m)):yt===v&&bt===g?(ze=Mt.value===St.value&&St.power.equals(-1)?(He=Math.min.apply(null,e.Utils.keys(St.symbols)),Xe=Math.min(He,Mt.power),(Ze=Mt.clone()).power=new n(Xe),Mt=t.divide(Mt,Ze.clone()),Rt=new a(0),St.each((function(e){Rt=t.add(Rt,t.divide(e.clone(),Ze.clone()))})),Rt.multiplier=St.multiplier,t.divide(Mt,Rt)):t.expand(ze),b=B.integration.partial_fraction(ze,P,h)):yt===d&&bt===g?(de=St.clone().toLinear(),$e=e.Algebra.degree(de,t.parse(P)).equals(1),St.power.equals(-.5)?(Q=(xt=B.integration.decompose_arg(St.clone().toLinear(),P))[0].negate(),Y=xt[1],z=xt[3],lt=Number(St.power),ct=Number(Mt.power),c(ct)&&e.Utils.even(ct)&&Y.power.equals(2)?(st=t.divide(t.multiply(t.pow(z.clone(),new a(2)),t.symfunction(M,[t.divide(z.clone(),Q.clone())])),t.pow(Q.clone(),new a(2))),st=t.multiply(st,t.symfunction(M,[z]).invert()),(Qe=t.parse("sin(u)")).power=Qe.power.multiply(Mt.power),ve=B.integrate(Qe,"u",h),Ye=t.parse("asin(sqrt("+Q+"/"+z+")*"+P+")"),b=t.multiply(st,ve.sub(new a("u"),Ye))):-.5===lt&&(We=function(e,n){if(!(n=t.parse(B.integrate(e,P,h,m).sub(P,p(n,P)))).hasIntegral())return n},-1===ct?b=We(t.expand(t.expand(t.pow(t.multiply(St.invert(),Mt.invert()),new a(2)))).invert(),"sqrt(1-1/({0})^2)"):-2===ct&&(b=We(t.sqrt(t.expand(t.divide(t.pow(ze,new a(2)).invert(),t.pow(new a(P),new a(2))).negate())).invert(),"sqrt(1-1/({0})^2)")))):St.power.equals(-1)&&Mt.isLinear()&&$e?b=B.integration.partial_fraction(ze,P,h):!St.power.lessThan(0)&&c(St.power)?(Je=t.expand(St),b=new a(0),Je.each((function(e){e.group===v?e.each((function(e){b=t.add(b,B.integrate(t.multiply(Mt.clone(),e),P,h))})):b=t.add(b,B.integrate(t.multiply(Mt.clone(),e),P,h))}))):St.power.lessThan(-2)?b=B.integration.by_parts(ze,P,h,m):St.power.lessThan(0)&&Mt.power.greaterThan(1)?(Q=(xt=B.integration.decompose_arg(St.clone().toLinear(),P))[0].negate(),Y=xt[1],z=xt[3],Z=St.clone().toLinear(),b=Y.group!==v&&Y.isLinear()?(V=Number(Mt.power),Ut=new a(pt="_u_"),Ke=t.expand(t.divide(t.pow(t.subtract(Ut.clone(),z.clone()),new a(V)),Ut.clone())),(et={})[pt]=Z,tt=t.parse(Ke,et),B.integrate(tt,P,0)):Mt.power.greaterThan(Y.power)||Mt.power.equals(Y.power)?(nt=new e.Algebra.Classes.Factors,St=e.Algebra.Factor.coeffFactor(St.invert(),nt),(rt=e.Algebra.divide(Mt,St)).group!==w?(b=new a(0),rt.each((function(e){b=t.add(b,B.integrate(e,P,h))})),nt.each((function(e){b=t.divide(b,e)})),t.expand(b)):B.integration.by_parts(ze,P,h,m)):B.integration.partial_fraction(ze,P,h)):St.power.den.equals(2)?(Q=(it=B.integration.decompose_arg(St.clone().toLinear(),P))[3],Y=it[1],z=it[0],At=it[2],b=Y.power.equals(2)&&z.lessThan(0)?(Q.equals(1)||(Fe=t.multiply(Fe,t.pow(Q,new a(2)))),Ut=P,st=t.divide(t.pow(z.clone().negate(),new a(.5)),t.pow(Q,new a(.5))),pt=t.symfunction(E,[new a(Ut)]),ot=t.pow(t.symfunction(E,[new a(Ut)]),new a(St.power.num)),at=t.pow(t.symfunction(N,[new a(Ut)]),new a(Mt.power)),ut=t.multiply(t.multiply(ot,pt),at),(ve=B.integrate(ut,Ut,h)).sub(Ut,t.symfunction(I,[t.multiply(new a(P),st)]))):B.integration.partial_fraction(ze,P,h,m)):$e&&(b=B.integration.partial_fraction(ze,P,h))):St.isComposite()&&Mt.isComposite()?(b=new a(0),St.power.greaterThan(0)&&Mt.power.greaterThan(0)?(Tt=t.expand(ze)).each((function(e){b=t.add(b,B.integrate(e,P,h))}),!0):(lt=Number(St.power),ct=Number(Mt.power),lt<0&&0<ct&&(Rt=St,St=Mt,Mt=Rt),-1===lt&&-1===ct?b=B.integration.partial_fraction(ze,P):St.each((function(e){e=t.multiply(e,Mt.clone()),e=B.integrate(e,P,h),b=t.add(b,e)})))):yt===d&&Ge[0].power.greaterThan(0)?(St=t.expand(St),b=new a(0),St.each((function(e){b=t.add(b,B.integrate(t.multiply(e,Mt.clone()),P,h))}),!0)):yt===s&&bt===y&&e.Utils.in_htrig(St.fname)?(St=St.fnTransform(),b=B.integrate(t.expand(t.multiply(St,Mt)),P,h)):yt===s&&bt===d||bt===s&&yt===d?(bt===s&&yt===d&&(Rt=St,St=Mt,Mt=Rt),pt=a.unwrapSQRT(B.diff(St.clone(),P),!0),ft=a.unwrapSQRT(Mt,!0),pt.power.equals(ft.power)?(V=new a(Mt.power),mt=pt.clone().toLinear(),gt=Mt.clone().toLinear(),(ht=e.Algebra.divide(mt.toLinear(),gt)).isConstant()&&(vt=t.pow(ht,V.negate()),b=t.multiply(vt,B.integration.poly_integrate(St.clone())))):b=B.integration.by_parts(ze,P,h,m)):(dt=St.clone().toLinear(),wt=Mt.clone().toLinear(),b=yt===y&&bt===y&&St.power.contains(P)&&Mt.power.contains(P)&&!dt.contains(P)&&!wt.contains(P)?t.parse(p("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",dt.toString(),wt.toString(),St.power.multiplier.toString(),Mt.power.multiplier.toString(),P)):B.integration.by_parts(ze,P,h,m))}}else if(3===Ve&&(Ge[2].group===g&&Ge[2].power.lessThan(2)||Ge[0].group===d)){var Ft,Bt=Ge[0];Bt.group===d?(Bt.power.greaterThan(1)&&(Bt=t.expand(Bt)),Ft=t.multiply(Ge[1],Ge[2]),b=new a(0),Bt.each((function(e){e=t.multiply(e,Ft.clone()),e=B.integrate(e,P,h),b=t.add(b,e)}),!0)):b=B.integration.by_parts(ze,P,h,m)}else if(T(Ge)){Rt=new a(1);var Gt=0;for(Ve=Ge.length;Gt<Ve;Gt++)Rt=t.multiply(Rt,Ge[Gt].fnTransform());Rt=t.expand(Rt),b=B.integrate(Rt,P,h)}else{var Vt=F(Ge);b=B.integrate(t.expand(Vt),P,h)}}b=t.multiply(b,Fe)}}else b=t.multiply(ze.clone(),t.parse(P));if(b)return b}catch(k){if(!(k instanceof R||k instanceof e.exceptions.DivisionByZero))throw k}return t.symfunction("integrate",[o,u])}),!1))},defint:function(n,r,i,s){function o(e,n,r){try{return t.parse(e,n)}catch(n){return B.Limit.limit(e,s,r)}}s=s||"x";var u,l,c=e.Utils.variables(n),p=n.hasTrig();return 1!==c.length||s||(s=c[0]),p||(u=B.integrate(n,s)),p||u.hasIntegral()?1===c.length&&r.isConstant()&&i.isConstant()?(l=e.Utils.build(n),new a(e.Math2.num_integrate(l,Number(r),Number(i)))):t.symfunction("defint",[n,r,i,s]):(l={},(n={})[s]=i,l[s]=r,i=o(u,n,i),r=o(u,l,r),t.subtract(i,r))},Limit:{interval:function(e,n){return t.parse(p("[{0}, {1}]",e,n))},diverges:function(){return B.Limit.interval("-Infinity","Infinity")},divide:function(n,i,s,o,u){if(!(u++>r.max_lim_depth)){n.clone();var l=i.clone();if("abs"===i.fname){var c=n.sign(),p=o.sign();if(o.isInfinity)return t.multiply(new a(c),new a(p));if(o.equals(0)){p=t.parse(n.multiplier);var f=t.parse(i.multiplier);return t.divide(t.multiply(p,B.Limit.interval("-1","1")),f)}B.Limit.diverges()}var m=function(t){if(e.Utils.isVector(t)){for(var n=0;n<t.elements.length;n++)if(!t.elements[n].isInfinity)return!1;return!0}return t.isInfinity},g=function(t,n){return!e.Utils.isVector(t)&&t.equals(n)};do{var v,d,w=h(B.Limit.limit(n.clone(),s,o,u)),y=h(B.Limit.limit(i.clone(),s,o,u)),b=m(w)&&m(y)||g(w,0)&&g(y,0)}while(b&&(v=B.diff(n.clone(),s),d=B.diff(i.clone(),s),n=(d=t.expand(t.divide(v,d))).getNum(),i=d.getDenom()),b);return f=y.equals(0),l=Number(l.power),o.isConstant(!0)&&f?a.infinity(e.Utils.even(l)&&w.lessThan(0)?-1:void 0):f?B.Limit.diverges():t.divide(w,y)}},rewriteToLog:function(e){var n=e.power.clone();return e.toLinear(),t.pow(new a("e"),t.multiply(n,t.symfunction(r.LOG+"",[e])))},getSubbed:function(e,t,n){var r;e.group===y&&(e=B.rewriteToLog(e));try{r=e.sub(t,n)}catch(t){r=e}return r},isInterval:function(t){return e.Utils.isVector(t)},isConvergent:function(e){return!(B.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction("limit"))},limit:function(n,i,o,u){if(n.isLinear()&&n.isComposite()){var l=new a(0);return n.each((function(e){l=t.add(l,B.Limit.limit(e,i,o,u))}),!0),l}if(n=e.Algebra.Simplify.simplify(n),u=u||1,!(u++>r.max_lim_depth)){var c=t.parse(n.multiplier);n.toUnitMultiplier();try{if(n.isConstant(!0))U=n;else{var f={};f[i]=o;try{var m=t.parse(n.sub(i,o),f);(m.isConstant(!0)||m.isInfinity)&&(U=m)}catch(c){}if(!U){var v,d=n.getNum(),b=n.getDenom();if(b.isConstant(!0)){if(n.group===y){var M,q,A,C,I,U,L=n.clone().toLinear(),_=(n.power.clone(),L.getNum()),O=L.getDenom(),R=e.Utils.decompose_fn(O,i,!0);U=_.group===g&&_.multiplier.isOne()&&R.ax.group===g&&R.b.isConstant(!0)&&R.a.isOne()&&R.b.isConstant(!0)?t.parse(p("(1/e^({0}))",R.b)):(q=(M=B.Limit.rewriteToLog(n.clone())).power.clone(),A=M.clone().toLinear(),C=B.Limit.limit(A,i,o,u),I=B.Limit.limit(q,i,o,u),t.pow(C,I))}else if(n.group===s&&1===n.args.length){var T,P=B.Limit.limit(n.args[0],i,o,u);if(e.Utils.isVector(P))return U=P.map((function(e){return n.clone().args[0]=e,B.Limit.limit(t.symfunction(n.fname,[e]),i,o,u)})),t.multiply(c,U);if(P.isConstant(!0)){var k=t.symfunction(n.fname,[P]);try{h(k),T=!0}catch(c){T=!1}}if(T)U=k;else if(B.Limit.isConvergent(P))if(n.fname===S)switch(P.toString()){case"0":U=a.infinity().negate();break;case"Infinity":case"-Infinity":U=a.infinity()}else if(n.fname!==E&&n.fname!==N||!o.isInfinity){if(n.fname===x){var D=n.args[0],F=D.getNum(),G=D.getDenom(),V=F.toUnitMultiplier();(o.isInfinity||V.equals("pi")&&G.equals(2))&&(U=divergent())}else if(n.fname===r.FACTORIAL&&P.isInfinity)return a.infinity()}else U=B.Limit.interval(-1,1)}else if(n.group===g){if(0<n.power)return t.parse(n,f);U=e.Utils.even(n.power)?a.infinity():B.Limit.diverges()}else if(n.group===w){L=(Z=n.collectSymbols().sort((function(e,t){return e.group-t.group}))).pop();for(var j=h(B.Limit.limit(L,i,o,u));Z.length;){var H=Z.pop(),X=h(B.Limit.limit(H,i,o,u));j.isInfinity||!B.Limit.isConvergent(j)&&X.equals(0)||j.equals(0)&&B.Limit.isConvergent(X)?((H=H.containsFunction(S)?[L,L=H][0]:H).invert(),j=j.isInfinity&&X.isInfinity?a.infinity():B.Limit.divide(L,H,i,o,u)):(j=t.multiply(j,X),L=t.multiply(L,H))}U=j}else if(n.isComposite()){n.isLinear()||(n=t.expand(n)),U=new a(0);for(var Z=n.collectSymbols().sort((function(e,t){return t.group-e.group})),z=[],$=new a(0),Q=0,Y=Z.length;Q<Y;Q++)(W=Z[Q].clone()).group===s||W.group===w&&W.hasFunc()?$=t.add($,W):z.push(W);for(z.unshift($),1!==z.length&&(Z=z),Q=0,Y=Z.length;Q<Y;Q++){var W=Z[Q];try{v=B.Limit.limit(W,i,o,u)}catch(c){v=B.Limit.diverges()}try{U=t.add(U,v)}catch(c){if(u++>r.max_lim_depth)return;U=B.Limit.limit(B.diff(n,i),i,o,u)}}}}else U=B.Limit.divide(d,b,i,o,u)}}U=U||t.symfunction("limit",[n,i,o])}catch(c){U=t.symfunction("limit",[n,i,o])}return t.multiply(c,U)}}},Fresnel:{S:function(e){return e.isConstant(!0)?B.defint(t.parse("sin(pi*x^2/2)"),a(0),e,"x"):t.symfunction("S",arguments)},C:function(e){return e.isConstant(!0)?B.defint(t.parse("cos(pi*x^2/2)"),a(0),e,"x"):t.symfunction("C",arguments)}}};o.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return B.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return B.sum}},{name:"product",visible:!0,numargs:4,build:function(){return B.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return B.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return B.defint}},{name:"S",visible:!0,numargs:1,build:function(){return B.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return B.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return B.Limit.limit}}]),o.updateAPI()}(),o=r(182),r(238),r(684),function(){var e,t=o.getCore(),r=t.PARSER,i=t.Algebra,s=t.Calculus,a=s.integration.decompose_arg,u=t.Utils.evaluate,l=t.Utils.remove,c=t.Utils.format,p=t.Utils.build,f=t.Utils.knownVariable,h=t.Symbol,m=t.Utils.isSymbol,g=t.Utils.variables,v=t.groups.S,d=t.groups.PL,w=t.groups.CB,y=t.groups.CP,b=t.groups.FN,S=t.Settings,M=t.Utils.range,N=t.Utils.isArray;function E(e,n){if(n.isConstant()&&e.isConstant()&&!e.equals(n)||e.equals(t.Settings.IMAGINARY)&&n.isConstant(!0)||n.equals(t.Settings.IMAGINARY)&&e.isConstant(!0))throw new t.exceptions.NerdamerValueError(e.toString()+" does not equal "+n.toString());this.LHS=e,this.RHS=n}function x(e,t){return r.equals(e,t)}t.Settings.SOLVE_RADIUS=1e3,t.Settings.ROOTS_PER_SIDE=10,t.Settings.make_pi_conversions=!1,t.Settings.STEP_SIZE=.1,t.Settings.EPSILON=1e-13,t.Settings.MAX_NEWTON_ITERATIONS=200,t.Settings.MAX_NON_LINEAR_TRIES=12,t.Settings.NON_LINEAR_JUMP_AT=50,t.Settings.NON_LINEAR_JUMP_SIZE=100,t.Settings.NON_LINEAR_START=.01,t.Settings.NEWTON_SLICES=200,t.Settings.NEWTON_EPSILON=2*Number.EPSILON,t.Settings.SOLUTION_PROXIMITY=1e-14,t.Settings.FILTER_SOLUTIONS=!0,t.Settings.MAX_SOLVE_DEPTH=10,t.Settings.ZERO_EPSILON=1e-9,t.Settings.MAX_BISECTION_ITER=2e3,t.Settings.BI_SECTION_EPSILON=1e-12,t.Symbol.prototype.hasTrig=function(){return this.containsFunction(["cos","sin","tan","cot","csc","sec"])},t.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===d&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1},E.prototype={toString:function(){return this.LHS.toString()+"="+this.RHS.toString()},text:function(e){return this.LHS.text(e)+"="+this.RHS.text(e)},toLHS:function(e){var t=(n=(e=void 0===e)?this.removeDenom():this.clone()).LHS,n=n.RHS;return t.isConstant(!0)&&!n.isConstant(!0)&&([t,n]=[n,t]),n=r.subtract(t,n),new E(e?r.expand(n):n,new h(0)).removeDenom().LHS},removeDenom:function(){var e=this.LHS.clone(),t=this.RHS.clone(),n=r.multiply(e.getDenom(),t.getDenom());if(e=r.expand(r.multiply(e,n.clone())),(t=r.expand(r.multiply(t,n))).group===y&&t.group!==y&&(i=e,e=t,t=i),e.group===w){var i=new h(e.multiplier),s=t.clone();e.each((function(e){e.power.lessThan(0)?s=r.divide(s,e):i=r.multiply(i,e)})),e=i,t=s}else if(e.group===y)for(var o in e.symbols){var a=e.symbols[o];if(a.group===w)for(var u in a.symbols)if((u=a.symbols[u]).power.lessThan(0))return new E(r.expand(r.multiply(u.clone().toLinear(),e)),r.expand(r.multiply(u.clone().toLinear(),t)))}return new E(e,t)},clone:function(){return new E(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var n=this.clone();return n.LHS=n.LHS.sub(e.clone(),t.clone()),n.RHS=n.RHS.sub(e.clone(),t.clone()),n},isZero:function(){return t.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join("=")}},r.equals=function(e,t){return new E(e,t)},e=r.functions.simplify[0],r.functions.simplify[0]=function(t){return t instanceof E?(t.LHS=e(t.LHS),t.RHS=e(t.RHS),t):e(t)},t.Expression.prototype.equals=function(e){return e instanceof t.Expression&&(e=e.symbol),new E(this.symbol,e)},t.Expression.prototype.solveFor=function(e){var n;if(this.symbol instanceof E){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(e))return new t.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(e))return new t.Expression(this.symbol.RHS);n=this.symbol.toLHS()}else n=this.symbol;return C(n,e).map((function(e){return new t.Expression(e)}))},t.Expression.prototype.expand=function(){if(this.symbol instanceof E){var e=this.symbol.clone();return e.RHS=r.expand(e.RHS),e.LHS=r.expand(e.LHS),new t.Expression(e)}return new t.Expression(r.expand(this.symbol))},t.Expression.prototype.variables=function(){return this.symbol instanceof E?t.Utils.arrayUnique(g(this.symbol.LHS).concat(g(this.symbol.RHS))):g(this.symbol)},t.Equation=E;var q=t.Utils.checkAll=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!1;return!0},A=t.Solve={version:"2.0.3",solutions:[],solve:function(e,n){return n=C(e,String(n)),new t.Vector(n)},toLHS:function(e,t){return m(e)?e:(e instanceof E||((n=e.split("="))[1]=n[1]||"0",e=new E(r.parse(n[0]),r.parse(n[1]))),e.toLHS(t));var n},solveCircle:function(e,n){for(var i=n.map((function(e){return r.parse(e)})),s=[],o=[],a=0;a<e.length;a++){for(var u=[],l=0;l<i.length;l++)u.push(Number(t.Algebra.degree(e[a],i[l])));u.push(t.Utils.arraySum(u,!0)),s.push(u)}var c,p,h=e[0],m=e[1];return s[0][2]>s[1][2]&&([m,h]=[h,m],[s[1],s[0]]=[s[0],s[1]]),1===s[0][0]&&2===s[0][2]&&2===s[1][0]&&4===s[1][2]&&(c=n[0],p=n[1],n=C(r.parse(m,f(c,C(r.parse(h),c)[0])),p).map((function(e){return e.toString()})),m=[C(r.parse(h,f(p,n[0])))[0].toString()],n[1]&&m.push(C(r.parse(h,f(p,n[1])))[0].toString()),S.SOLUTIONS_AS_OBJECT?((o={})[c]=m,o[p]=n):(n.unshift(p),m.unshift(c),o=[m,n])),o},solveNonLinearSystem:function(e,i,s){if(i<0)return[];s=void 0===s?t.Settings.NON_LINEAR_START:s;var o=t.Settings.MAX_NON_LINEAR_TRIES,a=Math.floor(o/2);i=void 0===i?o:i;var u,l,c,f,h,m=t.Settings.NON_LINEAR_JUMP_AT,g=t.Settings.NON_LINEAR_JUMP_SIZE,v=t.Utils.arrayGetVariables(e),d=(o=t.Matrix.jacobian(e,v,(function(e){return p(e,v)}),!0),t.Settings.MAX_NEWTON_ITERATIONS),w=e.map((function(e){return p(e,v)})),y=o.map((function(e){return p(e,v)}),!0),b=t.Matrix.cMatrix(0,v),S=t.Matrix.cMatrix(s,v),M=0;do{if(d<M)break;u=function(e,t){return e.map((function(e,n){return Number(t.get(n,0))}))}(v,S),f=S.clone(),w.forEach((function(e,t){S.set(t,0,e.apply(null,u))}));var N=new t.Matrix;if(y.each((function(e,t,n){e=e.apply(null,u),N.set(t,n,e)})),N=N.invert(),h=(l=r.multiply(N,S).negate()).subtract(b,(function(e){return r.parse(Number(e))})),b=f.add(l,(function(e){return r.parse(Number(e))})),S=b,m<=M&&1<c){i===a&&(s=0);var E=a<i?1:-1;return n=i%Math.floor(a)+1,s+=E*n*g,A.solveNonLinearSystem(e,--i,s)}}while(E=c,M++,c=h.max(),Number(c)!==Number(E)&&Number(c)>=Number.EPSILON);return A.systemSolutions(S,v,!0,(function(e){return t.Utils.round(Number(e),14)}))},systemSolutions:function(e,n,i,s){var o=t.Settings.SOLUTIONS_AS_OBJECT?{}:[];return e.each((function(e,a){var u=(i?r.expand(e):e).valueOf();s&&(u=s.call(e,u)),a=n[a],t.Settings.SOLUTIONS_AS_OBJECT?o[a]=u:o.push([a,u])})),o},solveSystemBySubstitution:function(e){var n=g(e[0]),r=g(e[1]);return 2===e.length&&2===n.length&&t.Utils.arrayEqual(n,r)?A.solveCircle(e,n):[]},solveSystem:function(e,n){for(var s=0;s<e.length;s++)e[s]=A.toLHS(e[s]);var u,c=e.length,p=new t.Matrix,f=new t.Matrix,m=!1;if(void 0===n){if(!i.allLinear(e))try{return A.solveNonLinearSystem(e)}catch(d){if(d instanceof t.exceptions.DivisionByZero)return A.solveSystemBySubstitution(e)}if(1===(u=t.Utils.arrayGetVariables(e)).length){var g,v=0;do{var d=e[v].clone()}while(0<v&&(d=d.sub(u[0],g[0])),g=C(d,u[0]),++v<e.length);return S.SOLUTIONS_AS_OBJECT?(b={})[u[0]]=g:b=0===g.length?g:[u[0],g],b}if(u.length<e.length){var w=[];for(v=e.length,s=0;s<v-1;s++)w.push(r.parse(e[s]));var y={},b=A.solveSystem(w,u);Array.isArray(b)?b.forEach((function(e){y[e[0]]=e[1]})):y=b;var M=!0;for(s=v-1;s<v;s++)r.parse(e[s],y).equals(0)||(M=!1);if(M)return b}for(s=0;s<u.length;s++)o.setVar(u[s],"delete");for(s=0;s<c;s++){d=e[s];for(var N=0;N<u.length;N++){var E=u[N],x=[];d.each((function(e){e.contains(E)&&(x=x.concat(e.coeffs()))}));var q=t.Utils.arraySum(x);p.set(s,N,q)}var I=d.clone();u.map((function(e){I=I.stripVar(e,!0)})),f.set(s,0,I.negate())}}else for(u=n,m=!0,s=0;s<c;s++){for(f.set(s,0,new h(0)),d=r.expand(e[s]).collectSymbols(),N=0;N<n.length;N++){p.set(s,N,new h(0)),E=n[N];for(var U=0;U<d.length;U++){for(var L,_=d[U],O=!1,R=0;R<n.length;R++)_.contains(n[R])&&(O&&t.err("Multiple variables found for term "+_),O=!0);_.contains(E)&&(L=a(l(d,U),E),p.set(s,N,r.add(p.get(s,N),L[0])))}}for(U=0;U<d.length;U++)f.set(s,0,r.add(f.get(s,0),d[U]))}if(u.length!==e.length||p.determinant().equals(0))throw new t.exceptions.SolveError("System does not have a distinct solution");return b=(p=p.invert()).multiply(f),t.Utils.isArray(n)&&b.each((function(e){return e.negate()})),A.systemSolutions(b,u,m)},quad:function(e,t,n){return e=r.subtract(r.pow(t.clone(),h(2)),r.multiply(r.multiply(n.clone(),e.clone()),h(4))),e=r.expand(e),e=r.pow(e,h(.5)),n=r.parse(r.multiply(new h(2),n.clone())),[r.parse(c("(-({0})+({1}))/({2})",t,e,n)),r.parse(c("(-({0})-({1}))/({2})",t,e,n))]},cubic:function(e,t,n,i){return i=i.text(),n=`((${e=`(-(${n=n.text()})^3/(27*(${i})^3)+(${n})*(${t=t.text()})/(6*(${i})^2)-(${e.text()})/(2*(${i})))`})+sqrt((${e})^2+(${t=`((${t})/(3*(${i}))-(${n})^2/(9*(${i})^2))`})^3))^(1/3)+((${e})-sqrt((${e})^2+(${t})^3))^(1/3)-((${n})/(3*(${i})))`,i="1/2+sqrt(3)/2*i",[r.parse(n),r.parse(`(${n})(${i})`),r.parse(`(${n})(${i})^2`)]},quartic:function(e,n,i,s,o){var a,u,l,p={};return t.Utils.arrayUnique(g(o).concat(g(s)).concat(g(i)).concat(g(n)).concat(g(e))).map((function(e){p[e]=1})),o=o.toString(),s=s.toString(),i=i.toString(),n=n.toString(),e=e.toString(),a=r.parse(c("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",o,s,i)).toString(),u=r.parse(c("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",o,s,i,n)).toString(),l=r.parse(c("12*({0})*({4})-3*({1})*({3})+({2})^2",o,s,i,n,e)).toString(),e=r.parse(c("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",o,s,i,n,e)).toString(),e=r.parse(c("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",l,e)).toString(),v=r.parse(c("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",o,a,e,l)).toString(),[r.parse(c("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",o,s,a,u,v)),r.parse(c("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",o,s,a,u,v)),r.parse(c("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",o,s,a,u,v)),r.parse(c("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",o,s,a,u,v))]},divideAndConquer:function(e,n){var r=[];return(e=t.Algebra.Factor.factor(e)).group===w&&e.each((function(e){e=h.unwrapPARENS(e),r=r.concat(C(e,n))})),r},csolve:function(e,n){return t.Utils.block("IGNORE_E",(function(){var i=[],s=t.Utils.decompose_fn(e,n,!0);if(s.x.group===v)for(var o,a=r.parse(s.x.power),u=Number(a),l=r.pow(r.divide(s.b.negate(),s.a),a.invert()),p=(l=(s=h.toPolarFormArray(l))[0],s[1],l.toString()),f=(a.toString(),0);f<u;f++)o=c("({0})*e^(2*{1}*pi*{2}*{3})",p,f,a,t.Settings.IMAGINARY),o=r.parse(o),i.push(o);return i}),!0)},getPoints:function(e,n,r){n=n||.01,r=r||[];var i=p(e),s=Math.round(0),o=(u=i(s))/Math.abs(u),a=t.Settings.ROOTS_PER_SIDE,u=a;return r.push(Math.floor(s/2)),r.push(Math.abs(s)),r.push(s),e.each((function(e){e.containsFunction(t.Settings.LOG)&&r.push(.1)})),e=M(-t.Settings.SOLVE_RADIUS,s,n),s=M(s,t.Settings.SOLVE_RADIUS,n),n=function(e,t){for(var n,s,a,u=[],l=0,c=e.length;l<c;l++)n=e[l],a=(s=i(n))/Math.abs(s),isNaN(s)||!isFinite(s)||u.length>t||(a!==o&&u.push(n),o=a);r=r.concat(u)},n(e,u),n(s,a),r},bisection:function(e,n){var r=e-1,i=e+1;if(Math.sign(n(r))!==Math.sign(n(i))){var s,o,a=0;do{if(s=Math.abs(i-r),a++>t.Settings.MAX_BISECTION_ITER||isNaN(s))return}while(o=(r+i)/2,0<n(r)*n(o)?r=o:i=o,s>=S.EPSILON);var u=(r+i)/2;if(e=n(u),!isNaN(e)&&Math.abs(e)<=t.Settings.BI_SECTION_EPSILON)return t.Utils.round(u,13)}},Newton:function(e,n,r){var i=t.Settings.MAX_NEWTON_ITERATIONS,s=0,o=e;do{var a=n(o);if(0===o&&0===a){u=0;break}if(i<++s)return;var u=o-a/r(o);a=Math.abs(u-o),o=u}while(a>S.NEWTON_EPSILON);if(Math.abs(n(u))<=S.EPSILON)return u},rewrite:function(e,n,i){var s,o;n=n||new h(0),e.isComposite()&&e.isLinear()?(s=[],o=[],e.each((function(e){("sqrt"===(e=e.clone()).fname&&e.contains(i)?s:o).push(e)}),!0),1===s.length&&(n=r.expand(r.pow(r.subtract(n,t.Utils.arraySum(o)),new h(2))),e=r.expand(r.pow(h.unwrapSQRT(s[0]),new h(2))))):e=h.unwrapSQRT(r.expand(e));var a=0,u=e.length;if(e.group===y&&e.contains(i)&&e.isLinear()){e.distributeMultiplier();var l=new h(0);return e.each((function(e){e.contains(i)?(a++,l=r.add(l,e.clone())):n=r.subtract(n,e.clone())})),e=l,a!==u?A.rewrite(e,n,i):[e,n]}return e.group===w&&e.contains(i)&&e.isLinear()?(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new t.Frac(-1)),n.multiplier=n.multiplier.multiply(new t.Frac(-1))),n.equals(0)?new h(0):(l=new h(1),e.each((function(e){e.contains(i)?l=r.multiply(l,e.clone()):n=r.divide(n,e.clone())})),A.rewrite(e=l,n,i))):!e.isLinear()&&e.contains(i)?(u=r.parse(e.power.clone().invert()),e=r.pow(e,u.clone()),n=r.pow(r.expand(n),u.clone()),A.rewrite(e,n,i)):e.group===b||e.group===v||e.group===d?[e,n]:void 0},sqrtSolve:function(e,t){var n=new h(0),i=new h(0);if(e.isComposite()&&(e.each((function(e){"sqrt"===e.fname&&e.contains(t)?n=r.add(n,e.clone()):i=r.add(i,e.clone())})),!n.equals(0))){var s=r.expand(r.multiply(r.parse(e.multiplier),r.subtract(r.pow(i,new h(2)),r.pow(n,new h(2)))));return C(s,t).filter((function(n){if(n.isImaginary())return n;var r={};return r[t]=n,u(e,r).equals(0)?n:void 0}))}}},C=function(e,n,o,l,c){if(l=l||0,l++>S.MAX_SOLVE_DEPTH)return o;if(e instanceof E){if(e.isZero())return[new h(0)];if(e.LHS.equals(n)&&!e.RHS.contains(n))return[e.RHS];if(e.RHS.equals(n)&&!e.LHS.contains(n))return[e.LHS]}if(e instanceof t.Vector&&(e=e.elements),n=n||"x",N(e))return A.solveSystem.apply(void 0,arguments);o=o||[];var f={};if((x={})[n]=0,m(e)&&!0===u(e.getDenom(),x).equals(0))return o;var g=function(e,n){var i,s=m(e);void 0===e||"number"==typeof e&&isNaN(e)||(N(e)?e.forEach((function(e){g(e)})):"null"!==e.valueOf()&&("function"==typeof t.Settings.PRE_ADD_SOLUTION&&(e=t.Settings.PRE_ADD_SOLUTION(e)),s||(e=r.parse(e)),t.Settings.make_pi_conversions&&n&&(s=(i=r.divide(e.clone(),new h(Math.PI))).multiplier,n=Math.abs(s.num),s=Math.abs(s.den),n<10&&s<10&&(e=r.multiply(i,new h("pi")))),i=e.toString(),f[i]||o.push(e),f[i]=!0))};if(e.group===v&&e.contains(n)){try{(U={})[n]=0,u(c,U,"numer"),g(new h(0))}catch(c){}return o}if(e.group===w){if((T=e.getNum()).group!==w)return C(T,n,o,l,c);var M=String(n);return T.each((function(t){t.contains(M)&&C(t,n,o,l,e)})),o}e.group===b&&"sqrt"===e.fname&&(e=r.pow(h.unwrapSQRT(e),new h(2)));var x,I=(t.Utils.isSymbol(e)?e:A.toLHS(e,!1)).getNum(),U=(x=t.Utils.variables(I)).length;if((I=t.Utils.isInt(I.power)&&0<I.power?r.parse(I).toLinear():I).group===v||I.group===w&&I.contains(n))return[new h(0)];function L(e){var t=new h(0),i=new h(0);return e.each((function(e){e.contains(n,!0)?t=r.add(t,e.clone()):i=r.subtract(i,e.clone())})),[t,i]}var _,O,R,T,P={},k=function(e){var i=(e=r.expand(e,{expand_denominator:!0,expand_functions:!0})).clone();if(e.symbols)for(var s in e.symbols){var o=e.symbols[s],u=o.getDenom();if(!u.isConstant(!0)&&e.isComposite()){var l=new h(0);return e.each((function(e){l=r.add(l,r.multiply(e,u.clone()))})),k(r.multiply(r.parse(e.multiplier),l))}var c=a(o,n),p=c[1].fname===t.Settings.SQRT,f=h.unwrapSQRT(c[1]);if(s=f.power.clone(),!m(s)&&!s.equals(.5))if(s.den.gt(1)){if(p)return e=r.subtract(e,o.clone()),e=r.add(e,r.multiply(c[0].clone(),f)),k(e);f=P[s.den],P[s.den]=f?f++:1}else{if(-1===s.sign()){var g=r.parse(n+"^"+Math.abs(s));return e.each((function(t,i){t.contains(n)&&(e.symbols[i]=r.multiply(t,g.clone()))})),P={},k(r.parse(e))}if(o.group===d&&(o=t.Utils.arrayMin(t.Utils.keys(o.symbols)))<0){g=r.parse(n+"^"+Math.abs(o));var v=new h(0);return i.each((function(e){v=r.add(v,r.multiply(e.clone(),g.clone()))}),!0),v}}}return e};if(A.inverseFunctionSolve=function(e,t,i){var s=a(t.args[0],n);if(s[1].group===v)return r.divide(r.symfunction(e,[r.divide(i,r.parse(t.multiplier))]),s[0])},(I=k(I)).equals(0))return[I];if(1===(T=t.Utils.keys(P)).length&&(_=T[0],I.each((function(e,i){var s,o;!e.contains(n)||(e=(o=(s=a(e,n))[1]).power).den.gt(1)&&(o.power=e.multiply(new t.Frac(_)),I.symbols[i]=r.multiply(o,s[0]))})),I=r.parse(I)),g(A.sqrtSolve(I,n)),1===U)if(I.isPoly(!0)){var D=new t.Algebra.Classes.Factors;if(t.Algebra.Factor.factor(I,D),1<D.getNumberSymbolics())for(var F in D.factors)g(C(D.factors[F],n));else{var B,G,V=(B=t.Utils.getCoeffs(I,n)).length-1;U=!1,x[0]===n&&(q(B,(function(e){return e.group!==t.groups.N}))&&(x=t.Algebra.proots(I),q(x,(function(e){return!t.Utils.isInt(e)}))&&(U=!0,x.map((function(e){g(new h(e))})))),U||((e=r.parse(e))instanceof t.Equation&&(e=e.toLHS()),1===V?g(r.divide(B[0],B[1].negate())):2===V?g(r.expand(A.quad.apply(void 0,B))):3===V?(o=[],G=t.Algebra.Factor.factor(e),0<(o=[]).length?g(o):g(A.cubic.apply(void 0,B))):i.proots(I).map(g)))}}else try{for(var j,H,X=I.hasTrig(),Z=A.getPoints(I,.1),z=A.getPoints(I,.05),$=A.getPoints(I,.01),Q=t.Utils.arrayUnique(Z.concat(z).concat($)).sort((function(e,t){return e-t})),Y=p(I.clone()),W=[],J=0;J<Q.length;J++)j=Q[J],void 0!==(H=A.bisection(j,Y))?g(H,X):W.push(j);Q=W;var K=s.diff(I.clone()),ee=p(K);for(J=0;J<Q.length;J++)j=Q[J],g(A.Newton(j,Y,ee),X);o.sort()}catch(c){console.log(c)}else if(!I.hasFunc(n)&&I.isComposite())try{if((G=t.Algebra.Factor.factor(I.clone())).group===w)G.each((function(e){g(C(e,n))}));else{switch(V=(B=t.Utils.getCoeffs(I,n)).length-1){case 0:var te,ne,re,ie=(te=L(I))[0],se=te[1];ie.group===t.groups.EX&&(re=`${ne=t.Settings.LOG}((${se})/(${ie.multiplier}))/${ne}(${ie.value})/${ie.power.multiplier}`,g(r.parse(re)));break;case 1:g(r.divide(B[0],B[1].negate()));break;case 2:g(A.quad.apply(void 0,B));break;case 3:g(A.cubic.apply(void 0,B));break;case 4:g(A.quartic.apply(void 0,B));break;default:g(A.csolve(I,n)),0===o.length&&g(A.divideAndConquer(I,n))}0===o.length&&g(C(G,n,o,l))}}catch(c){}else try{var oe,ae=A.rewrite(I,null,n);if(ie=ae[0],se=ae[1],ie.group===b)"abs"===ie.fname?g([se.clone(),se.negate()]):"sin"===ie.fname?g(A.inverseFunctionSolve("asin",ie,se)):"cos"===ie.fname?g(A.inverseFunctionSolve("acos",ie,se)):"tan"===ie.fname?g(A.inverseFunctionSolve("atan",ie,se)):ie.fname===t.Settings.LOG?(F=(oe=a(ie.args[0],n))[1]).group===v&&(I=new E(F,se=r.divide(r.subtract(r.pow(1<ie.args.length?ie.args[1]:new h("e"),r.divide(se,r.parse(ie.multiplier))),oe[3]),oe[0])).toLHS(),g(C(I,n))):g(r.subtract(ie,se));else{var ue=new E(ie,se).toLHS();if(ue.equals(I))throw new Error("Stopping. No stop condition exists");g(C(ue,n))}}catch(c){try{I.group===w?g(0):I.group===y&&(ie=(te=L(I))[0],se=te[1],ie.group===t.groups.EX&&ie.value===n&&(O=ie.power.clone().invert(),g(r.pow(se,O))))}catch(c){}}return _&&(o=o.map((function(e){return r.pow(e,new h(_))}))),m(e)&&(R={},o=o.filter((function(t){try{R[n]=t;var r=Number(u(e,R));return isNaN(r),!0}catch(t){return!1}}))),o};o.register([{name:"solveEquations",parent:"nerdamer",numargs:-1,visible:!0,build:function(){return C}},{name:"solve",parent:"Solve",numargs:2,visible:!0,build:function(){return t.Solve.solve}},{name:"setEquation",parent:"Solve",visible:!0,build:function(){return x}}]),o.updateAPI()}(),o=r(182),r(238),r(684),function(){"use strict";var e=o.getCore(),t=e.PARSER,n=e.Symbol,r=e.Utils.format,i=e.Utils.isVector,s=e.Utils.isArray,a=(e.Vector,e.groups.S),u=(e.groups.EX,e.groups.CP),l=e.groups.CB,c=e.groups.FN;e.Settings.Laplace_integration_depth=40,n.prototype.findFunction=function(e){if(this.group===c&&this.fname===e)return this.clone();var t;if(this.symbols)for(var n in this.symbols)if(t=this.symbols[n].findFunction(e))break;return t};var p=e.Extra={version:"1.4.2",LaPlace:{transform:function(i,s,o){i=i.clone(),s=s.toString();var u=(i=n.unwrapSQRT(i,!0)).stripVar(s),f=i.group;if((i=t.divide(i,u.clone())).isConstant()||!i.contains(s,!0))m=t.parse(r("({0})/({1})",i,o));else if(f===a&&e.Utils.isInt(i.power))var h=String(i.power),m=t.parse(r("factorial({0})/({1})^({0}+1)",h,o));else if(i.group===a&&i.power.equals(.5))m=t.parse(r("sqrt(pi)/(2*({0})^(3/2))",o));else if(i.isComposite())m=new n(0),i.each((function(e){m=t.add(m,p.LaPlace.transform(e,s,o))}),!0);else if(!i.isE()||i.power.group!==a&&i.power.group!==l)if(i.group!==c||-1===["sin","cos","sinh","cosh"].indexOf(i.fname)||i.args[0].group!==a&&i.args[0].group!==l){var g;(h=e.Settings.integration_depth<e.Settings.Laplace_integration_depth)&&(g=e.Settings.integration_depth,e.Settings.integration_depth=e.Settings.Laplace_integration_depth),e.Utils.block("PARSE2NUMBER",(function(){var r=s,a=i.sub(s,r);if(a=t.parse("e^(-"+o+"*"+r+")*"+a),(m=e.Calculus.integrate(a,r)).hasIntegral())return t.symfunction("laplace",arguments);m=m.sub(s,0),m=(m=t.expand(t.multiply(m,new n(-1)))).sub(r,s)}),!1),m=e.Utils.block("PARSE2NUMBER",(function(){return t.parse(m)}),!0),h&&(e.Settings.integration_depth=g)}else switch(v=i.args[0].stripVar(s),i.fname){case"sin":m=t.parse(r("({0})/(({1})^2+({0})^2)",v,o));break;case"cos":m=t.parse(r("({1})/(({1})^2+({0})^2)",v,o));break;case"sinh":m=t.parse(r("({0})/(({1})^2-({0})^2)",v,o));break;case"cosh":m=t.parse(r("({1})/(({1})^2-({0})^2)",v,o))}else{var v=i.power.stripVar(s);m=t.parse(r("1/(({1})-({0}))",v,o))}return t.multiply(m,u)},inverse:function(i,s,o){var c=i.clone();return e.Utils.block("POSITIVE_MULTIPLIERS",(function(){if((i=i.group===l?e.Algebra.PartFrac.partfrac(t.expand(i),s):i).group===a||i.group===l||i.isComposite()){var f,h,m,g,v,d,w,y,b,S,M,N,E,x,q,A=function(){(d=t.multiply(d,f)).multiplier=d.multiplier.multiply(i.multiplier),d=t.divide(d,g.a)},C=i.multiplier.clone();if(i.toUnitMultiplier(),f=i.getNum(),(h=i.getDenom().toUnitMultiplier()).group===u?(v=h.power.clone(),h.toLinear()):v=new e.Frac(1),m=s.toString(),g=e.Utils.decompose_fn(h,m,!0),e.Utils.decompose_fn(t.expand(f.clone()),m,!0),f.multiplier=f.multiplier.multiply(C),(h.group===a||h.group===l)&&g.x.value===m&&g.b.equals(0)&&e.Utils.isInt(g.x.power))N=g.x.power-1,E=e.Math2.factorial(N),d=t.divide(t.pow(o,new n(N)),new n(E)),A();else if(h.group===u&&v.equals(1))g.x.group===e.groups.PL&&e.Algebra.degree(h).equals(2)?(b=e.Algebra.sqComplete(h,m),S=e.Utils.getU(h),x=e.Utils.decompose_fn(b.a,m,!0).b,M=p.LaPlace.inverse(t.parse(`1/((${S})^2+(${b.c}))`),S,o),d=t.multiply(M,t.parse(`(${C})*e^(-(${x})*(${o}))`))):g.x.isLinear()&&!f.contains(m)?(o=t.divide(o,g.a.clone()),d=t.parse(r("(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))",o,g.a,g.b,v,E=0==(N=v-1)||1===N?"1":`(${v}-1)!`)),A()):g.x.group===a&&g.x.power.equals(2)&&(f.contains(m)?(x=new n(1),f.group===l&&(w=new n(1),f.each((function(e){e.contains(m)?w=t.multiply(w,e):x=t.multiply(x,e)})),f=w),b=(y=e.Utils.decompose_fn(f,m,!0)).a,S=y.b,M=b.containsFunction("sin"),N=b.containsFunction("cos"),E=S.containsFunction("cos"),A=S.containsFunction("sin"),y.x.value===m&&y.x.isLinear()&&!(M&&E||N||A)?d=t.parse(r("(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})",o,y.a,g.a,g.b)):M&&E&&(M=b.findFunction("sin"),E=S.findFunction("cos"),M.args[0].equals(E.args[0])&&!M.args[0].contains(m)&&(I=t.divide(S,E.toUnitMultiplier()).toString(),E=M.args[0].toString(),q=g.b,M=t.divide(b,M.toUnitMultiplier()),d=t.parse(r("(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))",o,x,I,E,q,M))))):d=t.parse(r("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))",o,f,g.a,g.b)));else if(g.x.power.num&&g.x.power.num.equals(3)&&g.x.power.den.equals(2)&&f.contains("sqrt(pi)")&&!f.contains(m)&&f.isLinear()){var I=t.divide(f.clone(),t.parse("sqrt(pi)"));d=t.parse(r("(2*({2})*sqrt({0}))/({1})",o,g.a,I,f))}else if(v.equals(2)&&g.x.power.equals(2))if(f.contains(m))if((y=e.Utils.decompose_fn(t.expand(f.clone()),m,!0)).x.isComposite()){var U=[],L=f.collectSymbols((function(t){t=n.unwrapPARENS(t);var r=e.Utils.decompose_fn(t,m,!0);return r.symbol=t,r})).sort((function(e,t){return e=e.x.value!==m?0:e.x.power,(t.x.value!==m?0:t.x.power)-e}));x=new n(-1);for(var _=0;_<L.length;_++){var O=L[_];O.x.value===m?U.push(O):x=t.multiply(x,O.symbol)}U[0].x.power.equals(2)&&U[1].x.power.equals(1)&&U[1].b.equals(0)&&!U[0].b.equals(0)&&(I=U[0].a.negate(),d=t.parse(r("-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2",o,x,I,U[0].b,g.a,g.b)))}else y.x.isLinear()?(x=t.divide(y.a,new n(2)),d=t.parse(r("(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))",o,x,g.a,g.b))):y.x.power.equals(2)&&(d=y.b.equals(0)?(x=t.divide(y.a,new n(2)),t.parse(r("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",o,x,g.a,g.b))):(x=t.divide(y.a,new n(2)),q=y.b.negate(),t.parse(r("-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",o,x,g.a,g.b,q))));else x=t.divide(f,new n(2)),d=t.parse(r("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))",o,x,g.a,g.b));else i.isComposite()&&(v.equals(2)&&g.x.group===a?d=t.parse(`(${C})*(${o})*e^(-(${g.b})*(${o}))`):(d=new n(0),i.each((function(e){d=t.add(d,p.LaPlace.inverse(e,s,o))}),!0)))}return d=d||t.symfunction("ilt",[c,s,o])}),!0)}},Statistics:{frequencyMap:function(e){for(var t={},n=0,r=e.length;n<r;n++){var i=e[n].toString();t[i]||(t[i]=0),t[i]++}return t},sort:function(e){return e.sort((function(e,n){return e.isConstant()&&n.isConstant()||t.error("Unable to sort! All values must be numeric"),e.multiplier.subtract(n.multiplier)}))},count:function(e){return new n(e.length)},sum:function(e,r){for(var i=new n(0),s=0,o=e.length;s<o;s++){var a=e[s].clone();i=r?t.add(t.pow(t.subtract(a,r.clone()),new n(2)),i):t.add(a,i)}return i},mean:function(){var e=[].slice.call(arguments);return i(e[0])?p.Statistics.mean.apply(this,e[0].elements):t.divide(p.Statistics.sum(e),p.Statistics.count(e))},median:function(){var n=[].slice.call(arguments);if(i(n[0]))return p.Statistics.median.apply(this,n[0].elements);try{var r,s,o=p.Statistics.sort(n),a=n.length;s=e.Utils.even(a)?(r=a/2,p.Statistics.mean(o[r-1],o[r])):o[Math.floor(a/2)]}catch(r){s=t.symfunction("median",n)}return s},mode:function(){var n=[].slice.call(arguments);if(i(n[0]))return p.Statistics.mode.apply(this,n[0].elements);var r=p.Statistics.frequencyMap(n);if(1===e.Utils.keys(r).length)c=n[0];else{var o,a={};for(o in r){var u,l=r[o];l in a?(u=a[l],s(u)?u.push(o):a[l]=[o,a[l]]):a[l]=o}n=a[Math.max.apply(null,e.Utils.keys(a))];var c=s(n)?t.symfunction("mode",n.sort()):t.parse(n)}return c},gVariance:function(e,n){var r=p.Statistics.mean.apply(p.Statistics,n);return r=p.Statistics.sum(n,r),t.multiply(e,r)},variance:function(){var e=[].slice.call(arguments);if(i(e[0]))return p.Statistics.variance.apply(this,e[0].elements);var r=t.divide(new n(1),p.Statistics.count(e));return p.Statistics.gVariance(r,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(i(e[0]))return p.Statistics.sampleVariance.apply(this,e[0].elements);var r=t.divide(new n(1),t.subtract(p.Statistics.count(e),new n(1)));return p.Statistics.gVariance(r,e)},standardDeviation:function(){var e=[].slice.call(arguments);return i(e[0])?p.Statistics.standardDeviation.apply(this,e[0].elements):t.pow(p.Statistics.variance.apply(p.Statistics,e),new n(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return i(e[0])?p.Statistics.sampleStandardDeviation.apply(this,e[0].elements):t.pow(p.Statistics.sampleVariance.apply(p.Statistics,e),new n(.5))},zScore:function(e,n,r){return t.divide(t.subtract(e,n),r)}},Units:{table:{foot:"12 inch",meter:"100 cm",decimeter:"10 cm"}}};o.register([{name:"laplace",visible:!0,numargs:3,build:function(){return p.LaPlace.transform}},{name:"ilt",visible:!0,numargs:3,build:function(){return p.LaPlace.inverse}},{name:"mean",visible:!0,numargs:-1,build:function(){return p.Statistics.mean}},{name:"median",visible:!0,numargs:-1,build:function(){return p.Statistics.median}},{name:"mode",visible:!0,numargs:-1,build:function(){return p.Statistics.mode}},{name:"smpvar",visible:!0,numargs:-1,build:function(){return p.Statistics.sampleVariance}},{name:"variance",visible:!0,numargs:-1,build:function(){return p.Statistics.variance}},{name:"smpstdev",visible:!0,numargs:-1,build:function(){return p.Statistics.sampleStandardDeviation}},{name:"stdev",visible:!0,numargs:-1,build:function(){return p.Statistics.standardDeviation}},{name:"zscore",visible:!0,numargs:3,build:function(){return p.Statistics.zScore}}]),o.updateAPI()}(),e.exports=o},182:function(e,t,n){var r;e=n.nmd(e);var i,s=function(e){"use strict";var t=new Ve,n=e.bigInt,r=e.bigDec;r.set({precision:250});var i={},o=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],a={},u={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{π:"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};!function(){u.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var r=n(e).pow(t);u.CACHE.roots[r+"-"+t]=e}}();var l=i.N=1,c=i.P=2,p=i.S=3,f=i.EX=4,h=i.FN=5,m=i.PL=6,g=i.CB=7,v=i.CP=8,d=u.CONST_HASH="#",w=u.PARENTHESIS,y=u.SQRT,b=u.ABS,S=u.FACTORIAL,M=u.DOUBLEFACTORIAL,N=[],E={},x=[],q=[],A=function(e,t){if(!u.suppress_errors)throw t?new t(e):new Error(e)},C=function(e){var t=function(t){this.name=e,this.message=void 0!==t?t:"";var n=new Error(this.message);n.name=this.name,this.stack=n.stack};return t.prototype=Object.create(Error.prototype),t},I=function(e){return-1!==x.indexOf(e)},U=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},L=function(e){q.push(e),u.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},_=function(e,t){if(t=t||"variable",-1===u.ALLOW_CHARS.indexOf(e)&&!u.VALIDATION_REGEX.test(e))throw new Ce(e+" is not a valid "+t+" name")},O=function(e){var t=Math.sign(e);if(e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)){var n=String(e).toLowerCase().split("e"),r=n.pop(),i=Math.abs(r),s=r/i,o=n[0].split(".");if(-1===s)e=(i-=o[0].length)<0?o[0].slice(0,i)+"."+o[0].slice(i)+(2===o.length?o[1]:""):"0."+new Array(i+1).join("0")+o.join("");else{var a=o[1];a&&(i-=a.length),e=i<0?o[0]+a.slice(0,i)+"."+a.slice(i):o.join("")+new Array(i+1).join("0")}}return t<0?"-"+e:e},R=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},T=function(e){return/^\d+\.?\d*$/.test(e)},P=function(e){return k(e)?P(e.multiplier.toDecimal()):e%1!=0},k=function(e){return e instanceof Ge},D=function(e){return e instanceof De},F=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},k(e)){var r=e.group,i=e.previousGroup;if(r===f&&F(e.power,t,n),r===v||r===g||i===v||i===g)for(var s in e.symbols)F(e.symbols[s],t,n);else if(r===p||i===p)"e"!==e.value&&"pi"!==e.value&&e.value!==u.IMAGINARY&&n.add(e.value);else if(r===m||i===m)F(J(e.symbols),t,n);else if(r===f)isNaN(e.value)||n.add(e.value),F(e.power,t,n);else if(r===h&&!t)for(var o=0;o<e.args.length;o++)F(e.args[o],t,n)}return n.c.sort()},B=function(e,n){e=t.expand(e),n=n||{};var r=function(e,r){n[e]||(n[e]=new Ge(0)),n[e]=t.add(n[e],r.clone())};return e.each((function(e){if(e.isConstant("all"))r("constants",e);else if(e.group===p)r(e.value,e);else if(e.group!==h||e.fname!==b&&""!==e.fname){if(e.group===f||e.group===h)throw new Error("Unable to separate. Term cannot be a function!");r(F(e).join(" "),e)}else B(e.args[0])})),n},G=function(e){return e instanceof Xe},V=function(e){return e instanceof Ze},j=function(e){return e instanceof ze},H=function(e){return e.group===l||e.group===c},X=function(e){return Array.isArray(e)},Z=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},z=function(e){return k(e)&&(e=e.multiplier),e.lessThan(0)},$=function(e){return e?String(e):e},Q=function(e){return"("+e+")"},Y=function(){var e=[].slice.call(arguments);return e.shift().replace(/{(\d+)}/g,(function(t,n){var r=e[n];return"function"==typeof r?r():r}))},W=Object.keys,J=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},K=function(e,n,r){return _(e),I(e)?null:(n=n||F(t.parse(r)),t.functions[e]=[t.mapped_function,n.length,{name:e,params:n,body:r}],r)},ee=function(e){return Math.min.apply(void 0,e)},te=function(e,n,r){var i,s,o,a;if(n=String(n),e.group===v){var u=t.expand(e.clone()).stripVar(n);i=t.subtract(e.clone(),u.clone()),a=u}else i=e.clone();return s=i.stripVar(n),o=t.divide(i.clone(),s.clone()),a=a||new Ge(0),r?{a:s,x:o,ax:i,b:a}:[s,o,i,a]},ne=function(e,t){return Z(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},re=function(e,t){if(X(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)},ie=function(e){return e%2==0},se=function(e){return 1/(e%1)%2==0},oe=function(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n},ae=function(e,t){var n=typeof t;"function"===n&&"undefined"!==n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},ue=function(e){var t=function(e){-1===x.indexOf(e)&&x.push(e)};"string"==typeof e?t(e):re(e,(function(e){t(e)}))},le=function(e,t){var n;return X(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},ce=function(e,t,n,r){var i=u[e];u[e]=void 0===n||!!n;var s=t.call(r);return u[e]=i,s},pe=function(e){return[].slice.call(e)},fe=function(e,n){return ce("PARSE2NUMBER",(function(){return t.parse(e,n)}),!0)},he=function(e){if(X(e)){for(var n=new Xe([]),r=0;r<e.length;r++)n.elements.push(he(e[r]));return n}return k(e)?e:t.parse(e)},me=function(e){for(var t=o[o.length-1]||2;t<e;t++)R(t)&&o.push(t)},ge=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==l)return!1;return!0},ve=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},de=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new Ge(0);return e.isLinear()?e.each((function(e){if(n.isComposite())n.isLinear()?n.each((function(n){var s=t.multiply(t.parse(e),t.parse(n)),o=t.expand(t.parse(s),r);i=t.add(i,o)}),!0):i=t.add(i,t.multiply(e,t.parse(n)));else{var s=t.multiply(t.parse(e),t.parse(n));i=t.add(i,t.expand(s,r))}}),!0):i=t.multiply(e,n),i},we=C("DivisionByZero"),ye=C("ParseError"),be=C("UndefinedError"),Se=C("OutOfFunctionDomainError"),Me=C("MaximumIterationsReached"),Ne=C("NerdamerTypeError"),Ee=C("ParityError"),xe=C("OperatorError"),qe=C("OutOfRangeError"),Ae=C("DimensionError"),Ce=C("InvalidVariableNameError"),Ie=C("ValueLimitExceededError"),Ue=C("NerdamerValueError"),Le=C("SolveError"),_e=C("InfiniteLoopError"),Oe=C("UnexpectedTokenError"),Re={DivisionByZero:we,ParseError:ye,OutOfFunctionDomainError:Se,UndefinedError:be,MaximumIterationsReached:Me,NerdamerTypeError:Ne,ParityError:Ee,OperatorError:xe,OutOfRangeError:qe,DimensionError:Ae,InvalidVariableNameError:Ce,ValueLimitExceededError:Ie,NerdamerValueError:Ue,SolveError:Le,InfiniteLoopError:_e,UnexpectedTokenError:Oe},Te={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),n=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return e>=0?n:-n},diff:function(e){var t=.001;return function(n){return(e(n+t)-e(n-t))/(2*t)}},median:function(...e){e.sort((function(e,t){return e-t}));var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n,r,i=Math.sign(e),s=Math.abs(e),o=Math.floor(s),a=s-o,u=0,l=!1,c={whole:o,sign:i,fractions:[]};!l&&0!==a&&(n=1/a,!((r=Math.floor(n))>1e7&&Te.fromContinued(c)-e<=Number.EPSILON));)c.fractions.push(r),((a=n-r)<=1e-14||u>=t-1)&&(l=!0),u++;var p=c.fractions.length-1;return 1===c.fractions[p]&&(c.fractions.pop(),c.fractions[--p]++),c},bigpow:function(e,t){e instanceof Be||(e=Be.create(e)),t instanceof Be||(t=Be.create(t));var n=new Be(0);if(t.isInteger())n.num=e.num.pow(t.toString()),n.den=e.den.pow(t.toString());else{var r=Be.create(Math.pow(e.num,t.num)),i=Be.create(Math.pow(e.den,t.num));n.num=Te.nthroot(r,t.den.toString()),n.den=Te.nthroot(i,t.den)}return n},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Te.gamma(1-e));e-=1;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new n(1),r=2;r<=e;r++)t=t.times(r);return new Be(t)},bigLog:function(e){var t=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(t[e])return Be.quick.apply(null,t[e].split("/"));e=new Be(e);for(var n=new Be(0),r=e.subtract(new Be(1)),i=e.add(new Be(1)),s=0;s<80;s++){var o=new Be(2*s+1),a=Te.bigpow(r.divide(i),o),u=o.clone().invert().multiply(a);n=n.add(u)}return n.multiply(new Be(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Te.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(Z(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new Be(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new Be(2).multiply(new Be(i)));else for(i=1;i<=n;i++)r=r.multiply(new Be(2).multiply(new Be(i)).subtract(new Be(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Te.gamma(1+e/2);return r},GCD:function(){for(var e=oe([].slice.call(arguments).map((function(e){return Math.abs(e)}))).sort(),t=Math.abs(e.shift()),n=e.length;n-- >0;)for(var r=Math.abs(e.shift());;){if(0==(t%=r)){t=r;break}if(0==(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1;t=r.gcd(t),i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Te.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n=Te.ifactor(e),r=new Ge;for(var i in r.symbols={},r.group=g,n){var s=new Ge(1);s.group=c,s.value=i,s.power=new Ge(n[i]),r.symbols[i]=s}return r.updateHash(),1===e&&(r=new Ge(e)),t<0&&r.negate(),r},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));n>o[o.length-1]&&e<1e6&&me(n);for(var r=o.length,i=0;i<r;i++)for(var s=o[i];e%s==0;)e/=s,t[s]=(t[s]||0)+1;return e>1&&(t[e]=1),t},ifactor:function(e){var t=new n(e);if("0"===(e=String(e)))return{0:1};var r=(e=new n(e)).sign?-1:1;e=e.abs();var i={};if(e.lt("65536"))i=Te.sfactor(e,i);else{var s=function(e){e.isPrime()?i[e]=(i[e]||0)+1:i=Te.sfactor(e,i)};try{for(var o=0;!e.abs().equals(1);){if(e.isPrime()){s(e);break}{function l(t){for(var r=new n(t),i=2,s=new n(t),a=new n(1);a.equals(1);){for(var u=0;u<=i&&a.equals(1);u++){if(o++>1e3)throw new Error("stopping");s=s.pow(2).add(1).mod(e),a=n.gcd(s.minus(r).abs(),e)}i*=2,r=s}return a.equals(e)?l(t+1):a}var a=l(2);s(a),e=e.divide(a)}}}catch(c){i={},s(t)}}if(-1===r){var u=ee(W(i));i["-"+u]=i[u],delete i[u]}return i},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=++s>t}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e),t=ie(e)?t:Math.abs(t);for(var n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){var i=function(e,t,n){var r=e(t);return isNaN(r)&&(r=e(1===n?t+1e-12:t-1e-12)),r};r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(e,t,n,r,i){if(i<0)throw new Error("max depth cannot be negative");function s(e,t,n,r,i,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var f,h,m,g,v,d,w,y,b,S;if(h=e(t+.25*(f=n-t)),m=e(n-.25*f),isNaN(h))p.nanEncountered=!0;else if(isNaN(m))p.nanEncountered=!0;else if(S=((d=(g=f*(r+4*h+i)/12)+(v=f*(i+4*m+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return c>l?(p.maxDepthCount++,d+S):Math.abs(S)<u?d+S:(y=s(e,t,w=t+.5*f,r,h,i,g,.5*u,l,c+1,p),isNaN(y)?(p.nanEncountered=!0,NaN):(b=s(e,w,n,i,m,o,v,.5*u,l,c+1,p),isNaN(b)?(p.nanEncountered=!0,NaN):y+b))}var o;try{o=function(e,t,n,r,i){var o={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var a=e(t),u=e(.5*(t+n)),l=e(n),c=s(e,t,n,a,u,l,(a+4*u+l)*(n-t)/6,r,i,1,o);if(o.maxDepthCount>0&&L("integrate-adaptive-simpson: Warning: maximum recursion depth ("+i+") reached "+o.maxDepthCount+" times"),o.nanEncountered)throw new Error("Function does not converge over interval!");return c}(e,t,n,r,i)}catch(r){return Te.simpson(e,t,n)}return ne(o,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Te.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r+1)/((r+1)*Te.factorial(r+1))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Te.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Te.factorial(t));return r},Chi:function(e){var t;return t=function(e){return(Math.cosh(e)-1)/e},Math.log(e)+.5772156649015329+Te.num_integrate(t,.002,e,.001)},Li:function(e){return Te.Ei(Te.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,i=(t=t||0,0);i<n;i++)r+=Math.pow(t,i)/Te.factorial(i);return Te.factorial(n)*Math.exp(-t)*r},step:function(e){return e>0?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:e>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return(e=Math.abs(e))>=1?0:1-e},nthroot:function(e,t){if(e instanceof Be||(e=new Be(e.toString())),t instanceof Be||(t=new Be(t.toString())),t.equals(1))return e;var n,r,i,s=e.divide(new Be(2)),o=new Be(1e-15),a=t.clone().invert(),u=t.subtract(new Be(1));do{var l=Te.bigpow(s,u),c=a.multiply(e.divide(l).subtract(s)).toDecimal(25);if(n=Be.create(c),i)break;s=s.add(n),c=n.toDecimal(),i=!!r&&r===c,r=c}while(n.abs().gte(o));return s},sqrt:function(e){var t,n,r,i;e instanceof Be||(e=new Be(e));var s=0,o=!1,a=new Be(1e-20);t=e.divide(new Be(2));do{if(s>1e3)throw new Error("Unable to calculate square root for "+e);t=t.add(e.divide(t)).divide(new Be(2)),t=new Be(t.decimal(30)),n=e.subtract(t.multiply(t)),i=!!r&&r.equals(n),(n.clone().abs().lessThan(a)||i)&&(o=!0),r=n,s++}while(!o);return t}};function Pe(e,t,r,i){var s="hash"===t,o=void 0,d=s?void 0:t,y="decimal"===d||"decimals"===d;function b(e){switch(t){case"decimals":case"decimal":return o=o||function(e){return!1},e.valueOf();case"recurring":o=o||function(e){return-1!==e.indexOf("'")};var r=e.toString();if(0===(v=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;var i=v[0].split("/"),s=!1,a=Number(i[0]);a<0&&(a=-a,s=!0);var l=Number(i[1]);l||(l=1);var c=10*(a-(b=Math.floor(a/l))*l);for(b=b.toString()+".";c&&c<l;)c*=10,b+="0";for(var p="",f=[],h=0;;){if(void 0!==f[c])return(s?"-":"")+(b+p.slice(0,f[c])+"'"+p.slice(f[c])+"'").replace("'0'","").replace(/\.$/,"");var m=Math.floor(c/l),g=c-m*l;f[c]=h,p+=m.toString(),h+=1,c=10*g}case"mixed":var v;if(o=o||function(e){return-1!==e.indexOf("/")},r=e.toString(),0===(v=/^-?\d+(?:\/\d+)?$/.exec(r)).length)return r;i=v[0].split("/");var d=new n(i[0]),w=new n(i[1]);w.equals(0)&&(w=new n(1));var y=d.divmod(w),b=y.quotient,S=y.remainder,M="-"===i[0][0]||b.equals(0)||S.equals(0)?"":"+";return(b.equals(0)?"":b.toString())+M+(S.equals(0)?"":S.toString()+"/"+i[1]);case"scientific":return o=o||function(e){return!1},new Fe(e.valueOf()).toString(u.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return o=o||function(e){return-1!==e.indexOf("/")},e.toString()}}if(y&&void 0===i&&(i=u.DEFAULT_DECP),k(e)){var S="",M="",N="",E=e.group||r,x=e.value;if(!s){var q=b(e.multiplier);"-1"==q&&"-1"===String(e.multiplier)&&(N="-",q="1"),"1"!=q&&(S=q);var A=e.power?b(e.power):"";"1"!=A&&(M=k(A)?Pe(A,d):A)}switch(E){case l:S="";var C=i&&y?e.multiplier.toDecimal(i):b(e.multiplier);x="-1"==String(e.multiplier)?"1":C,M="";break;case m:x=e.collectSymbols().map((function(e){var t=Pe(e,d,r,i);return"0"==t&&(t=""),t})).sort().join("+").replace(/\+\-/g,"-");break;case v:x=e.collectSymbols().map((function(e){var t=Pe(e,d,r,i);return"0"==t&&(t=""),t})).sort().join("+").replace(/\+\-/g,"-");break;case g:x=e.collectSymbols((function(e){var t=e.group;return(t===m||t===v)&&e.power.equals(1)&&e.multiplier.equals(1)?Q(Pe(e,d)):Pe(e,d)})).join("*");break;case f:var I=e.previousGroup,U=e.power.group;I===m&&(x=e.collectSymbols(Pe,d).join("+").replace("+-","-")),I===l||I===p||I===h||s||(x=Q(x)),U!==v&&U!==g&&U!==m&&"1"==e.power.multiplier.toString()||!M||(M=Q(M))}if(E===h&&(x=e.fname+Q(e.args.map((function(e){return Pe(e,d)})).join(","))),E===h&&e.fname in a){var L=Pe(e.args[0]),_=Pe(e.args[1]);e.args[0].isComposite()&&(L=Q(L)),e.args[1].isComposite()&&(_=Q(_)),x=L+a[e.fname]+_}M&&E!==f&&o(M)&&(M=Q(M)),((E===v||E===m)&&(S&&"1"!=S||"-"===N)||(E===g||E===v||E===m)&&M&&"1"!=M||!s&&E===c&&-1==x||e.fname===w)&&(x=Q(x)),i&&("decimal"===t||"decimals"===t&&S)&&(S=ne(S,i));var O=N+S;if(S&&o(S)&&(O=Q(O)),M<0&&(M=Q(M)),S&&(O+="*"),M){if("e"===x&&u.E_TO_EXP)return O+"exp"+Q(M);M=u.POWER_OPERATOR+M}E===f&&"-"===x.charAt(0)&&(x=Q(x));var R=O+x;return e.parens&&(R=Q(R)),R+M}if(G(e)){for(var T=e.elements.length,P=(O=[],0);P<T;P++)O.push(e.elements[P].text(t));return"["+O.join(",")+"]"}try{return e.toString()}catch(e){return""}}function ke(e){if(R(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,s=Math.floor(i);if(i-s<=2220446049250313e-31&&n>1){if(R(n)&&(-1===o.indexOf(n)&&o.push(n),r.push(n)),R(s)){r.push(s);break}t=s}n++}return r.sort((function(e,t){return e-t}))}function De(e){this.symbol=e}function Fe(e){return this instanceof Fe?((e=String(void 0===e?0:e)).startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,Fe.isScientific(e)?this.fromScientific(e):this.convert(e),this):new Fe(e)}function Be(e){if(e instanceof Be)return e;if(void 0===e)return this;try{if(Z(e))try{this.num=n(e),this.den=n(1)}catch(t){return Be.simple(e)}else{var t=e instanceof r?je.quickConversion(e):je.convert(e);this.num=new n(t[0]),this.den=new n(t[1])}}catch(t){return Be.simple(e)}}function Ge(e){var t="Infinity"===e;return this instanceof Ge?(e instanceof r&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof r?(this.group=l,this.value=d,this.multiplier=new Be(e)):(this.group=p,_(e),this.value=e,this.multiplier=new Be(1),this.imaginary=e===u.IMAGINARY,this.isInfinity=t),this.power=new Be(1),this):new Ge(e)}function Ve(){var e=this,t={},n={names:[],actions:[]};function i(e,t){this.start=e,this.end=t}function s(){this.elements=[]}function o(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===o.OPERATOR){var r=q[e];for(var i in r)this[i]=r[i]}else t===o.FUNCTION&&(this.precedence=o.MAX_PRECEDENCE,this.leftAssoc=!1)}i.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},i.prototype.text=function(){return Pe(this.start)+":"+Pe(this.end)},s.prototype.append=function(e){this.elements.push(e)},s.prototype.getItems=function(){return this.elements},s.prototype.toString=function(){return e.pretty_print(this.elements)},s.create=function(e){var t=new s;return e&&t.append(e),t},o.prototype.toString=function(){return this.value},o.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},o.OPERATOR="OPERATOR",o.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",o.FUNCTION="FUNCTION",o.UNIT="UNIT",o.KEYWORD="KEYWORD",o.MAX_PRECEDENCE=999,this.classes={Collection:s,Slice:i,Token:o};var a={prec:void 0,cos:function(t,n){var r,i;return r=e.parse(Math.cos(t)*Math.cosh(n)),i=e.parse(Math.sin(t)*Math.sinh(n)),e.subtract(r,e.multiply(i,Ge.imaginary()))},sin:function(t,n){var r,i;return r=e.parse(Math.sin(t)*Math.cosh(n)),i=e.parse(Math.cos(t)*Math.sinh(n)),e.subtract(r,e.multiply(i,Ge.imaginary()))},tan:function(t,n){var r,i;return r=e.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*n))),i=e.parse(Math.sinh(2*n)/(Math.cos(2*t)+Math.cosh(2*n))),e.add(r,e.multiply(i,Ge.imaginary()))},sec:function(t,n){var r=this.removeDen(this.cos(t,n));return e.subtract(r[0],e.multiply(r[1],Ge.imaginary()))},csc:function(t,n){var r=this.removeDen(this.sin(t,n));return e.add(r[0],e.multiply(r[1],Ge.imaginary()))},cot:function(t,n){var r=this.removeDen(this.tan(t,n));return e.subtract(r[0],e.multiply(r[1],Ge.imaginary()))},acos:function(t,n){var r,i,s,o,a;return r=this.fromArray([t,n]),a=e.pow(r.clone(),new Ge(2)),i=e.expand(a),s=e.multiply(Q(e.subtract(new Ge(1),i)),Ge.imaginary()),o=Ne(e.expand(e.add(r.clone(),s))),e.expand(e.multiply(Ge.imaginary().negate(),o))},asin:function(t,n){return e.subtract(e.parse("pi/2"),this.acos(t,n))},atan:function(t,n){return t.equals(0)&&(n.equals(1)||n.equals(-1))?e.parse(`${Ge.infinity()}*${u.IMAGINARY}*${n}`):(o=a.fromArray([t,n]),r=e.expand(e.multiply(Ge.imaginary(),o.clone())),i=Ne(e.expand(e.subtract(new Ge(1),r.clone()))),s=Ne(e.expand(e.add(new Ge(1),r.clone()))),e.expand(e.multiply(e.divide(Ge.imaginary(),new Ge(2)),e.subtract(i,s))));var r,i,s,o},asec:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.acos.apply(this,n)},acsc:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.asin.apply(this,n)},acot:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.atan.apply(this,n)},cosh:function(t,n){var r,i;return r=e.parse(Math.cosh(t)*Math.cos(n)),i=e.parse(Math.sinh(t)*Math.sin(n)),e.add(r,e.multiply(i,Ge.imaginary()))},sinh:function(t,n){var r,i;return r=e.parse(Math.sinh(t)*Math.cos(n)),i=e.parse(Math.cosh(t)*Math.sin(n)),e.add(r,e.multiply(i,Ge.imaginary()))},tanh:function(t,n){var r,i;return r=e.parse(Math.sinh(2*t)/(Math.cos(2*n)+Math.cosh(2*t))),i=e.parse(Math.sin(2*n)/(Math.cos(2*n)+Math.cosh(2*t))),e.subtract(r,e.multiply(i,Ge.imaginary()))},sech:function(t,n){var r=this.removeDen(this.cosh(t,n));return e.subtract(r[0],e.multiply(r[1],Ge.imaginary()))},csch:function(t,n){var r=this.removeDen(this.sinh(t,n));return e.subtract(r[0],e.multiply(r[1],Ge.imaginary()))},coth:function(t,n){var r=this.removeDen(this.tanh(t,n));return e.add(r[0],e.multiply(r[1],Ge.imaginary()))},acosh:function(t,n){var r,i,s;return s=this.fromArray([t,n]),r=Q(e.add(s.clone(),new Ge(1))),i=Q(e.subtract(s.clone(),new Ge(1))),e.expand(Ne(e.add(s,e.expand(e.multiply(r,i)))))},asinh:function(t,n){var r,i;return i=this.fromArray([t,n]),r=Q(e.add(new Ge(1),e.expand(e.pow(i.clone(),new Ge(2))))),e.expand(Ne(e.add(i,r)))},atanh:function(t,n){var r,i,s;return s=this.fromArray([t,n]),r=Ne(e.add(s.clone(),new Ge(1))),i=Ne(e.subtract(new Ge(1),s)),e.expand(e.divide(e.subtract(r,i),new Ge(2)))},asech:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.acosh.apply(this,n)},acsch:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.asinh.apply(this,n)},acoth:function(e,t){var n=this.removeDen([e,t]);return n[1].negate(),this.atanh.apply(this,n)},sqrt:function(t){var n,r,i,s,o;return n=t.realpart(),r=t.imagpart(),i=Ge.hyp(n,r),s=e.add(n.clone(),i),o=Q(e.multiply(new Ge(2),s.clone())),e.add(e.divide(s.clone(),o.clone()),e.multiply(e.divide(r,o),Ge.imaginary()))},log:function(t,n){var i,s,o;return i=Ne(Ge.hyp(t,n)),o=u.USE_BIG?Ge(r.atan2(n.multiplier.toDecimal(),t.multiplier.toDecimal())):Math.atan2(n,t),s=e.parse(o),e.add(i,e.multiply(Ge.imaginary(),s))},erf:(t,n)=>e.symfunction("erf",[t]),removeDen:function(t){var n,r,i;return X(t)?(r=t[0],i=t[1]):(r=t.realpart(),i=t.imagpart()),n=Math.pow(r,2)+Math.pow(i,2),[e.parse(r/n),e.parse(i/n)]},fromArray:function(t){return e.add(t[0],e.multiply(Ge.imaginary(),t[1]))},evaluate:function(t,n){var r,i,s;if(s=t.power.sign(),t.power=t.power.abs(),t.power.greaterThan(1)&&(t=e.expand(t)),s<0){var o=this.removeDen(t);r=o[0],i=o[1]}else r=t.realpart(),i=t.imagpart();return r.isConstant("all")&&i.isConstant("all")?this[n].call(this,r,i):e.symfunction(n,[t])}},d=this.trig={cos:function(t){if(t.equals("pi")&&t.multiplier.den.equals(2))return new Ge(0);if(u.PARSE2NUMBER){if(t.equals(new Ge(u.PI/2)))return new Ge(0);if(t.isConstant())return u.USE_BIG?new Ge(r.cos(t.multiplier.toDecimal())):new Ge(Math.cos(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cos")}if(t.equals(0))return new Ge(1);var n,i=!1,s=Ie(t.multiplier.toDecimal()),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear())if(Z(o))n=new Ge(ie(o)?1:-1);else{Number(o.num);var l=Number(o.den);2===l?n=new Ge(0):3===l?(n=e.parse("1/2"),i=!0):4===l?(n=e.parse("1/sqrt(2)"),i=!0):6===l?(n=e.parse("sqrt(3)/2"),i=!0):n=e.symfunction("cos",[t])}return!i||2!==s&&3!==s||n.negate(),n||(n=e.symfunction("cos",[t])),n},sin:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return t%Math.PI==0?new Ge(0):u.USE_BIG?new Ge(r.sin(t.multiplier.toDecimal())):new Ge(Math.sin(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sin")}if(t.equals(0))return new Ge(0);var n,i=!1,s=Ie(t.multiplier.toDecimal()),o=t.multiplier.sign(),l=t.multiplier.abs();if(t.multiplier=l,t.equals("pi"))n=new Ge(0);else if(t.isPi()&&t.isLinear())if(Z(l))n=new Ge(0);else{l.num;var c=l.den;2==c?(n=new Ge(1),i=!0):3==c?(n=e.parse("sqrt(3)/2"),i=!0):4==c?(n=e.parse("1/sqrt(2)"),i=!0):6==c?(n=e.parse("1/2"),i=!0):n=e.multiply(new Ge(o),e.symfunction("sin",[t]))}return n||(n=e.multiply(new Ge(o),e.symfunction("sin",[t]))),!i||3!==s&&4!==s||n.negate(),n},tan:function(t){if(u.PARSE2NUMBER){if(t%Math.PI==0&&t.isLinear())return new Ge(0);if(t.isConstant())return u.USE_BIG?new Ge(r.tan(t.multiplier.toDecimal())):new Ge(Math.tan(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tan")}var n,i=!1,s=Ie(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear())if(Z(o))n=new Ge(0);else{o.num;var l=o.den;if(2==l)throw new be("tan is undefined for "+t.toString());3==l?(n=e.parse("sqrt(3)"),i=!0):4==l?(n=new Ge(1),i=!0):6==l?(n=e.parse("1/sqrt(3)"),i=!0):n=e.symfunction("tan",[t])}return n||(n=e.symfunction("tan",[t])),!i||2!==s&&4!==s||n.negate(),n},sec:function(t){if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Ge(new r(1).dividedBy(r.cos(t.multiplier.toDecimal()))):new Ge(Te.sec(t.valueOf())):t.isImaginary()?a.evaluate(t,"sec"):e.parse(Y("1/cos({0})",t));var n,i=!1,s=Ie(t.multiplier.toDecimal()),o=t.multiplier.abs();if(t.multiplier=o,t.isPi()&&t.isLinear())if(Z(o))n=new Ge(ie(o)?1:-1);else{o.num;var l=o.den;if(2==l)throw new be("sec is undefined for "+t.toString());3==l?(n=new Ge(2),i=!0):4==l?(n=e.parse("sqrt(2)"),i=!0):6==l?(n=e.parse("2/sqrt(3)"),i=!0):n=e.symfunction("sec",[t])}return!i||2!==s&&3!==s||n.negate(),n||(n=e.symfunction("sec",[t])),n},csc:function(t){if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Ge(new r(1).dividedBy(r.sin(t.multiplier.toDecimal()))):new Ge(Te.csc(t.valueOf())):t.isImaginary()?a.evaluate(t,"csc"):e.parse(Y("1/sin({0})",t));var n,i=!1,s=Ie(t.multiplier.toDecimal()),o=t.multiplier.sign(),l=t.multiplier.abs();if(t.multiplier=l,t.isPi()&&t.isLinear()){if(Z(l))throw new be("csc is undefined for "+t.toString());l.num;var c=l.den;2==c?(n=new Ge(1),i=!0):3==c?(n=e.parse("2/sqrt(3)"),i=!0):4==c?(n=e.parse("sqrt(2)"),i=!0):6==c?(n=new Ge(2),i=!0):n=e.multiply(new Ge(o),e.symfunction("csc",[t]))}return n||(n=e.multiply(new Ge(o),e.symfunction("csc",[t]))),!i||3!==s&&4!==s||n.negate(),n},cot:function(t){if(u.PARSE2NUMBER)return t%(Math.PI/2)==0?new Ge(0):t.isConstant()?u.USE_BIG?new Ge(new r(1).dividedBy(r.tan(t.multiplier.toDecimal()))):new Ge(Te.cot(t.valueOf())):t.isImaginary()?a.evaluate(t,"cot"):e.parse(Y("1/tan({0})",t));var n,i=!1,s=Ie(t.multiplier.toDecimal()),o=t.multiplier;if(t.multiplier=o,t.isPi()&&t.isLinear()){if(Z(o))throw new be("cot is undefined for "+t.toString());o.num;var l=o.den;2==l?n=new Ge(0):3==l?(n=e.parse("1/sqrt(3)"),i=!0):4==l?(n=new Ge(1),i=!0):6==l?(n=e.parse("sqrt(3)"),i=!0):n=e.symfunction("cot",[t])}return n||(n=e.symfunction("cot",[t])),!i||2!==s&&4!==s||n.negate(),n},acos:function(t){if(u.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=t.toString();return _e(fe(`pi/2-asin(${n})`))}return u.USE_BIG?new Ge(r.acos(t.multiplier.toDecimal())):new Ge(Math.acos(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"acos")}return e.symfunction("acos",arguments)},asin:function(t){if(u.PARSE2NUMBER){if(t.isConstant()){if(t.gt(1)||t.lt(-1)){var n=u.IMAGINARY,i=t.multiplier.toDecimal();return _e(fe(`${n}*log(sqrt(1-${i}^2)-${n}*${i})`))}return u.USE_BIG?new Ge(r.asin(t.multiplier.toDecimal())):new Ge(Math.asin(t.valueOf()))}if(t.isImaginary())return a.evaluate(t,"asin")}return e.symfunction("asin",arguments)},atan:function(t){var n;if(t.equals(0))n=new Ge(0);else{if(u.PARSE2NUMBER)return t.isConstant()?u.USE_BIG?new Ge(r.atan(t.multiplier.toDecimal())):new Ge(Math.atan(t.valueOf())):t.isImaginary()?a.evaluate(t,"atan"):e.symfunction("atan",arguments);n=t.equals(-1)?e.parse("-pi/4"):e.symfunction("atan",arguments)}return n},asec:function(t){if(u.PARSE2NUMBER){if(t.equals(0))throw new Se("Input is out of the domain of sec!");if(t.isConstant())return d.acos(t.invert());if(t.isImaginary())return a.evaluate(t,"asec")}return e.symfunction("asec",arguments)},acsc:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return d.asin(t.invert());if(t.isImaginary())return a.evaluate(t,"acsc")}return e.symfunction("acsc",arguments)},acot:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new e.add(e.parse("pi/2"),d.atan(t).negate());if(t.isImaginary())return a.evaluate(t,"acot")}return e.symfunction("acot",arguments)},atan2:function(t,n){if(t.equals(0)&&n.equals(0))throw new be("atan2 is undefined for 0, 0");return u.PARSE2NUMBER&&t.isConstant()&&n.isConstant()?new Ge(Math.atan2(t,n)):e.symfunction("atan2",arguments)}},N=this.trigh={cosh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Ge(Math.cosh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Ge(Math.sinh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(t){if(u.PARSE2NUMBER){if(t.isConstant())return new Ge(Math.tanh(t.valueOf()));if(t.isImaginary())return a.evaluate(t,"tanh")}return e.symfunction("tanh",arguments)},sech:function(t){return u.PARSE2NUMBER?t.isConstant()?new Ge(Math.sech(t.valueOf())):t.isImaginary()?a.evaluate(t,"sech"):e.parse(Y("1/cosh({0})",t)):e.symfunction("sech",arguments)},csch:function(t){return u.PARSE2NUMBER?t.isConstant()?new Ge(Math.csch(t.valueOf())):t.isImaginary()?a.evaluate(t,"csch"):e.parse(Y("1/sinh({0})",t)):e.symfunction("csch",arguments)},coth:function(t){return u.PARSE2NUMBER?t.isConstant()?new Ge(Math.coth(t.valueOf())):t.isImaginary()?a.evaluate(t,"coth"):e.parse(Y("1/tanh({0})",t)):e.symfunction("coth",arguments)},acosh:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acosh"):u.PARSE2NUMBER?fe(e.parse(Y(u.LOG+"(({0})+sqrt(({0})^2-1))",t.toString()))):e.symfunction("acosh",arguments)},asinh:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asinh"):u.PARSE2NUMBER?fe(e.parse(Y(u.LOG+"(({0})+sqrt(({0})^2+1))",t.toString()))):e.symfunction("asinh",arguments)},atanh:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"atanh"):u.PARSE2NUMBER?fe(e.parse(Y("(1/2)*"+u.LOG+"((1+({0}))/(1-({0})))",t.toString()))):e.symfunction("atanh",arguments)},asech:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"asech"):u.PARSE2NUMBER?fe(Ne(e.add(t.clone().invert(),Q(e.subtract(e.pow(t,new Ge(-2)),new Ge(1)))))):e.symfunction("asech",arguments)},acsch:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acsch"):u.PARSE2NUMBER?fe(e.parse(Y(u.LOG+"((1+sqrt(1+({0})^2))/({0}))",t.toString()))):e.symfunction("acsch",arguments)},acoth:function(t){return u.PARSE2NUMBER&&t.isImaginary()?a.evaluate(t,"acoth"):u.PARSE2NUMBER?t.equals(1)?Ge.infinity():fe(e.divide(Ne(e.divide(e.add(t.clone(),new Ge(1)),e.subtract(t.clone(),new Ge(1)))),new Ge(2))):e.symfunction("acoth",arguments)}};this.units={};var x,q={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(t){return e.symfunction(u.DOUBLEFACTORIAL,[t])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return F(e)}},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(t){return e.divide(t,new Ge(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},C={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},I=this.functions={cos:[d.cos,1],sin:[d.sin,1],tan:[d.tan,1],sec:[d.sec,1],csc:[d.csc,1],cot:[d.cot,1],acos:[d.acos,1],asin:[d.asin,1],atan:[d.atan,1],arccos:[d.acos,1],arcsin:[d.asin,1],arctan:[d.atan,1],asec:[d.asec,1],acsc:[d.acsc,1],acot:[d.acot,1],atan2:[d.atan2,2],acoth:[N.acoth,1],asech:[N.asech,1],acsch:[N.acsch,1],sinh:[N.sinh,1],cosh:[N.cosh,1],tanh:[N.tanh,1],asinh:[N.asinh,1],sech:[N.sech,1],csch:[N.csch,1],coth:[N.coth,1],acosh:[N.acosh,1],atanh:[N.atanh,1],log10:[,1],exp:[function(t){return t.fname===u.LOG&&t.isLinear()?e.pow(t.args[0],Ge.create(t.multiplier)):e.parse(Y("e^({0})",t))},1],radians:[function(t){return e.parse(Y("({0})*pi/180",t))},1],degrees:[function(t){return e.parse(Y("({0})*180/pi",t))},1],min:[function(){var t=[].slice.call(arguments);return U(t)?t[0]:ge(t)?new Ge(Math.min.apply(null,t)):u.SYMBOLIC_MIN_MAX&&ve(t)?Me("min",t):e.symfunction("min",t)},-1],max:[function(){var t=[].slice.call(arguments);return U(t)?t[0]:ge(t)?new Ge(Math.max.apply(null,t)):u.SYMBOLIC_MIN_MAX&&ve(t)?Me("max",t):e.symfunction("max",t)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(t){return u.PARSE2NUMBER?t.isConstant()?new Ge(Te.sinc(t)):e.parse(Y("sin({0})/({0})",t)):e.symfunction("sinc",[t])},1],tri:[,1],sign:[function(t){return t.isConstant(!0)?new Ge(Math.sign(fe(t))):e.symfunction("sign",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[F,1],factorial:[F,1],continued_fraction:[function(t,n){var r=fe(t);if(r.isConstant()){var i=Te.continuedFraction(r,n),s=Xe.fromArray(i.fractions.map((function(e){return new Ge(e)})));return Xe.fromArray([new Ge(i.sign),new Ge(i.whole),s])}return e.symfunction("continued_fraction",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Ce,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[B,2],pfactor:[re,1],vector:[function(){return new Xe([].slice.call(arguments))},-1],matrix:[function(){return Ze.fromArray(arguments)},-1],Set:[function(){return ze.fromArray(arguments)},-1],imatrix:[function(e){return Ze.identity(e)},-1],parens:[function(t){return u.PARSE2NUMBER?t:e.symfunction("parens",[t])},-1],sqrt:[Q,1],cbrt:[W,1],nthroot:[ee,2],log:[Ne,[1,2]],expand:[function(e,t){return _e(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[D,1],invert:[function(e){if(V(e))return e.invert();A("invert expects a matrix")},1],determinant:[function(e){return V(e)?e.determinant():e},1],size:[function(e){var t;return V(e)?t=[new Ge(e.cols()),new Ge(e.rows())]:G(e)||j(e)?t=new Ge(e.elements.length):A("size expects a matrix or a vector"),t},1],transpose:[function(e){if(V(e))return e.transpose();A("function transpose expects a matrix")},1],dot:[function(e,t){if(G(e)&&G(t))return e.dot(t);A("function dot expects 2 vectors")},2],cross:[function(e,t){if(G(e)&&G(t))return e.cross(t);A("function cross expects 2 vectors")},2],vecget:[function(t,n){return n.isConstant()&&Z(n)?t.elements[n]:e.symfunction("vecget",arguments)},2],vecset:[function(t,n,r){return n.isConstant?(t.elements[n]=r,t):e.symfunction("vecset",arguments)},3],vectrim:[function(t,n){return n=void 0===n?1e-14:n,t=t.clone(),n=Number(n),t.elements.sort((function(e,t){return t.group-e.group})),t.elements=ae(t.elements,(function(t,r){return Number(e.subtract(fe(t),fe(r)).abs())<=n})),t},[1,2]],matget:[function(t,n,r){return n.isConstant()&&r.isConstant()?t.elements[n][r]:e.symfunction("matget",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(t,n){return n.isConstant()?new Ze(t.elements[n]):e.symfunction("matgetrow",arguments)},2],matsetrow:[function(t,n,r){if(!n.isConstant())return e.symfunction("matsetrow",arguments);if(t.elements[n].length!==r.elements.length)throw new Ae("Matrix row must match row dimensions!");var i=t.clone();return i.elements[n]=r.clone().elements,i},3],matgetcol:[function(t,n){if(!n.isConstant())return e.symfunction("matgetcol",arguments);n=Number(n);var r=Ze.fromArray([]);return t.each((function(e,t,i){i===n&&r.elements.push([e.clone()])})),r},2],matsetcol:[function(t,n,r){if(!n.isConstant())return e.symfunction("matsetcol",arguments);if(n=Number(n),t.rows()!==r.elements.length)throw new Ae("Matrix columns must match number of columns!");return r.each((function(e,r){t.set(r-1,n,e.elements[0].clone())})),t},3],rationalize:[z,1],IF:[function(e,t,n){return"boolean"!=typeof e&&H(e)&&(e=!!Number(e)),e?t:n},3],is_in:[function(e,t){if(V(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new Ge(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new Ge(1);return new Ge(0)},2],realpart:[oe,1],imagpart:[ue,1],conjugate:[he,1],arg:[me,1],polarform:[function(t){var n,r,i,s;return s=(n=Ge.toPolarFormArray(t))[1],r=n[0],i=e.parse(Y("e^({0}*({1}))",u.IMAGINARY,s)),e.multiply(r,i)},1],rectform:[function(t){var n=t.clone();try{var r,i,s,o,a;return r=te(t,"e",!0),i=e.divide(r.x.power,Ge.imaginary()),s=fe(d.tan(i)),e.pow(r.a,new Ge(2)),o=s.getDenom(!0),a=s.getNum(),Ge.hyp(a,o).equals(r.a)?e.add(o,e.multiply(Ge.imaginary(),a)):n}catch(e){return n}},1],sort:[function(e,t){t=t?t.toString():"asc";var n=function(e){return e.group===l?e.multiplier:e.group===h?""===e.fname?n(e.args[0]):e.fname:e.group===p?e.power:e.value};return new Xe((G(e)?e.elements:e.collectSymbols()).sort((function(e,r){var i=n(e),s=n(r);return"desc"===t?s-i:i-s})))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new Ge(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new Ge(Number(e.is_subset(t)))},2],print:[function(){pe(arguments).map((function(e){console.log(e.toString())}))},-1]};function _(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.error=A,this.override=function(e,n){t[e]||(t[e]=[]),t[e].push(this[e]),this[e]=n},this.restore=function(e){this[e]&&(this[e]=t[e].pop())},this.extend=function(e,t,n){var r=this;if("function"==typeof this[e]&&"function"==typeof t){var i=this[e];this[e]=function(e,s){return k(e)&&k(s)&&!n?i.call(r,e,s):t.call(r,e,s,i)}}},this.symfunction=function(e,t){var n=new Ge(e);return n.group=h,"object"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===w?"":e,n.updateHash(),n},this.callfunction=function(t,n,r){var i=I[t];i||A("Nerdamer currently does not support the function "+t);var s,o=i[1]||r,a=i[0];if(n instanceof Array||(n=void 0!==n?[n]:[]),-1!==o){var l=X(o),c=l?o[0]:o,p=l?o[1]:o,f=n.length,h=t+" requires a {0} of {1} arguments. {2} provided!";f<c&&A(Y(h,"minimum",c,f)),f>p&&A(Y(h,"maximum",p,f))}var m=ge(n);return a?s=a.apply(i[2],n):(a=function(e){for(var t=u.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}A("The function "+e+" is undefined!")}(t),s=u.PARSE2NUMBER&&m?Le(a.apply(a,n)):e.symfunction(t,n)),s},this.operator_filter_regex=(x="^\\"+Object.keys(q).filter((function(e){if(1===e.length)return e})).join("\\"),new RegExp("(["+x+"])\\s+(["+x+"])")),this.setOperator=function(t,n,r){var i=t.operator;if(q[i]=t,n&&(this[t.action]=n),e[i]=t.operation,t.action||t.prefix||t.postif||(t.action=i),"over"===r||"under"===r){var s=t.precedence;for(var o in q){var a=q[o];("over"===r?a.precedence>=s:a.precedence>s)&&a.precedence++}}},this.getOperator=function(e){return q[e]},this.aliasOperator=function(e,t){var n={},r=q[e];for(var i in r)n[i]=r[i];n.operator=t,this.setOperator(n)},this.getOperators=function(){return q},this.getBrackets=function(){return C},this.initConstants=function(){this.CONSTANTS={E:new Ge(u.E),PI:new Ge(u.PI)}},this.pretty_print=function(t){if(Array.isArray(t)){var n=t.map((t=>e.pretty_print(t))).join(", ");return"vector"===t.type?"vector<"+n+">":"("+n+")"}return t.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(u.callPeekers)for(var t=this.peekers[e],n=pe(arguments).slice(1).map($),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(t){for(var n in t=(t=String(t)).trim().replace(/\s+/g," "),C){var r=new RegExp(C[n].is_close?"\\s+\\"+n:"\\"+n+"\\s+","g");t=t.replace(r,n)}for(var i=0,s=t.length,a=0,u=[],l=[u],c=l[0],p=0,f=[],h=!1,m=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,l.push(n),c.push(n),c=n,p++},g=function(){l.pop(),c=l[--p]},v=function(e){for(var n=(e=void 0!==e?e:i)+1;t.charAt(n++)in q;);return t.substring(e,n-1)},d=function(e){for(var t=i-e.length,n=[],r=e.charAt(0),s=1,a=e.length;s<a;s++){var u=e.charAt(s),l=r+u;l in q?r=l:(n.push(new o(r,o.OPERATOR,t+s)),r=u)}return n.push(new o(r,o.OPERATOR,t+s)),n},w=function(n,r){void 0===r&&(r=t.substring(a,n)),r in e.units?c.push(new o(r,o.UNIT,a)):""!==r&&c.push(new o(r,o.VARIABLE_OR_LITERAL,a))},y=function(e){c.push(new o(e,o.FUNCTION,a))},b=function(e){a=e+1};i<s;i++){var S=t.charAt(i);if(S in q){w(i);var M=c[0]&&T(c[0]);h&&a<i&&","!==S&&!(M&&"*"===S)&&(h=!1,g()),b(i+1);var N=v(i);a=a+N.length-2,i=a-1,c.push.apply(c,d(N))}else if(S in C){var E=C[S];if(E.is_open)f.push([E,a]),(_=t.substring(a,i))in I?y(_):""!==_&&c.push(new o(_,o.VARIABLE_OR_LITERAL,a)),m(E.maps_to,i);else if(E.is_close){var x=f.pop();if(!x)throw new Ee("Missing open bracket for bracket at: "+(i+1));if(x[0].id!==E.id-1)throw new Ee("Parity error");w(i),g()}b(i)}else if(" "===S){var A=t.substring(a,i),U=t.charAt(i+1);if(h){if(A in q)c.push(new o(A,o.OPERATOR,i));else{w(void 0,A),g();var L=U in q;(L&&"-"===q[U].value||!L)&&c.push(new o("*",o.OPERATOR,i))}h=!1}else{var _;(_=t.substring(a,i))in I?(h=!0,y(_),m()):_ in q?c.push(new o(_,o.OPERATOR,i)):(w(void 0,_),U=t.charAt(i+1),""===A||""===U||A in q||U in q||c.push(new o("*",o.OPERATOR,i)))}b(i)}}if(f.length){var O=f.pop();throw new Ee("Missing closed bracket for bracket at "+(O[1]+1))}return w(i),u},this.toRPN=function(e){var t,n=e.type,r=e.length,i=[],s=[],a=[],u=function(e,t){for(;e.length;)t.push(e.pop())};for(t=0;t<r;t++){var l=e[t];if(l.type!==o.OPERATOR)break;if(!l.prefix)throw new xe("Not a prefix operator");l.is_prefix=!0,s.push(l)}for(;t<r;t++){var c=e[t];if(c.type===o.OPERATOR){var p=c;for(p.overloaded&&(m=e[t+1])&&m.type===o.VARIABLE_OR_LITERAL&&(p.postfix=!1,p.action=p.overloadAction,p.leftAssoc=p.overloadLeftAssoc);s.length;){var f=s[s.length-1];if(!(f.precedence>p.precedence||!p.leftAssoc&&f.precedence===p.precedence))break;i.push(s.pop())}if("vector"!==n&&"set"!==n||!("vectorFn"in p)||(p.action=p.vectorFn),p.postfix){var h=e[t-1];if(!h)throw new xe("Unexpected prefix operator '"+c.value+"'! at "+c.column);if(h.type===o.OPERATOR&&!h.postfix)throw new xe("Unexpected prefix operator '"+h.value+"'! at "+h.column)}else do{var m,g=!!(m=e[t+1])&&m.type===o.OPERATOR;if(g){if(!m.prefix)throw new xe("A prefix operator was expected at "+m.column);m.is_prefix=!0,a.push(m),t++}}while(g);for(p.is_prefix?a.push(p):s.push(p);a.length&&(p.leftAssoc||!p.leftAssoc&&a[a.length-1].precedence>=p.precedence);)s.push(a.pop())}else if(c.type===o.VARIABLE_OR_LITERAL){0===i.length&&u(a,s),i.push(c);var v=s[s.length-1];v&&v.leftAssoc||u(a,i)}else c.type===o.FUNCTION?s.push(c):c.type===o.UNIT&&i.push(c);Array.isArray(c)&&(i.push(this.toRPN(c)),c.type&&i.push(new o(c.type,o.FUNCTION,c.column)))}return u(s,i),u(a,i),i},this.parseRPN=function(t,n){try{for(var r in n=n||{})n[r]=e.parse(n[r],{});u.PARSE2NUMBER&&("e"in n||(n.e=new Ge(u.E)),"pi"in n||(n.pi=new Ge(u.PI)));for(var a=[],l=0,c=t.length;l<c;l++){var p=t[l];if(Array.isArray(p)&&(p=this.parseRPN(p,n)),p)if(p.type===o.OPERATOR)if(p.is_prefix||p.postfix)a.push(p.operation(a.pop()));else{var f=a.pop(),h=a.pop();if(void 0===h)throw new xe(p+" is not a valid postfix operator at "+p.column);var m="comma"===p.action;h instanceof ze&&!m&&(h=Xe.fromSet(h)),f instanceof ze&&!m&&(f=Xe.fromSet(f)),this.callPeekers("pre_operator",h,f,p);var g=e[p.action](h,f);this.callPeekers("post_operator",g,h,f,p),a.push(g)}else if(p.type===o.FUNCTION){var v=a.pop(),d=v.parent;v instanceof s||(v=s.create(v));var w=p.value,y=v.getItems();this.callPeekers("pre_function",w,y);var b=e.callfunction(w,y);this.callPeekers("post_function",b,w,y);var S=a[a.length-1],M=t[l+1];if(M&&M.type===o.OPERATOR&&","===M.value||!(b instanceof Xe)||!S||!S.elements||S instanceof s)d&&(b.parent=d),a.push(b);else{var N=a.pop(),x=b.elements[0];if(x.isConstant())if(x instanceof i)a.push(Xe.fromArray(N.elements.slice(x.start,x.end)));else{var q=Number(x),A=N.elements.length;if(q<0&&(q=A+q),q<0||q>=A)throw new qe("Index out of range "+(p.column+1));var C=N.elements[q];N.getter=q,C.parent=N,a.push(C)}else N.getter=x,a.push(N),a.push(b)}}else{var I,U=p.value;U in u.ALIASES?p=e.parse(u.ALIASES[p]):p.type===o.VARIABLE_OR_LITERAL?p=new Ge(U):p.type===o.UNIT&&((p=new Ge(U)).isUnit=!0),U in e.CONSTANTS?(I=p,p=new Ge(e.CONSTANTS[U])):U in n&&U!==n[U].toString()?(I=p,p=n[U].clone()):U in E&&(I=p,p=E[U].clone()),I&&(p.subbed=I),a.push(p)}}var L=a[0];if(-1!==["undefined","string","number"].indexOf(typeof L))throw new Oe("Unexpected token!");return L}catch(e){throw[Se].forEach((function(t){if(e instanceof t)throw new t(e.message+": "+p.column)})),new ye(e.message+": "+p.column)}},_.prototype.toString=function(){var e=this.left?this.left.toString()+"---":"",t=this.right?"---"+this.right.toString():"";return e+"("+this.value+")"+t},_.prototype.toHTML=function(e,t){e=e||0,t=void 0===t?4:t;var n=function(e){return" ".repeat(t*e)},r="",i=this.left?n(e+1)+"<li>\n"+this.left.toHTML(e+2,t)+n(e+1)+"</li> \n":"",s=this.right?n(e+1)+"<li>\n"+this.right.toHTML(e+2,t)+n(e+1)+"</li>\n":"";return r=n(e)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+n(e)+"\n",(i||s)&&(r+=n(e)+"<ul>\n"+i+s+n(e)+"</ul>\n"),r+""},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===o.OPERATOR)if(r.is_prefix||r.postfix){var i=r.is_prefix?"left":"right",s=t.pop();(r=new _(r))[i]=s,t.push(r)}else(r=new _(r)).right=t.pop(),r.left=t.pop(),t.push(r);else if(r.type===o.FUNCTION){r=new _(r);var a=t.pop();if(r.right=a,"object"===r.value&&(s=t[t.length-1])){for(;s.right;)s=s.right;s.right=r;continue}t.push(r)}else t.push(new _(r))}return t[0]},this.parse=function(e,t){e=function(e){e=String(e);for(var t=0;t<n.actions.length;t++)e=n.actions[t].call(this,e);for(e=e.replace(/\s+/g," "),/e/gi.test(e)&&(e=e.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,(function(e){return O(e)}))),e=e.replace(u.IMPLIED_MULTIPLICATION_REGEX,(function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i="",s="*";return e.charAt(r).match(/[\+\-\/\*]/)||(i=e.charAt(r-1)),i.match(/[a-z]/i)&&(s=""),t+s+n})).replace(/([a-z0-9_]+)/gi,(function(e,t){return!1!==u.USE_MULTICHARACTER_VARS||t in I?t:isNaN(t)?t.split("").join("*"):t})).replace(/\)\(/g,")*(")||"0";e!==(e=e.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,(function(e,t,n,r,i){var s=t||r,o=n||i;return s in I?s+o:s+"*"+o}))););return e}(e),t=t||{};var r=this.tokenize(e),i=this.toRPN(r);return this.parseRPN(i,t)},this.toObject=function(t){var n=function(t){for(var r=[],i=0,s=t.length;i<s;i++){var a=t[i],u=a.value;if(a.type===o.VARIABLE_OR_LITERAL)r.push(new Ge(u));else if(a.type===o.FUNCTION){i++;var l=e.symfunction(u,n(t[i]));l.isConversion=!0,r.push(l)}else a.type===o.OPERATOR?r.push(u):r.push(n(a))}return r};return n(e.tokenize(t))};var R=function(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)","===e[r]?n[++t]=[]:n[t].push(e[r]);return n},P=function(e){return e.replace(/^\\left\((.+)\\right\)$/g,(function(e,t){return t||e}))};function D(t){if(t.isInfinity)return Ge.infinity();if(t.multiplier.lessThan(0)&&t.multiplier.negate(),t.isImaginary()){var n=t.realpart(),r=t.imagpart();if(n.isConstant()&&r.isConstant())return Q(e.add(e.pow(n,new Ge(2)),e.pow(r,new Ge(2))))}else if(H(t)||ie(t.power))return t;if(t.isComposite()){var i=[];t.each((function(e){i.push(e.multiplier)})),Te.QGCD.apply(null,i).lessThan(0)&&(t.multiplier=t.multiplier.multiply(new Be(-1)),t.distributeMultiplier())}var s=e.parse(t.multiplier);return t.toUnitMultiplier(),e.multiply(s,e.symfunction(b,[t]))}function F(t){if(G(t)){var n=new Xe;return t.each((function(e,t){n.set(t-1,F(e))})),n}if(V(t)){var r=new Ze;return t.each((function(e,t,n){r.set(t,n,F(e))})),r}if(u.PARSE2NUMBER&&t.isConstant())return Le(Z(t)?Te.bigfactorial(t):Te.gamma(t.multiplier.add(new Be(1)).toDecimal()));if(t.isConstant()&&t.getDenom().equals(2)){var i,s,o,a,l=t.getNum();return t.multiplier.isNegative()?(a=e.subtract(l.negate(),new Ge(1)).multiplier.divide(new Be(2)),i=e.pow(new Ge(-4),new Ge(a)).multiplier.multiply(Te.bigfactorial(a)),s=Te.bigfactorial(new Be(2).multiply(a))):(a=e.add(l,new Ge(1)).multiplier.divide(new Be(2)),i=Te.bigfactorial(new Be(2).multiply(a)),s=e.pow(new Ge(4),new Ge(a)).multiplier.multiply(Te.bigfactorial(a))),o=i.divide(s),e.multiply(e.parse("sqrt(pi)"),new Ge(o))}return e.symfunction(S,[t])}function B(t,n){if(t.isConstant()&&n.isConstant()){var r=new Ge(1);return r.multiplier=r.multiplier.multiply(t.multiplier.mod(n.multiplier)),r}var i=e.divide(t.clone(),n.clone());return Z(i)?new Ge(0):e.symfunction("mod",[t,n])}function z(t){if(t.isComposite()){var n,r,i,s,o,a,u,l,c=new Ge(0);return t.each((function(t){n=t.getNum(),r=t.getDenom(),i=c.getNum(),s=c.getDenom(),o=e.multiply(r,i),a=e.multiply(n,s),u=e.expand(e.add(o,a)),l=e.multiply(s,r),c=e.divide(u,l)}),!0),c}return t}function Q(t){if(k(t)||(t=e.parse(t)),t.group===f)return e.symfunction(y,[t]);""===t.fname&&t.power.equals(1)&&(t=t.args[0]);var n=t.multiplier.sign()<0;if(u.PARSE2NUMBER){if(t.isConstant()&&!n)return new Ge(r.sqrt(t.multiplier.toDecimal()));if(t.isImaginary())return a.sqrt(t);if(t.group===p)return e.symfunction("sqrt",[t])}var i,s,o=t.isConstant();if(t.group===g&&t.isLinear()){var l=Q(Ge(t.multiplier));for(var c in t.symbols){var h=t.symbols[c];l=e.multiply(l,Q(h))}s=l}else if(t.fname===y){c=t.args[0];var m=t.multiplier;c.setPower(t.power.multiply(new Be(.25))),s=c,m.equals(1)||(s=e.multiply(Q(e.parse(m)),s))}else if(t.power.isInteger())if(t.multiplier<0&&t.group===p){var v=e.parse(t.multiplier).negate(),d=e.parse(t).toUnitMultiplier().negate();s=e.multiply(e.symfunction(u.SQRT,[d]),Q(v))}else{var w=t.power.sign();t.power=t.power.abs(),o&&t.multiplier.lessThan(0)&&(i=Ge.imaginary(),t.multiplier=t.multiplier.abs());var b=t.multiplier.toDecimal(),S=Math.abs(b),M=Math.sqrt(S);if(Z(M))l=new Ge(M);else if(Z(b)){var N=Te.ifactor(b),E=1;for(var h in N){var x=(L=N[h])-L%2;if(x){var q=Math.pow(h,x);E*=Math.pow(h,x/2),b/=q}}l=e.multiply(e.symfunction(y,[new Ge(b)]),new Ge(E))}else{for(var A=[new Ge(t.multiplier.num),new Ge(t.multiplier.den)],C=[new Ge(1),new Ge(1)],I=[new Ge(1),new Ge(1)],U=0;U<2;U++){var L;re(L=A[U]).each((function(t){var n=(t=Ge.unwrapPARENS(t)).clone().toLinear(),r=Number(t.power),i=r%2,s=(r-i)/2;C[U]=e.multiply(C[U],e.pow(n,new Ge(s))),I[U]=e.multiply(I[U],Q(e.pow(n,new Ge(i))))}))}l=e.divide(e.multiply(C[0],I[0]),e.multiply(C[1],I[1]))}s=(t=t.toUnitMultiplier(!0)).isOne()?t:ie(t.power.toString())?e.pow(t.clone(),new Ge(.5)):e.symfunction(y,[t]),w<0&&s.power.negate(),l&&(s=e.multiply(l,s)),i&&(s=e.multiply(i,s))}else t.setPower(t.power.multiply(new Be(.5))),s=t;return n&&u.PARSE2NUMBER?e.parse(s):s}function W(t){if(!t.isConstant(!0)){var n,r=t.power/3,i=e.pow(e.parse(t.multiplier),new Ge(1/3)),s=t.toUnitMultiplier();return Z(r)?n=e.pow(s.toLinear(),e.parse(r)):s.group===g?(n=new Ge(1),s.each((function(t){n=e.multiply(n,W(t))}))):n=e.symfunction("cbrt",[s]),e.multiply(i,n)}return ee(t,new Ge(3))}function ee(t,n,r,i){if((n=fe(e.parse(n))).equals(0))throw new be("Unable to calculate nthroots of zero");if(t<0&&ie(n))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!t.isConstant(!0))return e.symfunction("nthroot",arguments);t.group!==l&&(t=fe(t)),void 0===i&&(i=!0),r=r||25;var s,o,a=t.sign();return a<0&&(t=D(t)),Z(t)&&n.isConstant()?(s=t<0x10000000000000000?Be.create(Math.pow(t,1/n)):Te.nthroot(t,n),i&&(o=new Ge(s)),o=new Ge(s.toDecimal(r)),e.multiply(new Ge(a),o)):void 0}function re(t){if(t.greaterThan(9999999999998891e26)||t.equals(-1))return t;if(t.equals(Math.PI))return new Ge(Math.PI);if((t=fe(t.clone())).isConstant()){var n=new Ge(1),r=t.toString();if(Z(r)){var i=Te.ifactor(r);for(var s in i){var o=i[s];n=e.multiply(n,e.symfunction("parens",[new Ge(s).setPower(new Be(o))]))}}else{var a=re(new Ge(t.multiplier.num)),u=re(new Ge(t.multiplier.den));n=e.multiply(e.symfunction("parens",[a]),e.symfunction("parens",[u]).invert())}}else n=e.symfunction("pfactor",arguments);return n}function oe(e){return e.realpart()}function ue(e){return e.imagpart()}function he(t){var n=t.realpart(),r=t.imagpart();return e.add(n,e.multiply(r.negate(),Ge.imaginary()))}function me(t){var n=t.realpart(),r=t.imagpart();return n.isConstant()&&r.isConstant()?new Ge(Math.atan2(r,n)):e.symfunction("atan2",[r,n])}function me(t){var n=t.realpart(),r=t.imagpart();return n.isConstant()&&r.isConstant()?r.equals(0)&&n.equals(-1)?e.parse("pi"):r.equals(1)&&n.equals(0)?e.parse("pi/2"):r.equals(1)&&n.equals(1)?e.parse("pi/4"):new Ge(Math.atan2(r,n)):e.symfunction("atan2",[r,n])}function Me(e,t){var n,r,i;for(t.map((function(e){e.numVal=fe(e).multiplier}));;){if((n=t.length)<2)return t[0];r=t.pop(),i=t[n-2],("min"===e?r.numVal<i.numVal:r.numVal>i.numVal)&&(t.pop(),t.push(r))}}function Ne(t,n){if(t.equals(1))return new Ge(0);var r;if(t.fname===y&&t.multiplier.equals(1))return r=e.divide(Ne(t.args[0]),new Ge(2)),t.power.sign()<0&&r.negate(),r;if(t.equals(0))throw new be(u.LOG+"(0) is undefined!");if(t.isImaginary())return a.evaluate(t,u.LOG);if(t.isConstant()&&void 0!==n&&n.isConstant())r=new Ge(Math.log(t)/Math.log(n));else if(t.group===f&&t.power.multiplier.lessThan(0)||"-1"===t.power.toString())t.power.negate(),r=Ne(t).negate();else if("e"===t.value&&t.multiplier.equals(1)){var i=t.power;r=k(i)?i:new Ge(i)}else if(t.group===h&&"exp"===t.fname){var s=t.args[0];r=t.multiplier.equals(1)?e.multiply(s,new Ge(t.power)):e.symfunction(u.LOG,[t])}else if(u.PARSE2NUMBER&&H(t)){var o;(t=e.parse(t)).multiplier.lessThan(0)&&(t.negate(),o=e.multiply(new Ge(Math.PI),new Ge("i"))),r=new Ge(Math.log(t.multiplier.toDecimal())),o&&(r=e.add(r,o))}else t.power.equals(1)||t.contains("e")||(s=t.group===f?t.power:new Ge(t.power),t.toLinear()),r=arguments.length>1&&U(arguments)?new Ge(1):e.symfunction(u.LOG,arguments),s&&(r=e.multiply(s,r));return r}function Ce(t,n){var r,i,s,o,a=n&&n.isConstant()||void 0===n;return t.isConstant()&&a?(r=t,n&&n.lessThan(0)&&(n=D(n),r=(i=Number(t).toExponential().toString().split("e"))[0],s=i[1]),o=new Ge(ne(r,Number(n||0))),e.multiply(o,e.pow(new Ge(10),new Ge(s||0)))):e.symfunction("round",arguments)}function Ie(e){var t=e%2;return t<0&&(t=2+t),t>=0&&t<=.5?1:t>.5&&t<=1?2:t>1&&t<=1.5?3:4}function Le(e){if(!isFinite(e)){var t=Math.sign(e),n=new Ge(String(Math.abs(e)));return n.multiplier=n.multiplier.multiply(new Be(t)),n}if(k(e))return e;if("number"==typeof e)try{e=Be.simple(e)}catch(t){e=new Be(e)}var r=new Ge(0);return r.multiplier=e,r}function _e(t,n){if(Array.isArray(t))return t.map((function(e){return _e(e,n)}));if(n=n||{},t.group===h&&""===t.fname){var r=_e(t.args[0],n),i=_e(e.pow(r,e.parse(t.power)),n);return e.multiply(e.parse(t.multiplier),i).distributeMultiplier()}if(-1!==[l,c,p].indexOf(t.group))return t;var s=t.clone();try{var o=t.multiplier.toString(),a=Number(t.power),u=t;if(t.isComposite()&&Z(t.power)&&t.power>0){var f=a-1;r=new Ge(0),t.each((function(t){r=e.add(r,_e(e.parse(t),n))}));for(var d=e.parse(r),w=0;w<f;w++)d=de(d,r,n);u=e.multiply(e.parse(o),d).distributeMultiplier()}else if(t.group===h&&!0===n.expand_functions){var y=[];t.args.forEach((function(e){y.push(_e(e,n))})),u=e.pow(e.symfunction(t.fname,y),e.parse(t.power)),u=e.multiply(u,e.parse(t.multiplier))}else if(t.isComposite()&&Z(t.power)&&t.power<0&&!0===n.expand_denominator)t=t.invert(),(u=_e(t,n)).invert();else if(t.group===g){var b=function(e){switch(e.group){case v:return 0;case m:return 1;case g:return 2;case h:return 3;default:return 4}},S=t.collectSymbols().sort((function(e,t){return b(t)-b(e)})).map((function(t){return _e(e.pow(t,e.parse(a)),n)}));(r=S.pop()).isComposite()&&r.isLinear()?(S.forEach((function(e){r=de(r,e,n)})),r.isComposite()?(r.power>1&&(r=_e(e.pow(r,e.parse(r.power)),n)),u=e.multiply(e.parse(o),r).distributeMultiplier()):u=r):(u=r,S.forEach((function(t){u=e.multiply(u,t)})),u=e.multiply(u,e.parse(o)).distributeMultiplier()),u.group===g&&(u=e.parse(u))}else u=t;return u}catch(e){return s}return s}function Re(e){if(!k(e.power)&&e.power.absEquals(.5)){var t=e.power.sign(),n=Q(e.group===c?new Ge(e.value):e.toLinear());return t<0&&n.invert(),n}return e}this.toTeX=function(t,n){var r=!0===(n=n||{}).decimals?"decimals":void 0,i="string"==typeof t?this.toObject(t):t,s=[],o=void 0===n.cdot?"\\cdot":n.cdot;if(i=function(e){for(var t=[];e.length;){var n=e.shift(),r=e[0],i=X(r),s="-"===r;if("^"===n&&("+"===r?e.shift():i&&"+"===r[0]&&r.shift(),i&&1===r.length&&e.unshift(e.shift()[0])),"^"===n&&(i&&"-"===r[0]||s)){var o=t.pop(),a=t[t.length-1],u="1";"*"===a?(t.pop(),u=t.pop()):X(a)&&(u=t.pop()),t.push(u,"/",o,n),i?r.shift():e.shift(),i&&1===r.length&&t.push(e.shift()[0])}else t.push(n)}return t}(i),X(i)){for(var a,l,c=[],p=0;p<i.length;p++)a=i[p],"^"===i[p+1]?(l=i[p+2],c.push(He.braces(this.toTeX([a]))+"^"+He.braces(this.toTeX([l]))),p+=2):c.push(a);i=c}p=0;for(var f=i.length;p<f;p++){var m=i[p];if("*"===m&&(m=o),k(m))if(m.group===h){var g,v=m.fname;if(v===y)g="\\sqrt"+He.braces(this.toTeX(m.args));else if(v===b)g=He.brackets(this.toTeX(m.args),"abs");else if(v===w)g=He.brackets(this.toTeX(m.args),"parens");else if(v===u.LOG10)g="\\"+u.LOG10_LATEX+"\\left( "+this.toTeX(m.args)+"\\right)";else if("integrate"===v){var d=R(m.args);g="\\int "+(N=He.braces(this.toTeX(d[0])))+"\\, d"+(E=this.toTeX(d[1]))}else if("defint"===v){d=R(m.args);var N=He.braces(this.toTeX(d[0])),E=this.toTeX(d[3]);g="\\int\\limits_{"+this.toTeX(d[1])+"}^{"+this.toTeX(d[2])+"} "+N+"\\, d"+E}else if("diff"===v){if(d=R(m.args),E="",N=He.braces(this.toTeX(d[0])),1===d.length){var x=[];for(A=0;A<d[0].length;A++)3===d[0][A].group&&x.push(d[0][A].value);x.sort(),E=x.length>0?"\\frac{d}{d "+x[0]+"}":"\\frac{d}{d x}"}else E=2===d.length?"\\frac{d}{d "+d[1]+"}":"\\frac{d^{"+d[2]+"}}{d "+this.toTeX(d[1])+"^{"+d[2]+"}}";g=E+"\\left("+N+"\\right)"}else if("sum"===v||"product"===v){var q=[[],[],[],[]],A=0;for(p=0;p<m.args.length;p++)","!==m.args[p]?q[A].push(m.args[p]):A++;g=("sum"===v?"\\sum_":"\\prod_")+He.braces(this.toTeX(q[1])+" = "+this.toTeX(q[2])),g+="^"+He.braces(this.toTeX(q[3]))+He.braces(this.toTeX(q[0]))}else if("limit"===v){var C=R(m.args).map((function(t){return Array.isArray(t)?e.toTeX(t.join("")):e.toTeX(String(t))}));g="\\lim_"+He.braces(C[1]+"\\to "+C[2])+" "+He.braces(C[0])}else g=v===S||v===M?this.toTeX(m.args)+(v===S?"!":"!!"):He.latex(m,r);s.push(g)}else s.push(He.latex(m,r));else X(m)?s.push(He.brackets(this.toTeX(m))):"/"===m?s.push(He.frac(P(s.pop()),P(this.toTeX([i[++p]])))):s.push(m)}return s.join(" ")},this.expand=_e,this.round=Ce,this.clean=function t(n){var r,i=n.group;if(i===v){var s=n.getNum(),o=n.getDenom()||new Ge(1),a=Number(n.power),u=new Ge(1);if(1===Math.abs(a)){o.each((function(n){n.group===g?u=e.multiply(u,t(n.getDenom())):n.power.lessThan(0)&&(u=e.multiply(u,t(n.clone().toUnitMultiplier())))}));var l,c=new Ge(0);o.each((function(t){c=e.add(e.divide(t,u.clone()),c)})),u.invert(),s.isComposite()?(l=new Ge(0),s.each((function(n){l=e.add(e.multiply(t(n),u.clone()),l)}))):l=e.multiply(u,s),r=e.divide(l,c)}}else i===g?(r=new Ge(1),n.each((function(t){r=e.multiply(r,e.clean(t))}))):i===h&&1===n.args.length&&n.args[0].isConstant()&&(r=ce("PARSE2NUMBER",(function(){return e.parse(n)}),!0));return r||(r=n),r},this.sqrt=Q,this.cbrt=W,this.abs=D,this.log=Ne,this.rationalize=z,this.nthroot=ee,this.arg=me,this.conjugate=he,this.imagpart=ue,this.realpart=oe,this.getFunction=function(e){return I[e][0]},this.addPreprocessor=function(e,t,r,i){var s=n.names,o=n.actions;if("function"!=typeof t)throw new PreprocessorError("Incorrect parameters. Function expected!");r?i?(s.splice(r,0,e),o.splice(r,0,t)):(s[r]=e,o[r]=t):(s.push(e),o.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){var r=n.names.indexOf(e);t?(le(n.names,r),le(n.actions,r)):(n.names[r]=void 0,n.actions[r]=void 0)},this.mapped_function=function(){for(var t={},n=this.params,r=0;r<n.length;r++)t[n[r]]=String(arguments[r]);return e.parse(this.body,t)},this.add=function(t,n){var r=k(t),i=k(n);if(r&&i){if(t.unit||n.unit)return e.Unit.add(t,n);if(t.isInfinity||n.isInfinity){var s=t.multiplier.lessThan(0),o=n.multiplier.lessThan(0);if(t.isInfinity&&n.isInfinity&&s!==o)throw new be("("+t+")+("+n+") is not defined!");var a=Ge.infinity();return o&&a.negate(),a}if(t.isComposite()&&t.isLinear()&&n.isComposite()&&n.isLinear()&&(t.distributeMultiplier(),n.distributeMultiplier(),n.length>t.length&&t.group===n.group&&([t,n]=[n,t])),t.multiplier.equals(0))return n;if(n.multiplier.equals(0))return t;if(t.isConstant()&&n.isConstant()&&u.PARSE2NUMBER)return new Ge(t.multiplier.add(n.multiplier).toDecimal(u.PRECISION));var d=t.group,w=n.group,b=t.power.toString(),S=n.power.toString();if(d<w||d===w&&b>S&&S>0)return this.add(n,t);if(d===g&&w===m&&t.value===n.value){var M=t;t=n,n=M,d=t.group,w=n.group,b=t.power.toString(),S=n.power.toString()}var N,E,x,q=b===S,C=t.value,I=n.value,U=t.isComposite(),L=n.isComposite();if(U&&(N=Pe(t,"hash")),L&&(E=Pe(n,"hash")),d===v&&w===v&&n.isLinear()&&!t.isLinear()&&N!==E)return this.add(n,t);d===m&&w===m&&(C=N,I=E);var _=d===c&&w===l,O=t.value===n.multiplier.toString(),R=C===I||N===E&&void 0!==N||_&&O;if(R&&q&&d===w)if(_&&(n=n.convert(c)),d!==m||w!==p&&w!==c)if(x=t,t.multiplier.isOne()&&n.multiplier.isOne()&&d===v&&t.isLinear()&&n.isLinear())for(var T in n.symbols){var P=n.symbols[T];x.attach(P)}else x.multiplier=x.multiplier.add(n.multiplier);else t.distributeMultiplier(),x=t.attach(n);else if(R&&d!==m)d===v&&w===m?(n.insert(t,"add"),x=n):(x=Ge.shell(m).attach([t,n])).value=d===m?N:C;else if(U&&t.isLinear()){var D=d===w,F=d===m&&w===m;if(F&&(D=t.value===n.value),t.distributeMultiplier(),n.isComposite()&&n.isLinear()&&D){for(var T in n.distributeMultiplier(),n.symbols)P=n.symbols[T],t.attach(P);x=t}else F&&t.value!==E||d===m&&!R?(x=Ge.shell(v).attach([t,n])).updateHash():x=t.attach(n)}else{if(d===h&&t.fname===y&&w!==f&&n.power.equals(.5)){var B=n.multiplier.clone();(n=Q(n.toUnitMultiplier().toLinear())).multiplier=B}2===t.length&&2===n.length&&ie(t.power)&&ie(n.power)?x=e.add(_e(t),_e(n)):(x=Ge.shell(v).attach([t,n])).updateHash()}return x.multiplier.equals(0)&&(x=new Ge(0)),1===x.length&&(B=x.multiplier,(x=J(x.symbols)).multiplier=x.multiplier.multiply(B)),x}i&&!r&&(M=t,t=n,n=M,M=i,i=r,r=M);var j=V(n);if(r&&j){var H=new Ze;n.eachElement((function(n,r,i){H.set(r,i,e.add(t.clone(),n))})),n=H}else if(V(t)&&j)n=t.add(n);else if(r&&G(n))n.each((function(r,i){i--,n.elements[i]=e.add(t.clone(),n.elements[i])}));else if(G(t)&&G(n))n.each((function(r,i){i--,n.elements[i]=e.add(t.elements[i],n.elements[i])}));else{if(G(t)&&V(n))return e.add(n,t);if(V(t)&&G(n)){if(n.elements.length===t.rows()){H=new Ze;var X=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<X;s++)i.push(e.add(t.elements[r-1][s].clone(),n.clone()));H.elements.push(i)})),H}A("Dimensions must match!")}}return n},this.subtract=function(t,n){var r=r=k(t),i=k(n);if(r&&i)return t.unit||n.unit?e.Unit.subtract(t,n):this.add(t,n.negate());if(i&&G(t))n=t.map((function(t){return e.subtract(t,n.clone())}));else if(r&&G(n))n=n.map((function(n){return e.subtract(t.clone(),n)}));else if(G(t)&&G(n))t.dimensions()===n.dimensions()?n=t.subtract(n):e.error("Unable to subtract vectors. Dimensions do not match.");else if(V(t)&&G(n)){if(n.elements.length===t.rows()){var s=new Ze,o=t.cols();return n.each((function(n,r){for(var i=[],a=0;a<o;a++)i.push(e.subtract(t.elements[r-1][a].clone(),n.clone()));s.elements.push(i)})),s}A("Dimensions must match!")}else{if(G(t)&&V(n))return s=n.clone().negate(),e.add(s,t);V(t)&&V(n)?n=t.subtract(n):V(t)&&i?(s=new Ze,t.each((function(t,r,i){s.set(r,i,e.subtract(t,n.clone()))})),n=s):r&&V(n)&&(s=new Ze,n.each((function(n,r,i){s.set(r,i,e.subtract(t.clone(),n))})),n=s)}return n},this.multiply=function(t,n){var i=k(t),o=k(n);if(i&&n instanceof s)return n.elements.push(t),n;if(i&&o){if(n.isUnit){var a=t.clone();return t.unit=n,a}if(t.unit||n.unit)return e.Unit.multiply(t,n);if(t.isInfinity||n.isInfinity){if(t.equals(0)||n.equals(0))throw new be(t+"*"+n+" is undefined!");if(n.power.lessThan(0)){if(t.isInfinity)throw new be("Infinity/Infinity is not defined!");return new Ge(0)}var d=t.multiplier.multiply(n.multiplier).sign(),w=Ge.infinity();if(t.isConstant()||n.isConstant()||t.isInfinity&&n.isInfinity)return d<0&&w.negate(),w}if(t.isConstant()&&n.isConstant()&&u.PARSE2NUMBER)return new Ge(b=new r(t.multiplier.toDecimal()).times(new r(n.multiplier.toDecimal())).toFixed());if(t.isOne())return n.clone();if(n.isOne())return t.clone();if(t.multiplier.equals(0)||n.multiplier.equals(0))return new Ge(0);if(n.group>t.group&&n.group!==v)return this.multiply(n,t);if(t.group===g&&n.group===m&&t.value===n.value){var b=t;t=n,n=b}var M=t.group,N=n.group,E=n.multiplier.num,x=n.multiplier.den;if(M!==h||t.fname!==y||n.isConstant()||t.args[0].value!==n.value||t.args[0].multiplier.lessThan(0))M===h&&t.fname===y&&t.multiplier.equals(1)&&t.power.equals(-1)&&n.isConstant()&&t.args[0].equals(n)&&(t=e.symfunction(y,[n.clone()]),n=new Ge(1));else{var q=t.power,C=e.parse(t.multiplier);(t=e.multiply(C,t.args[0].clone())).setPower(new Be(.5).multiply(q)),M=t.group}var I=t.value,U=n.value,L=(d=new Be(t.sign()),M===c&&N===l&&n.multiplier.equals(t.value)),_=L?new Be(1).multiply(t.multiplier).abs():t.multiplier.multiply(n.multiplier).abs();if(a=t.clone().toUnitMultiplier(),n=n.clone().toUnitMultiplier(!0),M===h&&N===h){var O=t.args[0].clone(),R=n.args[0].clone();if(t.fname===y&&n.fname===y&&t.isLinear()&&n.isLinear()){var T=e.divide(O,R).invert();T.gt(1)&&Z(T)&&(a=e.multiply(t.args[0].clone(),Q(T.clone())),n=new Ge(1))}else if(t.fname===S&&n.fname===S&&!O.isConstant()&&!R.isConstant()&&n.power<0){var P=e.subtract(O.clone(),R.clone());if(P.isConstant())if(b=new Ge(1),P<0){for(var D=0,F=Math.abs(P);D<=F;D++){var B=e.add(O.clone(),new Ge(D));b=e.multiply(b,B)}a=e.multiply(e.pow(O,new Ge(t.power)),e.pow(b,new Ge(n.power))),n=new Ge(1)}else{for(D=0,F=Math.abs(P);D<=F;D++)B=e.add(R.clone(),new Ge(D)),b=e.multiply(b,B);a=e.multiply(e.pow(b,new Ge(t.power)),e.pow(R,new Ge(n.power))),n=new Ge(1)}}}if(I===U&&M===m&&M===N&&(I=t.text("hash"),U=n.text("hash")),N===f&&n.previousGroup===m&&M===m&&(I=Pe(t,"hash",f)),I!==U&&!L||M===m&&(N===p||N===c||N===h)||M===m&&N===g)if(M===g&&t.isLinear())if(N===g&&n.distributeExponent(),N===g&&n.isLinear()){for(var B in n.symbols){var j=n.symbols[B];a=a.combine(j)}a.multiplier=a.multiplier.multiply(n.multiplier)}else a.combine(n);else if(M!==l){if(M===g)a.distributeExponent(),a.combine(n);else if(!n.isOne()){var H=n.multiplier.clone();n.toUnitMultiplier(),(a=Ge.shell(g).combine([a,n])).multiplier=a.multiplier.multiply(H)}}else a=n.clone().toUnitMultiplier();else{var X=t.power,z=n.power,$=k(X),Y=k(z),W=$||Y;M===m&&N!==m&&n.previousGroup!==m&&X.equals(1)?(a=new Ge(0),t.each((function(t){a=e.add(a,e.multiply(t,n.clone()))}),!0)):(a.power=W?e.add(k(X)?X:new Ge(X),k(z)?z:new Ge(z)):M===l?X:X.add(z),a.power.equals(0)&&(a=a.convert(l)),W&&a.convert(f),t.imaginary&&n.imaginary&&ie(a.power%2)&&(a=new Ge(1),_.negate()),a.group!==f&&a.previousGroup&&(a.previousGroup=void 0),a.multiplier=a.multiplier.multiply(n.multiplier))}if(a.group===c){var K=Math.log(a.value),ee=Math.log(E)/K,te=Math.log(x)/K,ne=_.num/E,re=_.den/x;0!==ee&&Z(ee)&&Z(ne)&&(a.power=a.power.add(new Be(ee)),_.num/=E),0!==te&&Z(te)&&Z(re)&&(a.power=a.power.subtract(new Be(te)),_.den/=x)}1===a.length&&(b=a.multiplier,(a=J(a.symbols)).multiplier=a.multiplier.multiply(b));var se=a.power.toString();if(ie(se)&&a.fname===y){d*=a.sign();var oe=a.power;a=a.args[0],a=e.multiply(new Ge(_),e.pow(a,new Ge(oe.divide(new Be(2))))),d<0&&a.negate()}else a.multiplier=a.multiplier.multiply(_).multiply(d),a.group===v&&a.isImaginary()&&a.distributeMultiplier();return a.group===c&&Z(a.power.toDecimal())&&(a=a.convert(l)),a}o&&!i&&(b=t,t=n,n=b,b=o,o=i,i=b);var ae=V(n),ue=V(t);if(i&&ae){var le=new Ze;n.eachElement((function(n,r,i){le.set(r,i,e.multiply(t.clone(),n))})),n=le}else if(ue&&ae)n=t.multiply(n);else if(i&&G(n))n.each((function(r,i){i--,n.elements[i]=e.multiply(t.clone(),n.elements[i])}));else if(G(t)&&G(n))n.each((function(r,i){i--,n.elements[i]=e.multiply(t.elements[i],n.elements[i])}));else{if(G(t)&&V(n))return this.multiply(n,t);if(V(t)&&G(n)){if(n.elements.length===t.rows()){le=new Ze;var ce=t.cols();return n.each((function(n,r){for(var i=[],s=0;s<ce;s++)i.push(e.multiply(t.elements[r-1][s].clone(),n.clone()));le.elements.push(i)})),le}A("Dimensions must match!")}}return n},this.divide=function(t,n){var r=k(t),i=k(n);if(r&&i){if(t.unit||n.unit)return e.Unit.divide(t,n);var s;if(n.equals(0))throw new we("Division by zero not allowed!");return t.isConstant()&&n.isConstant()?(s=t.clone()).multiplier=s.multiplier.divide(n.multiplier):(n.invert(),s=e.multiply(t,n)),s}var o=G(t),a=G(n);if(r&&a)n=n.map((function(n){return e.divide(t.clone(),n)}));else if(o&&i)n=t.map((function(t){return e.divide(t,n.clone())}));else if(o&&a)t.dimensions()===n.dimensions()?n=n.map((function(n,r){return e.divide(t.elements[--r],n)})):e.error("Cannot divide vectors. Dimensions do not match!");else{var u=V(t),l=V(n);if(u&&i){var c=new Ze;t.eachElement((function(t,r,i){c.set(r,i,e.divide(t,n.clone()))})),n=c}else r&&l?(c=new Ze,n.eachElement((function(n,r,i){c.set(r,i,e.divide(t.clone(),n))})),n=c):u&&l?(c=new Ze,t.rows()===n.rows()&&t.cols()===n.cols()?(t.eachElement((function(t,r,i){c.set(r,i,e.divide(t,n.elements[r][i]))})),n=c):e.error("Dimensions do not match!")):u&&a&&(t.cols()===n.dimensions()?(c=new Ze,t.eachElement((function(t,r,i){c.set(r,i,e.divide(t,n.elements[r].clone()))})),n=c):e.error("Unable to divide matrix by vector."))}return n},this.pow=function(t,n){var i=k(t),s=k(n);if(i&&s){if(t.unit||n.unit)return e.Unit.pow(t,n);if(t.group===h&&t.fname===b&&ie(n)){var o=t.multiplier.clone(),a=e.pow(t.args[0],n);return a.multiplier=o,a}if(t.isInfinity||n.isInfinity){if(t.isInfinity&&n.isInfinity)throw new be("("+t+")^("+n+") is undefined!");if(t.isConstant()&&n.isInfinity){if(t.equals(0)){if(n.lessThan(0))throw new be("0^Infinity is undefined!");return new Ge(0)}if(t.equals(1))throw new be("1^"+n.toString()+" is undefined!");if(n.lessThan(0))return new Ge(0);if(!t.lessThan(0))return Ge.infinity()}if(t.isInfinity&&n.isConstant()){if(n.equals(0))throw new be(t+"^0 is undefined!");return n.lessThan(0)?new Ge(0):e.multiply(Ge.infinity(),e.pow(new Ge(t.sign()),n.clone()))}}var p=t.equals(0),m=n.equals(0);if(p&&m)throw new be("0^0 is undefined!");if(p&&n.isConstant()&&n.multiplier.greaterThan(0))return new Ge(0);if(m)return new Ge(1);var v,S,M,N,E,x=n.isConstant(),q=t.isConstant(),A=n.isInteger(),C=(o=t.multiplier,t.clone());if(q&&x&&t.equals(0)&&n.lessThan(0))throw new be("Division by zero is not allowed!");if(u.PARSE2NUMBER&&q&&x&&t.sign()<0&&se(n))return v=Math.PI*n,B=new Ge(Math.cos(v)),j=e.multiply(Ge.imaginary(),new Ge(Math.sin(v))),e.add(B,j);if(u.PARSE2NUMBER&&t.isImaginary()&&x&&Z(n)&&!n.lessThan(0)&&(B=t.realpart(),j=t.imagpart(),B.isConstant("all")&&j.isConstant("all")))return N=u.USE_BIG?Ge(r.atan2(R.multiplier.toDecimal(),F.multiplier.toDecimal()).times(n.toString())):Math.atan2(j,B)*n,fe=new Ge(N),F=e.pow(Ge.hyp(B,j),n),S=e.multiply(F.clone(),e.trig.cos(fe.clone())),M=e.multiply(F,e.trig.sin(fe)),e.add(S,e.multiply(Ge.imaginary(),M));if(C.toUnitMultiplier(),C.group!==h||C.fname!==y||x){var I=o.sign();se(n)&&I<0&&(C.negate(),(C=e.symfunction(w,[C])).negate()),C.multiplyPower(n)}else(K=C.args[0]).multiplyPower(new Ge(.5)),K.multiplier.multiply(C.multiplier),K.multiplyPower(n),C=K;if(q&&x&&u.PARSE2NUMBER)I<0&&(t.negate(),E=n.multiplier.den.equals(2)?new Ge(u.IMAGINARY):Z(n.multiplier)?ie(n.multiplier)?new Ge(1):new Ge(-1):ie(n.multiplier.den)?e.pow(e.symfunction(w,[new Ge(I)]),n.clone()):new Ge(Math.pow(I,n.multiplier.num))),C=new Ge(Math.pow(t.multiplier.toDecimal(),n.multiplier.toDecimal())),E&&(C=e.multiply(C,E));else if(A&&!o.equals(1)){if(n.abs().gt(u.MAX_EXP))return n.sign()<0?new Ge(0):Ge.infinity();var U=n.multiplier.toDecimal(),_=Math.sign(U);U=Math.abs(U);var O=new Be(1);O.num=o.num.pow(U),O.den=o.den.pow(U),_<0&&O.invert(),C.multiplier=C.multiplier.multiply(O)}else if(I=t.sign(),n.isConstant()&&t.isConstant()&&!n.multiplier.den.equals(1)&&I<0)if(n.multiplier.den.equals(2)){var R=new Ge(u.IMAGINARY);t.negate(),n.lessThan(0)&&(R.negate(),n.negate()),C=e.multiply(e.pow(t,n),R)}else{(H=t.clone()).multiplier.negate(),C=e.pow(e.symfunction(w,[new Ge(I)]),n.clone());var T=e.pow(new Ge(H.multiplier.num),n.clone()),P=e.pow(new Ge(H.multiplier.den),n.clone()),F=e.divide(T,P);C=e.multiply(C,F)}else if(u.PARSE2NUMBER&&n.isImaginary()){var B=n.realpart(),j=n.imagpart(),H=t.clone().toLinear(),X=e.pow(H.clone(),B),z=Ne(H.clone()),$=d.cos(e.multiply(j.clone(),z)),Q=e.multiply(d.sin(e.multiply(j,Ne(H))),Ge.imaginary());C=e.multiply(X,e.add($,Q)),C=e.expand(e.parse(C))}else{var Y=t.group===l&&I<0,W=Re(new Ge(Y?o.num:Math.abs(o.num)).setPower(n.clone())),J=Re(new Ge(o.den).setPower(n.clone()).invert());if(t.imaginary)if(A){var K;K=Math.sign(n),U=D(n),C=new Ge(ie(oe=U%4)?-1:u.IMAGINARY),(0===oe||K<0&&1===oe||K>0&&3===oe)&&C.negate()}else{var ee=n.multiplier.multiply(Be.quick(1,2)),te=Math.pow(-1,ee.num);C=ie(ee.den)?new Ge(-1).setPower(ee,!0):new Ge(te)}if(I<0&&!Y&&C.negate(),x&&t.group!==f){var ne=ie(n.multiplier.den),re=ie(t.power),oe=C.power.toDecimal(),ae=ie(oe);ne&&re&&!ae&&(1===oe?C=e.symfunction(b,[C]):Z(oe)?C=e.multiply(e.symfunction(b,[C.clone().toLinear()]),C.clone().setPower(new Be(oe-1))):(U=C.power,C=e.symfunction(b,[C.toLinear()]).setPower(U)),u.POSITIVE_MULTIPLIERS&&C.fname===b&&(C=C.args[0]))}if(n.equals(2)&&C.group===g){var ue=new Ge(1);C.each((function(t){ue=e.multiply(ue,e.pow(t,n))})),C=ue}}if(C=Re(C),W&&J&&(C=e.multiply(C,function(e){if(e.group===c){var t=e.value,n=ke(t)[0];if(!n)return L("Unable to compute prime factors. This should not happen. Please review and report."),e;var r=new Be(Math.log(t)/Math.log(n)).multiply(e.power);if(r.den>e.power.den)return e;e=Z(r)?Ge(Math.pow(n,r)):new Ge(n).setPower(r)}return e}(e.multiply(W,J)))),C.fname===y){var le=C.group===f,ce=le?C.power.multiplier.toString():C.power.toString();if(ie(ce)){var pe=le?e.divide(C.power,new Ge(2)):new Ge(C.power.divide(new Be(2)));o=C.multiplier,(C=e.pow(C.args[0],pe)).multiplier=C.multiplier.multiply(o)}}else if(!u.IGNORE_E&&C.isE()&&C.group===f&&C.power.contains("pi")&&C.power.contains(u.IMAGINARY)&&n.group===g){var fe=n.stripVar(u.IMAGINARY);C=e.add(d.cos(fe),e.multiply(Ge.imaginary(),d.sin(fe)))}return C}if(G(t)&&s)t=t.map((function(t){return e.pow(t,n.clone())}));else if(V(t)&&s){var he=new Ze;t.eachElement((function(t,r,i){he.set(r,i,e.pow(t,n.clone()))})),t=he}else i&&V(n)&&(he=new Ze,n.eachElement((function(n,r,i){he.set(r,i,e.pow(t.clone(),n))})),t=he);return t},this.comma=function(e,t){return e instanceof s||(e=s.create(e)),e.append(t),e},this.mod=function(e,t){return B(e,t)},this.slice=function(e,t){return new i(e,t)},this.equals=function(e,t){return e.group===p||e.isLinear()||A("Cannot set equality for "+e.toString()),E[e.value]=t.clone(),t},this.percent=function(t){return e.divide(t,new Ge(100))},this.assign=function(t,n){if(t instanceof s&&n instanceof s)return t.elements.map((function(t,r){return e.assign(t,n.elements[r])})),Xe.fromArray(n.elements);if(t.parent){var r=t.parent;return r.elements[r.getter]=n,delete r.getter,r}if(t.group!==p)throw new Ue("Cannot complete operation. Incorrect LH value for "+t);return E[t.value]=n,n},this.function_assign=function(e,t){var n=e.elements.pop();return K(n,e.elements,t)};var De=function(e){return new Ge(!0===e?1:0)};this.eq=function(e,t){return De(e.equals(t))},this.gt=function(e,t){return De(e.gt(t))},this.gte=function(e,t){return De(e.gte(t))},this.lt=function(e,t){return De(e.lt(t))},this.lte=function(e,t){return De(e.lte(t))},this.factorial=function(e){return this.symfunction(S,[e])},this.dfactorial=function(e){return this.symfunction(M,[e])}}u.FUNCTION_MODULES.push(Te),ue(Te),Math.sign=Math.sign||function(e){return 0==(e=+e)||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var t=Math.exp(e);return(t+1/t)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var t=Math.exp(e);return(t-1/t)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)},ke(314146179365),De.getExpression=function(e,t){"last"!==e&&e||(e=N.length),"first"===e&&(e=1);var n=N[e-1];return n?new De(n):n},De.prototype={text:function(e,t){return t=t||u.EXPRESSION_DECP,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):Pe(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):He.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(G(this.symbol)&&0===this.symbol.dimensions())return this;var e,n=arguments[0],r=1;"string"==typeof n?e="%"===n.charAt(0)?De.getExpression(n.substr(1)).text():n:n instanceof De||k(n)?e=n.text():(e=this.symbol.text(),r--);var i=arguments[r]||{};return new De(ce("PARSE2NUMBER",(function(){return t.parse(e,i)}),!0))},buildFunction:function(e){return $e.build(this.symbol,e)},isNumber:function(){return H(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return fe(t.parse(this.symbol)).isImaginary()},variables:function(){return F(this.symbol)},toString:function(){try{return X(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch(e){return""}},toDecimal:function(e){u.precision=e;var t=Pe(this.symbol,"decimals");return u.precision=void 0,t},isFraction:function(){return P(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,n){return new De(this.symbol.sub(t.parse(e),t.parse(n)))},operation:function(e,n){return D(n)?n=n.symbol:k(n)||(n=t.parse(n)),new De(t[e](this.symbol.clone(),n.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new De(t.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(X(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){k(e)||(e=t.parse(e));try{return t.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){k(e)||(e=t.parse(e));try{return fe(t.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){k(e)||(e=t.parse(e));try{return fe(t.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new De(this.symbol.getNum())},denominator:function(){return new De(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}},De.prototype.toTeX=De.prototype.latex,Fe.prototype={fromScientific:function(e){var t=String(e).toLowerCase().split("e");return this.coeff=t[0],this.exponent=t[1],this},convert:function(e){var t=e.split("."),n=t[0]||"",r=t[1]||"";n=Fe.removeLeadingZeroes(n),r=Fe.removeTrailingZeroes(r);var i=n.length,s=n+r,o=Fe.leadingZeroes(s).length;this.exponent=i-(o+1);var a=Fe.removeLeadingZeroes(s);this.coeff=a.charAt(0)+"."+(a.substr(1,a.length)||"0");var u=this.coeff.split(".")[1]||"";return this.decp="0"===u?0:u.length,this.dec=r,this.wholes=n,this},round:function(e){var t=this.copy();if(0===(e=Number(e)))t.coeff=t.coeff.charAt(0);else{var n=this.coeff.substring(0,e+1),r=this.coeff.substring(e+1,e+3),i=r.charAt(0);r.charAt(1)>4&&i++,t.coeff=n+i}return t},copy:function(){var e=new Fe(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;if(u.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e)t=0===this.decp?this.wholes:this.coeff;else{var n=void 0===e?this.coeff:Fe.round(this.coeff,Math.min(e,this.decp||1));t=0===this.exponent?n:n+"e"+this.exponent}return(-1===this.sign?"-":"")+t}},Fe.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},Fe.leadingZeroes=function(e){var t=e.match(/^(0*).*$/);return t?t[1]:""},Fe.removeLeadingZeroes=function(e){var t=e.match(/^0*(.*)$/);return t?t[1]:""},Fe.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):""},Fe.round=function(e,t){var n=ne(e,t),r=t-String(n).split(".").pop().length;return r>0&&(n+=new Array(r+1).join(0)),n},Be.create=function(e){if(e instanceof Be)return e;var t="-"===(e=e.toString()).charAt(0);t&&(e=e.substr(1,e.length-1));var n=new Be(e);return t&&n.negate(),n},Be.isFrac=function(e){return e instanceof Be},Be.quick=function(e,t){var r=new Be;return r.num=new n(e),r.den=new n(t),r},Be.simple=function(e){for(var t=String(O(e)).split("."),n=t.join(""),r=1,i=(t[1]||"").length,s=0;s<i;s++)r+="0";return Be.quick(n,r).simplify()},Be.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new we("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num,s=e.num;return t.equals(n)?r.num=i.add(s):(r.num=i.multiply(n).add(s.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone(),n=e.clone();return t.num=t.num.multiply(n.den),t.den=t.den.multiply(n.den),n.num=n.num.multiply(this.den),n.den=n.den.multiply(this.den),t.num=t.num.mod(n.num),t.simplify()},simplify:function(){var e=n.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new Be;return e.num=new n(this.num),e.den=new n(this.den),e},decimal:function(e){var t=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||u.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var l=n.shift();if(0===n.length)return t+l.toString();if(s===e){var c=[];for(s=0;s<2;s++)c.unshift(n.pop());n.push(Math.round(c.join(".")))}return t+(l.toString()+".")+n.join("")},toDecimal:function(e){return(e=e||u.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new Be(e));var t=this.qcompare(e);return t[0].equals(t[1])},absEquals:function(e){isNaN(e)||(e=new Be(e));var t=this.qcompare(e);return t[0].abs().equals(t[1])},greaterThan:function(e){isNaN(e)||(e=new Be(e));var t=this.qcompare(e);return t[0].gt(t[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new Be(e));var t=this.qcompare(e);return t[0].lt(t[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e=this.den;if(!this.num.equals(0)){var t=this.num.isNegative();this.den=this.num.abs(),this.num=e,t&&(this.num=this.num.multiply(-1))}return this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return Be.quick(n.gcd(e.num,this.num),n.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return u.USE_BIG?new r(this.num.toString()).div(new r(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},Ge.imaginary=function(){var e=new Ge(u.IMAGINARY);return e.imaginary=!0,e},Ge.infinity=function(e){var t=new Ge("Infinity");return-1===e&&t.negate(),t},Ge.shell=function(e,t){var n=new Ge(t);return n.group=e,n.symbols={},n.length=0,n},Ge.unwrapSQRT=function(e,t){var n=e.power;if(e.fname===y&&(e.isLinear()||t)){var r=e.args[0].clone();r.power=r.power.multiply(new Be(.5)),r.multiplier=r.multiplier.multiply(e.multiplier),e=r,t&&(e.power=n.multiply(new Be(.5)))}return e},Ge.hyp=function(e,n){return e=e||new Ge(0),n=n||new Ge(0),t.sqrt(t.add(t.pow(e.clone(),new Ge(2)),t.pow(n.clone(),new Ge(2))))},Ge.toPolarFormArray=function(e){var n,r;return n=e.realpart(),r=e.imagpart(),[Ge.hyp(n,r),n.equals(0)?t.parse("pi/2"):t.trig.atan(t.divide(r,n))]},Ge.unwrapPARENS=function(e){if(""===e.fname){var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),""===e.fname?Ge.unwrapPARENS(t):t}return e},Ge.create=function(e,n){return n=void 0===n?1:n,t.parse("("+e+")^("+n+")")},Ge.prototype={getNth:function(e){var n=fe(t.pow(t.parse(this.multiplier),t.parse(e).invert())),r=t.parse(ne(n));return fe(t.pow(r,t.parse(e))).equals(t.parse(this.multiplier))?r:n},isToNth:function(e){var n,r=this.getNth(e),i=Z(r);return this.group===g?(n=!0,this.each((function(t){t.isToNth(e)||(n=!1)}))):n=this.group===l||Z(t.divide(t.parse(this.power),t.parse(e))),i&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group===g){var e=[],n=this.multiplier.sign();this.each((function(t){var n=t.power;if(k(n)||n.equals(1))return this.clone();e.push(n)}));var r=new Be(ee(e)),i=(n=this.multiplier.sign(),this.multiplier.clone().abs()),s=Te.ifactor(i),o=new Be(1),a=new Be(1);for(var u in s){var l=new Be(s[u]);l.lessThan(r)||(l=l.divide(r).subtract(new Be(1)),a=a.multiply(new Be(u))),o=o.multiply(t.parse(Q(u)+"^"+Q(l)).multiplier)}var c=new Ge(a);this.each((function(e){(e=e.clone()).power=e.power.divide(r),c=t.multiply(c,e)}));var p=t.symfunction(w,[c]);return p.power=r,p.multiplier=n<0?o.negate():o,p}return this.clone()},equals:function(e){return k(e)||(e=new Ge(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return k(e)||(e=new Ge(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return k(e)||(e=new Ge(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return k(e)||(e=new Ge(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return k(e)||(e=new Ge(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!Z(n)||n<0)return!1;if(t===l||t===p||this.isConstant(!0))return!0;var r=F(this);if(t===g&&1===r.length){var i=r[0];if(!i)return!0;for(var s in this.symbols){var o=this.symbols[s];if(o.group===h&&!o.args[0].isConstant())return!1;if(!o.contains(i)&&!o.isConstant(!0))return!1}return!0}if(this.isComposite()||t===g&&e){if(!e&&r.length>1)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(e,n){var r;return this.group!==m&&this.group!==p||this.value!==e?this.group===g&&this.isLinear()?(r=new Ge(1),this.each((function(n){n.contains(e,!0)||(r=t.multiply(r,n.clone()))})),r.multiplier=r.multiplier.multiply(this.multiplier)):this.group!==v||this.isLinear()?this.group===v&&this.isLinear()?(r=new Ge(0),this.each((function(n){if(!n.contains(e)){var i=n.clone();i.multiplier=i.multiplier.multiply(this.multiplier),r=t.add(r,i)}})),r.equals(0)&&(r=new Ge(this.multiplier))):r=this.group===f&&this.power.contains(e,!0)||this.group===h&&this.contains(e)?new Ge(this.multiplier):this.clone():r=new Ge(this.multiplier):r=new Ge(n?0:this.multiplier),r},toArray:function(e,n){n=n||{arr:[],add:function(e,n){var r=this.arr[n];this.arr[n]=r?t.add(r,e):e}};var r=this.group;if(r===p&&this.contains(e))n.add(new Ge(this.multiplier),this.power);else if(r===g){var i=this.stripVar(e),s=t.divide(this.clone(),i.clone()),o=s.isConstant()?0:s.power;n.add(i,o)}else if(r===m&&this.value===e)this.each((function(t,r){n.add(t.stripVar(e),r)}));else if(r===v)this.each((function(t){t.toArray(e,n)}));else{if(this.contains(e))throw new Ne("Cannot convert to array! Exiting");n.add(this.clone(),0)}n=n.arr;for(var a=0;a<n.length;a++)n[a]||(n[a]=new Ge(0));return n},hasFunc:function(e){var t=this.group===h||this.group===f;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(e,n){e=k(e)?e.clone():t.parse(e),n=k(n)?n.clone():t.parse(n),e.group!==l&&e.group!==c||A("Cannot substitute a number. Must be a variable");var r,i=!1,s=e.multiplier.equals(1),o=this.multiplier.clone();if(this.value===e.value&&(this.group!==m&&e.group!==m||this.group===m&&e.group===m))(s||e.multiplier.equals(this.multiplier))&&(e.isLinear()?r=n:e.power.equals(this.power)&&(r=n,i=!0),e.multiplier.equals(this.multiplier)&&(o=new Be(1)));else if(this.group===g||this.previousGroup===g)r=new Ge(1),this.each((function(i){var s=t.parse(i.sub(e,n));r=t.multiply(r,s)}));else if(this.isComposite()){var a=this.clone();if(e.isComposite()&&a.isComposite()&&a.isLinear()&&e.isLinear()){var u=function(e,t){for(var n in e.symbols){var r=e.symbols[n];if(r.isComposite()&&u(r,t)||r.equals(t))return!0}return!1};for(var p in e.symbols)if(!u(a,e.symbols[p]))return a.clone();r=t.add(t.subtract(a.clone(),e),n)}else r=new Ge(0),a.each((function(i){r=t.add(r,i.sub(e,n))}))}else if(this.group===f)r=t.parse(this.value).sub(e,n);else if(this.group===h){for(var v=[],d=0;d<this.args.length;d++){var w=this.args[d];k(w)||(w=t.parse(w)),v.push(w.sub(e,n))}r=t.symfunction(this.fname,v)}if(r){if(!i){var y=this.group===f?this.power.sub(e,n):t.parse(this.power);r=t.pow(r,y)}return r.multiplier=r.multiplier.multiply(o),r}return this.clone()},isMonomial:function(){if(this.group===p)return!0;if(this.group!==g)return!1;for(var e in this.symbols)if(this.symbols[e].group!==p)return!1;return!0},isPi:function(){return this.group===p&&"pi"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return"e"===this.value},isSQRT:function(){return this.fname===y},isConstant:function(e,t){if(t&&this.group===g)for(var n in this.symbols)if(this.symbols[n].isConstant(!0))return!0;if("functions"===e&&this.isComposite()){var r=!0;return this.each((function(n){n.isConstant(e,t)||(r=!1)}),!0),r}if("all"===e&&(this.isPi()||this.isE()))return!0;if(e&&this.group===h){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(e))return!1;return!0}return e?H(this):this.value===d},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new Ge(0);if(this.isComposite()){var e=new Ge(0);return this.each((function(n){e=t.add(e,n.realpart())})),e}return this.isImaginary()?new Ge(0):this.clone()},imagpart:function(){if(this.group===p&&this.isImaginary())return new Ge(this.multiplier);if(this.isComposite()){var e=new Ge(0);return this.each((function(n){e=t.add(e,n.imagpart())})),e}return this.group===g?this.stripVar(u.IMAGINARY):new Ge(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===p)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return!(this.group!==g||!this.symbols[e])&&this.symbols[e].isLinear(e)}return this.power.equals(1)},containsFunction:function(e){if("string"==typeof e&&(e=[e]),this.group===h&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===l&&this.multiplier.equals(1))return this;var n=this.power;if(this.group!==f&&e.group===l){var r=e.multiplier;this.group!==l||r.isInteger()||this.convert(c),this.power=n.equals(1)?r.clone():n.multiply(r),this.group===c&&Z(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(l))}else this.group!==f&&(n=new Ge(n),this.convert(f)),this.power=t.multiply(n,e);return this},setPower:function(e,t){if(this.group===l&&this.multiplier.equals(1))return this;if(this.group!==f||k(e)){var n=!1;k(e)&&(e.group===l?e=e.multiplier:n=!0);var r=n?f:c;this.power=e,this.group===l&&r&&this.convert(r,t)}else this.group=this.previousGroup,delete this.previousGroup,this.group===l?(this.multiplier=new Be(this.value),this.value=d):this.power=e;return this},isInverse:function(){return this.group===f?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new Ge(0),r=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new n(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new n(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new Be(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===m&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===l?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Pe(this,"decimals")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===h||this.previousGroup===h)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===f){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==v&&this.group!==m||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),k(this.power)?this.power.negate():this.group===g&&t?this.each((function(e){return e.invert()})):this.power&&this.group!==l&&this.power.negate(),this},distributeMultiplier:function(e){var t=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&t&&this.group!==g&&!this.multiplier.equals(1)){for(var n in this.symbols){var r=this.symbols[n];r.multiplier=r.multiplier.multiply(this.multiplier),r.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e=this.power;for(var n in this.symbols){var r=this.symbols[n];r.group===f?r.power=t.multiply(r.power,new Ge(e)):this.symbols[n].power=this.symbols[n].power.multiply(e)}this.toLinear()}return this},convert:function(e,t){if(e>h){var n=this.clone();this.symbols={},e===g?n.toUnitMultiplier():this.toUnitMultiplier(),this.group===h&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1}else if(e===f)this.group===l&&this.multiplier.equals(1)||(this.group!==f&&(this.previousGroup=this.group),this.group===l?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Pe(this,"hash"),this.group=f);else if(e===l){var r=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new Ge(this.group===c?r*Math.pow(this.value,this.power):r).clone(this)}else e===c&&this.group===l&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=c);return this},insert:function(e,n){if(k(e)||A("Object "+e+" is not of type Symbol!"),this.symbols){var r=this.group;if(r>h){var i=e.keyForGroup(r),s=i in this.symbols&&this.symbols[i];if("add"===n){var o=i;s?(this.symbols[o]=t.add(s,e),this.symbols[o].multiplier.equals(0)&&(delete this.symbols[o],this.length--,0===this.length&&(this.convert(l),this.multiplier=new Be(0)))):(this.symbols[i]=e,this.length++)}else e.group===c&&Z(e.power)&&e.convert(l),e.group!==f?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),s&&((e=t.multiply(le(this.symbols,i),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new Ge(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[i]=e,this.length++);0===this.length&&this.convert(l),this.group!==v&&this.group!==g||this.updateHash()}}return this},attach:function(e){if(X(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"add");return this}return this.insert(e,"add")},combine:function(e){if(X(e)){for(var t=0;t<e.length;t++)this.insert(e[t],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==l)if(this.group===h){for(var e="",t=this.args,n=this.fname===w,r=0;r<t.length;r++)e+=(0===r?"":",")+Pe(t[r]);var i=n?"":this.fname;this.value=i+(n?e:Q(e))}else this.group!==p&&this.group!==m&&(this.value=Pe(this,"hash"))},keyForGroup:function(e){var t,n=this.group;if(n===l)t=this.value;else if(n===p||n===c)t=e===m?this.power.toDecimal():this.value;else if(n===h)t=e===m?this.power.toDecimal():Pe(this,"hash");else{if(n===m)return e===g?Pe(this,"hash"):e===v?this.power.equals(1)?this.value:Q(Pe(this,"hash"))+u.POWER_OPERATOR+this.power.toDecimal():e===m?this.power.toString():this.value;n===v?(e===v&&(t=Pe(this,"hash")),t=e===m?this.power.toDecimal():this.value):n===g?t=e===m?this.power.toDecimal():Pe(this,"hash"):n===f&&(t=e===m?Pe(this.power):Pe(this,"hash"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols){var o=this.symbols[s];!r||o.group!==m&&o.group!==v?i.push(e?e(o,t):o):i=i.concat(o.collectSymbols())}else i.push(this);return null===n&&(n=void 0),i.sort(n)},latex:function(e){return He.latex(this,e)},text:function(e){return Pe(this,e)},isOne:function(e){var t=e?"absEquals":"equals";return this.group===l?this.multiplier[t](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===v||e===m||t===m||t===v},isCombination:function(){var e=this.group,t=this.previousGroup;return e===g||t===g},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return k(e)||(e=new Ge(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e,n;if(n=this.clone(),this.group===g&&this.power.lessThan(0)&&(n=t.expand(n)),n.power.lessThan(0)||n.group===f&&n.power.multiplier.lessThan(0)){var r=t.parse(n.multiplier.den);(e=n.toUnitMultiplier()).power.negate(),e=t.multiply(r,e)}else if(n.group===g)for(var i in e=t.parse(n.multiplier.den),n.symbols){var s=n.symbols[i];(s.power<0||s.group===f&&s.power.multiplier.lessThan(0))&&(e=t.multiply(e,n.symbols[i].clone().invert()))}else e=t.parse(n.multiplier.den);return e},getNum:function(){var e,n;return(n=this.clone()).group===g&&n.power.lessThan(0)&&(n=t.expand(n)),n.power.greaterThan(0)&&n.group!==g||n.group===f&&n.power.multiplier.greaterThan(0)?e=t.multiply(t.parse(n.multiplier.num),n.toUnitMultiplier()):n.group===g?(e=t.parse(n.multiplier.num),n.each((function(n){(n.power>0||n.group===f&&n.power.multiplier>0)&&(e=t.multiply(e,n.clone()))}))):e=t.parse(n.multiplier.num),e},toString:function(){return this.text()}};var je={convert:function(e,t){var n;if(0===e)n=[0,1];else if(e<1e-6||e>1e20){var r=this.quickConversion(Number(e));if(r[1]<=1e20){var i=Math.abs(e),s=e/i;(n=this.fullConversion(i.toFixed((r[1]+"").length-1)))[0]=n[0]*s}else n=r}else n=this.fullConversion(e);return n},quickConversion:function(e){return function(e){Fe.isScientific(e)&&(e=O(e));var t,n=function(e){"string"!=typeof e&&(e=e.toString());var t="",n=e.charAt(0);return"-"===n?(e=e.substr(1,e.length),t="-"):"+"===n&&(e=e.substr(1,e.length)),{sign:t,value:e}}(e),r=n.value.split(".");t=1===r.length?r[0]:r[0]+r[1];var i=r[1]?r[1].length:0,s=`1${"0".repeat(i)}`;return"0"!==t&&(t=t.replace(/^0+/,"")),[n.sign+t,s]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){++o>1e4&&(t=!0);var u=Math.floor(a),l=n+u*i,c=r+u*s,p=a-u;p<1e-16&&(t=!0),a=1/p,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||o>30)&&(t=!0)}return[l,c]}},He={parser:function(){var e=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],t=new Ve;for(var n in t)-1===e.indexOf(n)&&delete t[n];return t.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),t.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),t.getBrackets()["{"].maps_to=void 0,t}(),space:"~",dot:" \\cdot ",latex:function(e,n){if(e.clone&&(e=e.clone()),e instanceof t.classes.Collection&&(e=e.elements),X(e)){for(var r=[],i=0;i<e.length;i++){var s=e[i];k(s)||(s=t.parse(s)),r.push(this.latex(s,n))}return this.brackets(r.join(", "),"square")}if(V(e)){var o="\\begin{pmatrix}\n";for(i=0;i<e.elements.length;i++){for(var a=[],u=e.elements[i],l=0;l<u.length;l++)a.push(this.latex(u[l],n));o+=a.join(" & "),i<e.elements.length-1&&(o+="\\\\\n")}return o+"\\end{pmatrix}"}if(G(e)){for(o="\\left[",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],n)+" "+(i!==e.elements.length-1?",\\,":"");return o+"\\right]"}if(j(e)){for(o="\\{",i=0;i<e.elements.length;i++)o+=this.latex(e.elements[i],n)+" "+(i!==e.elements.length-1?",\\,":"");return o+"\\}"}var p,f="decimal"===n||"decimals"===n,h=(e=e.clone()).power,m=z(h),v=e.multiplier.lessThan(0);if(e.group===c&&f)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),p=f?[String(e.multiplier.toDecimal()),""]:[e.multiplier.num,e.multiplier.den];var d,w=this.value(e,m,n,v);m&&h.negate(),f?(d=k(h)?He.latex(h,n):String(h.toDecimal()),"1"===String(d)&&(d="")):d=k(h)?this.latex(h,n):this.formatFrac(h,!0);var y=["",""];return y[m?1:0]=d,((v?"-":"")+this.set(p,w,y,e.group===g)).replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,t,n,r){var i=e.group,s=e.previousGroup,o=["",""],a=t?1:0;if(e.isInfinity)o[a]="\\infty";else if(i===p||i===c||s===p||s===c||s===l){(P=this.formatSubscripts(e.value)).replace&&(P=P.replace(/(.+)_$/,"$1\\_"));var m=String(P).split("_"),d=this.greek[m[0]];d&&(m[0]=d,P=m.join("_")),(e=this.symbols[m[0]])&&(m[0]=e,P=m.join("_")),o[a]=P}else if(i===h||s===h){for(var N=[],E=e.fname,x=0;x<e.args.length;x++){var q;q="string"==typeof(A=e.args[x])?A:this.latex(A,n),N.push(q)}if(E===y)o[a]="\\sqrt"+this.braces(N.join(","));else if(E===b)o[a]=this.brackets(N.join(","),"abs");else if(E===w)o[a]=this.brackets(N.join(","),"parens");else if("limit"===E)o[a]=" \\lim\\limits_{"+N[1]+" \\to "+N[2]+"} "+N[0];else if("integrate"===E)o[a]="\\int"+this.braces(N[0])+this.braces("d"+N[1]);else if("defint"===E)o[a]="\\int\\limits_"+this.braces(N[1])+"^"+this.braces(N[2])+" "+N[0]+" d"+N[3];else if(E===S||E===M){var A;(A=e.args[0]).power.equals(1)&&(A.isComposite()||A.isCombination())&&(N[0]=this.brackets(N[0])),o[a]=N[0]+(E===S?"!":"!!")}else if("floor"===E)o[a]="\\left \\lfloor"+this.braces(N[0])+"\\right \\rfloor";else if("ceil"===E)o[a]="\\left \\lceil"+this.braces(N[0])+"\\right \\rceil";else if(E===u.LOG&&N.length>1)o[a]="\\mathrm"+this.braces(u.LOG)+"_"+this.braces(N[1])+this.brackets(N[0]);else if(E===u.LOG10)o[a]="\\mathrm"+this.braces(u.LOG)+"_"+this.braces(10)+this.brackets(N[0]);else if("sum"===E){var C=N[0],I=N[1],U=N[2],L=N[3];o[a]="\\sum\\limits_{"+this.braces(I)+"="+this.braces(U)+"}^"+this.braces(L)+" "+this.braces(C)}else if("product"===E)C=N[0],I=N[1],U=N[2],L=N[3],o[a]="\\prod\\limits_{"+this.braces(I)+"="+this.braces(U)+"}^"+this.braces(L)+" "+this.braces(C);else if("nthroot"===E)o[a]="\\sqrt["+N[1]+"]"+this.braces(N[0]);else if("mod"===E)o[a]=N[0]+" \\bmod "+N[1];else if("realpart"===E)o[a]="\\operatorname{Re}"+this.brackets(N[0]);else if("imagpart"===E)o[a]="\\operatorname{Im}"+this.brackets(N[0]);else{var _=""!==E?"\\mathrm"+this.braces(E.replace(/_/g,"\\_")):"";e.isConversion?o[a]=_+this.brackets(N.join(""),"parens"):o[a]=_+this.brackets(N.join(","),"parens")}}else if(e.isComposite()){var O=e.collectSymbols().sort(i===v||s===v?function(e,t){return t.group-e.group}:function(e,t){var n=k(e.power)?-1:e.power;return(k(t.power)?-1:t.power)-n}),R=[],T=O.length;for(x=0;x<T;x++)R.push(He.latex(O[x],n));var P=R.join("+");o[a]=e.isLinear()&&e.multiplier.equals(1)&&!r?P:this.brackets(P,"parens")}else if(i===g||s===f||s===g){i===g&&e.distributeExponent();var D=[],F=[],B=[],G=[],V=0,j=0,H=function(e,t,n){if(n>1&&t.length>0)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\left\(.+\\right\)\^\{.+\}$/g.test(o)||/^\\left\(.+\\right\)$/g.test(o)||(e[s]=He.brackets(o,"parens"))}return e};e.each((function(t){var r;z(t.power)?(r=He.latex(t.invert(),n),j++,t.isComposite()&&(1!=e.multiplier.den&&1==Math.abs(t.power)&&(r=He.brackets(r,"parens")),B.push(D.length)),D.push(r)):(r=He.latex(t,n),V++,t.isComposite()&&(1!=e.multiplier.num&&1==Math.abs(t.power)&&(r=He.brackets(r,"parens")),G.push(F.length)),F.push(r))})),H(F,G,V),o[0]=F.join(this.dot),H(D,B,j),o[1]=D.join(this.dot)}return o},set:function(e,t,n,r){var i=function(e){return/^\\left\(.+\\right\)$/.test(e)};if(n&&(n=this.formatP(n)),r){var s=n[0];n[0]=""}t=this.merge(t,n);var o=e[0],a=e[1],u=t[0],l=t[1];u&&1===Number(o)&&(o=""),1===Number(a)&&(a="");var c=this.join(o,u,i(u)?"":this.dot),p=this.join(a,l,i(l)?"":this.dot);if(c&&p){var f=this.frac(c,p);return r&&s&&(f=this.brackets(f)+s),f}return c},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:""},formatSubscripts:function(e){for(var t=e.toString().split("_"),n="";t.length>1;)t.length>0&&(n="_"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]="^"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString(),r=e.den.toString();return t&&"1"===n&&"1"===r?"":"1"===r?n:this.frac(n,r)},frac:function(e,t){return"\\frac"+this.braces(e)+this.braces(t)},braces:function(e){return"{"+e+"}"},brackets:function(e,t){var n={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]}[t=t||"parens"];return"\\left"+n[0]+e+"\\right"+n[1]},filterTokens:function(e){var t=[];X(e)&&(t.type=e.type);for(var n=["\\","left","right","big","Big","large","Large"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];"\\"===s.value&&"\\"===o.value?t.push(s):X(s)?t.push(He.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){var t,n="",r=this.filterTokens(e),i={cdot:"",times:"",infty:"Infinity"},s=function(e){return r[void 0===e?++t:t+=e]},o=function(){return He.parse(s())},a=function(e){return e in i?i[e]:"*"===e&&"&"===r[t+1].value?(s(2),","):"&"===e?(s(),","):"\\"===e?"],[":e};for(t=0,p=r.length;t<p;t++){var u=r[t];if("frac"===u.value)n+=o()+"/"+o();else if(u.value in He.symbols)if(u.value===y&&"vector"===r[t+1].type&&"Set"===r[t+2].type){var l=o();n+=o()+"^"+Q("1/"+l)}else n+=u.value+o();else if("int"===u.value){var c=o();t++,h=a((h=s().value).substring(1,h.length)),n+="integrate"+Q(c+","+h)}else if("int_"===u.value){var p=o();if(t++,void 0===(f=s().value)){t--;var f=o()}if(c=o(),","===(h=s().value))var h=s().value;"differentialD"===h&&(t++,h=s().value),"mathrm"===h&&(t++,h=s().value),n+="defint"+Q(c+","+p+","+f+","+h)}else if(u.value&&u.value.startsWith("int_"))p=u.value.replace("int_",""),console.log("uppernow"),t++,void 0===(f=s().value)&&(t--,f=o()),c=o(),","===(h=s().value)&&(h=s().value),"differentialD"===h&&(t++,h=s().value),"mathrm"===h&&(t++,h=s().value),n+="defint"+Q(c+","+p+","+f+","+h);else if("mathrm"===u.value)n+=(c=r[++t][0].value)+o();else if("sum_"===u.value||"prod_"===u.value){var m="sum_"===u.value?"sum":"product",g=s();t++;var v=o();c=o(),n+=m+Q([c,a(g[0]),a(g[2]),a(v)].join(","))}else"lim_"===u.value?(g=s(),n+="limit"+Q([o(),a(g[0]),a(g[2])].join(","))):"begin"===u.value?(g=s(),Array.isArray(g)&&"matrix"===g[0].value&&(n+="matrix([")):"end"===u.value?(g=s(),Array.isArray(g)&&"matrix"===g[0].value&&(n+="])")):Array.isArray(u)?n+=a(He.parse(u)):n+=a(u.value.toString())}return Q(n)}};function Xe(e){G(e)?this.elements=e.items.slice(0):X(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function Ze(){var e,t,n,r,i=arguments,s=i.length,o=[];if(V(i))for(e=0;e<s;e++)o.push(i[e].slice(0));else for(e=0;e<s;e++)t=i[e],G(t)&&(t=t.elements),X(t)||(t=[t]),r=t.length,n&&n!==r&&A("Unable to create Matrix. Row dimensions do not match!"),o.push(t),n=r;this.elements=o}function ze(e){if(this.elements=[],G(e)||(e=Xe.fromArray(arguments)),e)for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}Xe.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},Xe.fromArray=function(e){var t=new Xe;return t.elements=e,t},Xe.fromSet=function(e){return Xe.fromArray(e.elements)},Xe.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){k(t)||(t=new Ge(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return ce("SAFE",(function(){return t.pow(this.dot(this.clone()),new Ge(.5))}),void 0,this)},eql:function(e){var n=this.elements.length,r=e.elements||e;if(n!==r.length)return!1;do{if(Math.abs(t.subtract(this.elements[n-1],r[n-1]).valueOf())>PRECISION)return!1}while(--n);return!0},clone:function(){for(var e=new Xe,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var t=[];return this.each((function(n,r){t.push(e(n,r))})),new Xe(t)},each:function(e){var t,n=this.elements.length,r=n;do{t=r-n,e(this.elements[t],t+1)}while(--n)},toUnitVector:function(){return ce("SAFE",(function(){var e=this.modulus();return 0===e.valueOf()?this.clone():this.map((function(n){return t.divide(n,e)}))}),void 0,this)},angleFrom:function(e){return ce("SAFE",(function(){var n=e.elements||e;if(this.elements.length!==n.length)return null;var r=new Ge(0),i=new Ge(0),s=new Ge(0);this.each((function(e,o){r=t.add(r,t.multiply(e,n[o-1])),i=t.add(i,t.multiply(e,e)),s=t.add(s,t.multiply(n[o-1],n[o-1]))})),i=t.pow(i,new Ge(.5)),s=t.pow(s,new Ge(.5));var o=t.multiply(i,s);if(0===o.valueOf())return null;var a=t.divide(r,o),u=a.valueOf();return u<-1&&(a=-1),u>1&&(a=1),new Ge(Math.acos(a))}),void 0,this)},isParallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:t<=PRECISION},isAntiparallelTo:function(e){var t=this.angleFrom(e).valueOf();return null===t?null:Math.abs(t-Math.PI)<=PRECISION},isPerpendicularTo:function(e){var t=this.dot(e);return null===t?null:Math.abs(t)<=PRECISION},add:function(e){return ce("SAFE",(function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map((function(e,r){return t.add(e,n[r-1])}))}),void 0,this)},subtract:function(e){return ce("SAFE",(function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map((function(e,r){return t.subtract(e,n[r-1])}))}),void 0,this)},multiply:function(e){return this.map((function(t){return t.clone()*e.clone()}))},x:function(e){return this.multiply(e)},dot:function(e){return ce("SAFE",(function(){var n=e.elements||e,r=new Ge(0),i=this.elements.length;if(i!==n.length)return null;do{r=t.add(r,t.multiply(this.elements[i-1],n[i-1]))}while(--i);return r}),void 0,this)},cross:function(e){var n=e.elements||e;if(3!==this.elements.length||3!==n.length)return null;var r=this.elements;return ce("SAFE",(function(){return new Xe([t.subtract(t.multiply(r[1],n[2]),t.multiply(r[2],n[1])),t.subtract(t.multiply(r[2],n[0]),t.multiply(r[0],n[2])),t.subtract(t.multiply(r[0],n[1]),t.multiply(r[1],n[0]))])}),void 0,this)},max:function(){var e,t=0,n=this.elements.length,r=n;do{e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e])}while(--n);return t},magnitude:function(){var e=new Ge(0);return this.each((function(n){e=t.add(e,t.pow(n,new Ge(2)))})),t.sqrt(e)},indexOf:function(e){var t,n=null,r=this.elements.length,i=r;do{t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=t+1)}while(--r);return n},text:function(e){return Pe(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(He.latex.call(He,this.elements[n],e));return"["+t.join(", ")+"]"}},Ze.identity=function(e){for(var t=new Ze,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new Ge(n===r?1:0))}return t},Ze.fromArray=function(e){function t(e){return Ze.apply(this,e)}return t.prototype=Ze.prototype,new t(e)},Ze.zeroMatrix=function(e,t){for(var n=new Ze,r=0;r<e;r++)n.elements.push(Xe.arrayPrefill(t,new Ge(0)));return n},Ze.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(e,t){var n=new Ze;return this.each((function(r,i,s){n.set(i,s,e.call(n,r),t)})),n},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||k(n)?n:new Ge(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){var t,n,r=this.rows(),i=this.cols();for(t=0;t<r;t++)for(n=0;n<i;n++)e.call(this,this.elements[t][n],t,n)},determinant:function(){if(!this.isSquare())return null;var e,n=this.toRightTriangular(),r=n.elements[0][0],i=n.elements.length-1,s=i;do{e=s-i+1,r=t.multiply(r,n.elements[e][e])}while(--i);return r},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&A("Cannot augment matrix. Rows don't match.");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new Ze,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=k(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||A("Matrix is not square!"),ce("SAFE",(function(){var e,n,r,i,s,o,a,u=this.elements.length,l=u,c=Ze.identity(u),p=this.augment(c).toRightTriangular(),f=p.elements[0].length,h=[];do{s=[],r=f,h[e=u-1]=[],o=p.elements[e][e];do{i=f-r,a=t.divide(p.elements[e][i],o.clone()),s.push(a),i>=l&&h[e].push(a)}while(--r);for(p.elements[e]=s,n=0;n<e;n++){s=[],r=f;do{i=f-r,s.push(t.subtract(p.elements[n][i].clone(),t.multiply(p.elements[e][i].clone(),p.elements[n][e].clone())))}while(--r);p.elements[n]=s}}while(--u);return Ze.fromArray(h)}),void 0,this)},toRightTriangular:function(){return ce("SAFE",(function(){var e,n,r,i,s,o=this.clone(),a=this.elements.length,u=a,l=this.elements[0].length;do{if(r=u-a,0===o.elements[r][r].valueOf())for(var c=r+1;c<u;c++)if((n=o.elements[c][r])&&0!==n.valueOf()){e=[],i=l;do{s=l-i,e.push(t.add(o.elements[r][s].clone(),o.elements[c][s].clone()))}while(--i);o.elements[r]=e;break}if(0!==o.elements[r][r].valueOf())for(c=r+1;c<u;c++){var p=t.divide(o.elements[c][r].clone(),o.elements[r][r].clone());e=[],i=l;do{s=l-i,e.push(s<=r?new Ge(0):t.subtract(o.elements[c][s].clone(),t.multiply(o.elements[r][s].clone(),p.clone())))}while(--i);o.elements[c]=e}}while(--a);return o}),void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new Ze,o=i;do{e=i-o,s.elements[e]=[],t=r;do{n=r-t,s.elements[e][n]=this.elements[n][e].clone()}while(--t)}while(--o);return s},canMultiplyFromLeft:function(e){var t=V(e)?e.elements.length:e.length;return this.elements[0].length===t},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return ce("SAFE",(function(){var n=e.elements||e;if(!this.canMultiplyFromLeft(n)){if(this.sameSize(e)){for(var r=new Ze,i=this.rows(),s=0;s<i;s++){var o=t.multiply(new Xe(this.elements[s]),new Xe(e.elements[s]));r.elements[s]=o.elements}return r}return null}var a,u,l,c,p,f=this.elements.length,h=f,m=n[0].length,g=this.elements[0].length,v=[];do{v[s=h-f]=[],a=m;do{u=m-a,l=new Ge(0),c=g;do{p=g-c,l=t.add(l,t.multiply(this.elements[s][p],n[p][u]))}while(--c);v[s][u]=l}while(--a)}while(--f);return Ze.fromArray(v)}),void 0,this)},add:function(e,n){var r=new Ze;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=t.add(i.clone(),e.elements[s][o].clone());n&&(a=n.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},subtract:function(e,n){var r=new Ze;return this.sameSize(e)&&this.eachElement((function(i,s,o){var a=t.subtract(i.clone(),e.elements[s][o].clone());n&&(a=n.call(r,a,i,e.elements[s][o])),r.set(s,o,a)})),r},negate:function(){return this.each((function(e){return e.negate()})),this},toVector:function(){if(1===this.rows()||1===this.cols()){var e=new Xe;return e.elements=this.elements,e}return this},toString:function(e,t){var n=this.rows(),r=[];e=void 0===e?"\n":e;for(var i=0;i<n;i++)r.push("["+this.elements[i].map((function(e){var n=t?e.multiplier.toDecimal():e.toString();return void 0!==e?n:""})).join(",")+"]");return"matrix"+Q(r.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var t=this.cols(),n=this.elements;return Y("\\begin{vmatrix}{0}\\end{vmatrix}",(function(){var r=[];for(var i in n){for(var s=[],o=0;o<t;o++)s.push(He.latex.call(He,n[i][o],e));r.push(s.join(" & "))}return r.join(" \\cr ")}))}},Ze.prototype.each=Ze.prototype.eachElement,ze.fromArray=function(e){function t(e){return ze.apply(this,e)}return t.prototype=ze.prototype,new t(e)},ze.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new ze,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var e=new ze;return this.each((function(t){e.add(t.clone())})),e},union:function(e){var t=this.clone();return e.each((function(e){t.add(e)})),t},difference:function(e){var t=this.clone();return e.each((function(e){t.remove(e)})),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return le(this.elements,t),!0;return!1},intersection:function(e){var t=new ze,n=this;return e.each((function(e){n.contains(e)&&t.add(e)})),t},intersects:function(e){return this.intersection(e).elements.length>0},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var $e={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":Te.gamma},gamma_incomplete:{"Math2.factorial":Te.factorial},Li:{"Math2.Ei":Te.Ei,"Math2.bigLog":Te.bigLog,Frac:Be},Ci:{"Math2.factorial":Te.factorial},Ei:{"Math2.factorial":Te.factorial},Si:{"Math2.factorial":Te.factorial},Shi:{"Math2.factorial":Te.factorial},Chi:{isInt:Z,nround:ne,"Math2.num_integrate":Te.num_integrate},factor:{"Math2.ifactor":Te.ifactor,Symbol:Ge},num_integrate:{"Math2.simpson":Te.simpson,nround:ne},fib:{even:ie}},reformat:{diff:function(e,t){var n=e.args[1].toString(),r="var f = "+$e.build(e.args[0].toString(),[n])+";";return t[1]+="var diff = "+Te.diff.toString()+";",t[1]+=r,["diff(f)("+n+")",t]}},getProperName:function(e){return{continued_fraction:"continuedFraction"}[e]||e},compileDependencies:function(e,t){var n=$e.dependencies[e],r=t&&t[1]?t[1]:"",i=t&&t[0]?t[0]:{};for(var s in n)if("object"!=typeof n[s]){var o=s.split(".");r+="var "+(o.length>1?o[1]:o[0])+"="+n[s]+";",i[s]=o.pop()}return[i,r]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each((function(e){e.group===h&&(t=$e.compileDependencies(e.fname,t))}));return t},build:function(e,n){e=ce("PARSE2NUMBER",(function(){return t.parse(e)}),!0);var r=F(e),i=[],s=[],o=function(e,n){""===e.fname&&(e=Ge.unwrapPARENS(e)),n=n||[];var r,a=[],u=e.group,m="",v=function(t){var r=t===g?"*":"+",i=[];for(var s in e.symbols){var a=e.symbols[s],u=o(a,n)[0];a.isComposite()&&(u=Q(u)),i.push(u)}var l=i.join(r);return l&&!e.multiplier.equals(1)?Q(l):l},d=function(t){var r;return t in Math?r="Math."+t:(t=$e.getProperName(t),-1===i.indexOf(t)&&(n.push("var "+t+" = "+Te[t].toString()+"; "),i.push(t)),r=t),r+=Q(e.args.map((function(e){return o(e,n)[0]})).join(",")),r};if(u===l?a.push(e.multiplier.toDecimal()):e.multiplier.equals(-1)?m="-":e.multiplier.equals(1)||a.push(e.multiplier.toDecimal()),u===p||u===c)r=e.value;else if(u===h)if(s=$e.compileDependencies(e.fname,s),s=$e.getArgsDeps(e,s),$e.reformat[e.fname]){var w=$e.reformat[e.fname](e,s);s=w[1],r=w[0]}else r=d(e.fname);else if(u===f){var y=e.previousGroup;y===l||y===p?r=e.value:y===h?(r=d(e.fname),s=$e.compileDependencies(e.fname,s),s=$e.getArgsDeps(e,s)):r=v(e.previousGroup)}else r=v(e.group);if(e.group!==l&&!e.power.equals(1)){var b=o(t.parse(e.power));n.push(b[1]),r="Math.pow"+Q(r+","+b[0])}return r&&a.push(m+r),[a.join("*"),n.join("").replace(/\n+\s+/g," ")]};n&&(r=n);var a=o(e);for(var u in s[0]){var m=s[0][u];a[1]=a[1].replace(u,m),s[1]=s[1].replace(u,m)}return new Function(r,(s[1]||"")+a[1]+" return "+a[0]+";")}};ue(t.CONSTANTS),ue(t.functions),t.initConstants(),t.error||(t.error=A),u.LOG_FNS={log:t.functions.log,log10:t.functions.log10};var Qe={allSame:U,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!T(e[t]))return!1;return!0},arguments2Array:pe,arrayAddSlices:function(e,t){t=t||20;var n,r,i=[];i.push(e[0]);for(var s=0;s<e.length-1;s++){n=e[s],r=(e[s+1]-n)/t;for(var o=0;o<t;o++)n+=r,i.push(n)}return i},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:ee,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length===t.length){for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}return!1},arrayUnique:oe,arrayGetVariables:function(e){for(var t=F(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(F(e[n]));return oe(t).sort()},arraySum:function(e,n){for(var r=new Ge(0),i=0;i<e.length;i++){var s=e[i];r=t.add(r,k(s)?s:t.parse(s))}return n?Number(r):r},block:ce,build:$e.build,clearU:function(e){var t=x.indexOf(e);-1!==t&&(x[t]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort((function(e,t){return e[0]-t[0]}));var s=[],o=[];for(i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,n,r){for(var i,s={},o=0;o<r.length;o++)s[r[o]]=new Ge(Math.floor(5*Math.random())+1);return ce("PARSE2NUMBER",(function(){i=t.parse(e,s).equals(t.parse(n,s))})),i},convertToVector:he,customError:C,customType:function(e){return void 0!==e&&e.custom},decompose_fn:te,each:re,evaluate:fe,even:ie,evenFraction:se,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new Ge(0));return e},firstObject:J,format:Y,generatePrimes:me,getCoeffs:function(e,n,r){var i=[];e.each((function(e){if(e.contains(n))var r=e.stripVar(n),s=t.divide(e.clone(),r.clone()).power.toDecimal();else r=e,s=0;var o=i[s];i[s]=o?t.add(o,r):r}),!0);for(var s=0;s<i.length;s++)i[s]||(i[s]=new Ge(0));return i},getU:function(e){for(var t="u",n=0,r=F(e);-1!==x.indexOf(t)||-1!==r.indexOf(t);)t="u"+n++;for(var i=0,s=x.length;i<=s;i++)if(!x[i]){x[i]=t;break}return t},importFunctions:function(){var e={};for(var n in t.functions)e[n]=t.functions[n][0];return e},inBrackets:Q,isArray:X,isExpression:D,isFraction:P,isInt:Z,isMatrix:V,isNegative:z,isNumericSymbol:H,isPrime:R,isReserved:I,isSymbol:k,isVariableSymbol:function(e){return e.group===p&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:G,keys:W,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var n,r;if(e.group===h&&""===e.fname?(n=Ge.unwrapPARENS(t.parse(e).toLinear()),r=t.parse(e.power)):e.group===c&&(n=t.parse(e.value),r=t.parse(e.power)),n&&r&&n.group===l&&r.group===l&&n.multiplier.isNegative()){for(var i=[],s=Ge.toPolarFormArray(fe(e))[0],o=t.arg(n),a=r.multiplier.den.toString(),p=r.multiplier.num.toString(),f=0;f<a;f++){var m=fe(t.parse(Y("(({0})+2*pi*({1}))/({2})",o,f,a))).multiplier.toDecimal();i.push(fe(t.parse(Y("(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",s,a,u.IMAGINARY,m,p))))}return Xe.fromArray(i)}if(e.isConstant(!0,!0)){var g=e.sign(),v=(o=fe(e.abs()),t.sqrt(o));i=[v.clone(),v.negate()],g<0&&(i=i.map((function(e){return t.multiply(e,Ge.imaginary())})))}else i=[t.parse(e)];return Xe.fromArray(i)},remove:le,reserveNames:ue,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:ne,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:O,separate:B,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Pe,validateName:_,variables:F,warn:L},Ye={groups:i,Symbol:Ge,Expression:De,Frac:Be,Vector:Xe,Matrix:Ze,Parser:Ve,Scientific:Fe,Fraction:je,Math2:Te,LaTeX:He,Utils:Qe,PARSER:t,PARENTHESIS:w,Settings:u,err:A,bigInt:n,bigDec:r,exceptions:Re},We=function(e,n,r,i){var o=!1,a=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(a)return s.setFunction(a[1],a[2].split(","),a[3]);e instanceof De&&(e=e.toString()),X(r)||(r=void 0===r?[]:[r]),r.forEach((function(n){if("numer"!==n){var i=t.functions[r];i&&1===i[1]&&(e=`${n}(${e})`)}else o=!0}));var l=ce("PARSE2NUMBER",(function(){return t.parse(e,n)}),o||u.PARSE2NUMBER);return i?N[i-1]=l:N.push(l),new De(l)};return We.rpn=function(e){return t.tokenize(t.toRPN(e))},We.convertToLaTeX=function(e,n){return t.toTeX(e,n)},We.convertFromLaTeX=function(e){var n=He.parse(t.tokenize(e));return new De(t.parse(n))},We.version=function(e){if(e)try{return Ye[e].version}catch(t){return"No module named "+e+" found!"}return"1.1.13"},We.getWarnings=function(){return q},We.setConstant=function(e,n){if(_(e),!I(e))if("delete"===n||""===n)delete t.CONSTANTS[e];else{if(isNaN(n))throw new Ne("Constant must be a number!");t.CONSTANTS[e]=n}return this},We.getConstant=function(e){return String(t.constant[e])},We.setFunction=K,We.getCore=function(){return Ye},We.getExpression=We.getEquation=De.getExpression,We.reserved=function(e){return e?x:x.join(", ")},We.clear=function(e,t){if("all"===e)N=[];else if("last"===e)N.pop();else if("first"===e)N.shift();else{var n=e?e-1:N.length;!0===t?N[n]=void 0:le(N,n)}return this},We.flush=function(){return this.clear("all"),this},We.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<N.length;i++){var s=t?He.latex(N[i],n):Pe(N[i],n);e?r[i+1]=s:r.push(s)}return r},We.register=function(e){var n=this.getCore();if(X(e))for(var r=0;r<e.length;r++)e&&this.register(e[r]);else if(e&&-1===u.exclude.indexOf(e.name)){if(e.dependencies)for(r=0;r<e.dependencies.length;r++)if(!n[e.dependencies[r]])throw new Error(Y("{0} requires {1} to be loaded!",e.name,e.dependencies[r]));var i=e.parent,s=e.build.call(n);i&&(n[i]||(n[e.parent]={}),("nerdamer"===i?this:n[i])[e.name]=s),e.visible&&(t.functions[e.name]=[s,e.numargs])}},We.validateName=_,We.validVarName=function(e){try{return _(e),-1===x.indexOf(e)}catch(e){return!1}},We.supported=function(){return W(t.functions)},We.numEquations=We.numExpressions=function(){return N.length},We.setVar=function(e,n){return _(e),e in t.CONSTANTS&&A("Cannot set value for constant "+e),"delete"===n||""===n?delete E[e]:E[e]=k(n)?n:t.parse(n),this},We.getVar=function(e){return E[e]},We.clearVars=function(){return E={},this},We.load=function(e){return e.call(this),this},We.getVars=function(e,t){var n={};if("object"===(e=e||"text"))n=E;else for(var r in E)"latex"===e?n[r]=E[r].latex(t):"text"===e&&(n[r]=E[r].text(t));return n},We.set=function(e,n){if("object"==typeof e)for(var i in e)We.set(i,e[i]);-1!==["SAFE"].indexOf(e)&&A("Cannot modify setting: "+e),"PRECISION"===e?(r.set({precision:n}),u.PRECISION=n,n>21&&this.set("USE_BIG",!0)):"USE_LN"===e&&!0===n?(u.LOG="LN",u.LOG10="log",t.functions.log=u.LOG_FNS.log10,t.functions.log[0]=function(e){return e.isConstant()?new Ge(Math.log10(e)):t.symfunction(u.LOG10,[e])},t.functions.LN=u.LOG_FNS.log,delete t.functions.log10):u[e]=n},We.get=function(e){return u[e]},We.updateAPI=function(e){var n=function(e){return function(){for(var n=[].slice.call(arguments),r=0;r<n.length;r++)n[r]=t.parse(n[r]);return new De(ce("PARSE2NUMBER",(function(){return t.callfunction(e,n)})))}};for(var r in t.functions)r in We&&!e||(We[r]=n(r))},We.replaceFunction=function(e,n,r){var i=t.functions[e],s=void 0===r?i[1]:r;t.functions[e]=[n.call(void 0,i[0],Ye),s]},We.setOperator=function(e,n){t.setOperator(e,n)},We.getOperator=function(e){return t.getOperator(e)},We.aliasOperator=function(e,n){t.aliasOperator(e,n)},We.tree=function(e){return t.tree(t.toRPN(t.tokenize(e)))},We.htmlTree=function(e,t){return'<div class="tree">\n    <ul>\n        <li>\n'+this.tree(e).toHTML(3,t)+"\n        </li>\n    </ul>\n</div>"},We.addPeeker=function(e,n){t.peekers[e]&&t.peekers[e].push(n)},We.removePeeker=function(e,n){le(t.peekers[e],n)},We.parse=function(e){return String(e).split(";").map((function(e){return t.parse(e)}))},We.updateAPI(),We}({bigInt:(i=function(e){"use strict";var t=1e7,n=7,r=9007199254740992,s=p(r),o=Math.log(r);function a(e,t){return void 0===e?a[0]:void 0!==t?10==+t?Y(e):H(e,t):Y(e)}function u(e,t){this.value=e,this.sign=t,this.isSmall=!1}function l(e){this.value=e,this.sign=e<0,this.isSmall=!0}function c(e){return-r<e&&e<r}function p(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function f(e){h(e);var n=e.length;if(n<4&&I(e,s)<0)switch(n){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*t;default:return e[0]+(e[1]+e[2]*t)*t}return e}function h(e){for(var t=e.length;0===e[--t];);e.length=t+1}function m(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function g(e){return e>0?Math.floor(e):Math.ceil(e)}function v(e,n){var r,i,s=e.length,o=n.length,a=new Array(s),u=0,l=t;for(i=0;i<o;i++)u=(r=e[i]+n[i]+u)>=l?1:0,a[i]=r-u*l;for(;i<s;)u=(r=e[i]+u)===l?1:0,a[i++]=r-u*l;return u>0&&a.push(u),a}function d(e,t){return e.length>=t.length?v(e,t):v(t,e)}function w(e,n){var r,i,s=e.length,o=new Array(s),a=t;for(i=0;i<s;i++)r=e[i]-a+n,n=Math.floor(r/a),o[i]=r-n*a,n+=1;for(;n>0;)o[i++]=n%a,n=Math.floor(n/a);return o}function y(e,n){var r,i,s=e.length,o=n.length,a=new Array(s),u=0,l=t;for(r=0;r<o;r++)(i=e[r]-u-n[r])<0?(i+=l,u=1):u=0,a[r]=i;for(r=o;r<s;r++){if(!((i=e[r]-u)<0)){a[r++]=i;break}i+=l,a[r]=i}for(;r<s;r++)a[r]=e[r];return h(a),a}function b(e,n,r){var i,s,o=e.length,a=new Array(o),c=-n,p=t;for(i=0;i<o;i++)s=e[i]+c,c=Math.floor(s/p),s%=p,a[i]=s<0?s+p:s;return"number"==typeof(a=f(a))?(r&&(a=-a),new l(a)):new u(a,r)}function S(e,n){var r,i,s,o,a=e.length,u=n.length,l=m(a+u),c=t;for(s=0;s<a;++s){o=e[s];for(var p=0;p<u;++p)r=o*n[p]+l[s+p],i=Math.floor(r/c),l[s+p]=r-i*c,l[s+p+1]+=i}return h(l),l}function M(e,n){var r,i,s=e.length,o=new Array(s),a=t,u=0;for(i=0;i<s;i++)r=e[i]*n+u,u=Math.floor(r/a),o[i]=r-u*a;for(;u>0;)o[i++]=u%a,u=Math.floor(u/a);return o}function N(e,t){for(var n=[];t-- >0;)n.push(0);return n.concat(e)}function E(e,t){var n=Math.max(e.length,t.length);if(n<=30)return S(e,t);n=Math.ceil(n/2);var r=e.slice(n),i=e.slice(0,n),s=t.slice(n),o=t.slice(0,n),a=E(i,o),u=E(r,s),l=E(d(i,r),d(o,s)),c=d(d(a,N(y(y(l,a),u),n)),N(u,2*n));return h(c),c}function x(e,n,r){return new u(e<t?M(n,e):S(n,p(e)),r)}function q(e){var n,r,i,s,o=e.length,a=m(o+o),u=t;for(i=0;i<o;i++){r=0-(s=e[i])*s;for(var l=i;l<o;l++)n=s*e[l]*2+a[i+l]+r,r=Math.floor(n/u),a[i+l]=n-r*u;a[i+o]=r}return h(a),a}function A(e,n){var r,i,s,o,a=e.length,u=m(a),l=t;for(s=0,r=a-1;r>=0;--r)s=(o=s*l+e[r])-(i=g(o/n))*n,u[r]=0|i;return[u,0|s]}function C(e,n){var r,i,s=Y(n),o=e.value,c=s.value;if(0===c)throw new Error("Cannot divide by zero");if(e.isSmall)return s.isSmall?[new l(g(o/c)),new l(o%c)]:[a[0],e];if(s.isSmall){if(1===c)return[e,a[0]];if(-1==c)return[e.negate(),a[0]];var v=Math.abs(c);if(v<t){i=f((r=A(o,v))[0]);var d=r[1];return e.sign&&(d=-d),"number"==typeof i?(e.sign!==s.sign&&(i=-i),[new l(i),new l(d)]):[new u(i,e.sign!==s.sign),new l(d)]}c=p(v)}var w=I(o,c);if(-1===w)return[a[0],e];if(0===w)return[a[e.sign===s.sign?1:-1],a[0]];r=o.length+c.length<=200?function(e,n){var r,i,s,o,a,u,l,c=e.length,p=n.length,h=t,g=m(n.length),v=n[p-1],d=Math.ceil(h/(2*v)),w=M(e,d),y=M(n,d);for(w.length<=c&&w.push(0),y.push(0),v=y[p-1],i=c-p;i>=0;i--){for(r=h-1,w[i+p]!==v&&(r=Math.floor((w[i+p]*h+w[i+p-1])/v)),s=0,o=0,u=y.length,a=0;a<u;a++)s+=r*y[a],l=Math.floor(s/h),o+=w[i+a]-(s-l*h),s=l,o<0?(w[i+a]=o+h,o=-1):(w[i+a]=o,o=0);for(;0!==o;){for(r-=1,s=0,a=0;a<u;a++)(s+=w[i+a]-h+y[a])<0?(w[i+a]=s+h,s=0):(w[i+a]=s,s=1);o+=s}g[i]=r}return w=A(w,d)[0],[f(g),f(w)]}(o,c):function(e,n){for(var r,i,s,o,a,u=e.length,l=n.length,c=[],p=[],m=t;u;)if(p.unshift(e[--u]),h(p),I(p,n)<0)c.push(0);else{s=p[(i=p.length)-1]*m+p[i-2],o=n[l-1]*m+n[l-2],i>l&&(s=(s+1)*m),r=Math.ceil(s/o);do{if(I(a=M(n,r),p)<=0)break;r--}while(r);c.push(r),p=y(p,a)}return c.reverse(),[f(c),f(p)]}(o,c),i=r[0];var b=e.sign!==s.sign,S=r[1],N=e.sign;return"number"==typeof i?(b&&(i=-i),i=new l(i)):i=new u(i,b),"number"==typeof S?(N&&(S=-S),S=new l(S)):S=new u(S,N),[i,S]}function I(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;n>=0;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function U(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(49)||void 0))}function L(e,t){for(var n,r,s,o=e.prev(),u=o,l=0;u.isEven();)u=u.divide(2),l++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(s=i(t[r]).modPow(u,e)).equals(a[1])&&!s.equals(o)){for(n=l-1;0!=n;n--){if((s=s.square().mod(e)).isUnit())return!1;if(s.equals(o))continue e}return!1}return!0}u.prototype=Object.create(a.prototype),l.prototype=Object.create(a.prototype),u.prototype.add=function(e){var t=Y(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,r=t.value;return t.isSmall?new u(w(n,Math.abs(r)),this.sign):new u(d(n,r),this.sign)},u.prototype.plus=u.prototype.add,l.prototype.add=function(e){var t=Y(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());var r=t.value;if(t.isSmall){if(c(n+r))return new l(n+r);r=p(Math.abs(r))}return new u(w(r,Math.abs(n)),n<0)},l.prototype.plus=l.prototype.add,u.prototype.subtract=function(e){var t=Y(e);if(this.sign!==t.sign)return this.add(t.negate());var n=this.value,r=t.value;return t.isSmall?b(n,Math.abs(r),this.sign):function(e,t,n){var r;return I(e,t)>=0?r=y(e,t):(r=y(t,e),n=!n),"number"==typeof(r=f(r))?(n&&(r=-r),new l(r)):new u(r,n)}(n,r,this.sign)},u.prototype.minus=u.prototype.subtract,l.prototype.subtract=function(e){var t=Y(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());var r=t.value;return t.isSmall?new l(n-r):b(r,Math.abs(n),n>=0)},l.prototype.minus=l.prototype.subtract,u.prototype.negate=function(){return new u(this.value,!this.sign)},l.prototype.negate=function(){var e=this.sign,t=new l(-this.value);return t.sign=!e,t},u.prototype.abs=function(){return new u(this.value,!1)},l.prototype.abs=function(){return new l(Math.abs(this.value))},u.prototype.multiply=function(e){var n,r,i,s=Y(e),o=this.value,l=s.value,c=this.sign!==s.sign;if(s.isSmall){if(0===l)return a[0];if(1===l)return this;if(-1===l)return this.negate();if((n=Math.abs(l))<t)return new u(M(o,n),c);l=p(n)}return new u(-.012*(r=o.length)-.012*(i=l.length)+15e-6*r*i>0?E(o,l):S(o,l),c)},u.prototype.times=u.prototype.multiply,l.prototype._multiplyBySmall=function(e){return c(e.value*this.value)?new l(e.value*this.value):x(Math.abs(e.value),p(Math.abs(this.value)),this.sign!==e.sign)},u.prototype._multiplyBySmall=function(e){return 0===e.value?a[0]:1===e.value?this:-1===e.value?this.negate():x(Math.abs(e.value),this.value,this.sign!==e.sign)},l.prototype.multiply=function(e){return Y(e)._multiplyBySmall(this)},l.prototype.times=l.prototype.multiply,u.prototype.square=function(){return new u(q(this.value),!1)},l.prototype.square=function(){var e=this.value*this.value;return c(e)?new l(e):new u(q(p(Math.abs(this.value))),!1)},u.prototype.divmod=function(e){var t=C(this,e);return{quotient:t[0],remainder:t[1]}},l.prototype.divmod=u.prototype.divmod,u.prototype.divide=function(e){return C(this,e)[0]},l.prototype.over=l.prototype.divide=u.prototype.over=u.prototype.divide,u.prototype.mod=function(e){return C(this,e)[1]},l.prototype.remainder=l.prototype.mod=u.prototype.remainder=u.prototype.mod,u.prototype.pow=function(e){var t,n,r,i=Y(e),s=this.value,o=i.value;if(0===o)return a[1];if(0===s)return a[0];if(1===s)return a[1];if(-1===s)return i.isEven()?a[1]:a[-1];if(i.sign)return a[0];if(!i.isSmall)throw new Error("The exponent "+i.toString()+" is too large.");if(this.isSmall&&c(t=Math.pow(s,o)))return new l(g(t));for(n=this,r=a[1];!0&o&&(r=r.times(n),--o),0!==o;)o/=2,n=n.square();return r},l.prototype.pow=u.prototype.pow,u.prototype.modPow=function(e,t){if(e=Y(e),(t=Y(t)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var n=a[1],r=this.mod(t);e.isPositive();){if(r.isZero())return a[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},l.prototype.modPow=u.prototype.modPow,u.prototype.compareAbs=function(e){var t=Y(e),n=this.value,r=t.value;return t.isSmall?1:I(n,r)},l.prototype.compareAbs=function(e){var t=Y(e),n=Math.abs(this.value),r=t.value;return t.isSmall?n===(r=Math.abs(r))?0:n>r?1:-1:-1},u.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=Y(e),n=this.value,r=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:I(n,r)*(this.sign?-1:1)},u.prototype.compareTo=u.prototype.compare,l.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=Y(e),n=this.value,r=t.value;return t.isSmall?n==r?0:n>r?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},l.prototype.compareTo=l.prototype.compare,u.prototype.equals=function(e){return 0===this.compare(e)},l.prototype.eq=l.prototype.equals=u.prototype.eq=u.prototype.equals,u.prototype.notEquals=function(e){return 0!==this.compare(e)},l.prototype.neq=l.prototype.notEquals=u.prototype.neq=u.prototype.notEquals,u.prototype.greater=function(e){return this.compare(e)>0},l.prototype.gt=l.prototype.greater=u.prototype.gt=u.prototype.greater,u.prototype.lesser=function(e){return this.compare(e)<0},l.prototype.lt=l.prototype.lesser=u.prototype.lt=u.prototype.lesser,u.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},l.prototype.geq=l.prototype.greaterOrEquals=u.prototype.geq=u.prototype.greaterOrEquals,u.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},l.prototype.leq=l.prototype.lesserOrEquals=u.prototype.leq=u.prototype.lesserOrEquals,u.prototype.isEven=function(){return 0==(1&this.value[0])},l.prototype.isEven=function(){return 0==(1&this.value)},u.prototype.isOdd=function(){return 1==(1&this.value[0])},l.prototype.isOdd=function(){return 1==(1&this.value)},u.prototype.isPositive=function(){return!this.sign},l.prototype.isPositive=function(){return this.value>0},u.prototype.isNegative=function(){return this.sign},l.prototype.isNegative=function(){return this.value<0},u.prototype.isUnit=function(){return!1},l.prototype.isUnit=function(){return 1===Math.abs(this.value)},u.prototype.isZero=function(){return!1},l.prototype.isZero=function(){return 0===this.value},u.prototype.isDivisibleBy=function(e){var t=Y(e),n=t.value;return 0!==n&&(1===n||(2===n?this.isEven():this.mod(t).equals(a[0])))},l.prototype.isDivisibleBy=u.prototype.isDivisibleBy,u.prototype.isPrime=function(t){var n=U(this);if(n!==e)return n;var r=this.abs(),s=r.bitLength();if(s<=64)return L(r,[2,325,9375,28178,450775,9780504,1795265022]);for(var o=Math.log(2)*s,a=Math.ceil(!0===t?2*Math.pow(o,2):o),u=[],l=0;l<a;l++)u.push(i(l+2));return L(r,u)},l.prototype.isPrime=u.prototype.isPrime,u.prototype.isProbablePrime=function(t){var n=U(this);if(n!==e)return n;for(var r=this.abs(),s=t===e?5:t,o=[],a=0;a<s;a++)o.push(i.randBetween(2,r.minus(2)));return L(r,o)},l.prototype.isProbablePrime=u.prototype.isProbablePrime,u.prototype.modInv=function(e){for(var t,n,r,s=i.zero,o=i.one,a=Y(e),u=this.abs();!u.equals(i.zero);)t=a.divide(u),n=s,r=a,s=o,a=u,o=n.subtract(t.multiply(o)),u=r.subtract(t.multiply(u));if(!a.equals(1))throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===s.compare(0)&&(s=s.add(e)),this.isNegative()?s.negate():s},l.prototype.modInv=u.prototype.modInv,u.prototype.next=function(){var e=this.value;return this.sign?b(e,1,this.sign):new u(w(e,1),this.sign)},l.prototype.next=function(){var e=this.value;return e+1<r?new l(e+1):new u(s,!1)},u.prototype.prev=function(){var e=this.value;return this.sign?new u(w(e,1),!0):b(e,1,this.sign)},l.prototype.prev=function(){var e=this.value;return e-1>-r?new l(e-1):new u(s,!0)};for(var _=[1];2*_[_.length-1]<=t;)_.push(2*_[_.length-1]);var O=_.length,R=_[O-1];function T(e){return("number"==typeof e||"string"==typeof e)&&+Math.abs(e)<=t||e instanceof u&&e.value.length<=1}function P(e,t,n){t=Y(t);for(var r=e.isNegative(),s=t.isNegative(),o=r?e.not():e,a=s?t.not():t,u=0,l=0,c=null,p=null,f=[];!o.isZero()||!a.isZero();)u=(c=C(o,R))[1].toJSNumber(),r&&(u=R-1-u),l=(p=C(a,R))[1].toJSNumber(),s&&(l=R-1-l),o=c[0],a=p[0],f.push(n(u,l));for(var h=0!==n(r?1:0,s?1:0)?i(-1):i(0),m=f.length-1;m>=0;m-=1)h=h.multiply(R).add(i(f[m]));return h}u.prototype.shiftLeft=function(e){if(!T(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;e>=O;)t=t.multiply(R),e-=O-1;return t.multiply(_[e])},l.prototype.shiftLeft=u.prototype.shiftLeft,u.prototype.shiftRight=function(e){var t;if(!T(e))throw new Error(String(e)+" is too large for shifting.");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;e>=O;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=C(n,R))[1].isNegative()?t[0].prev():t[0],e-=O-1}return(t=C(n,_[e]))[1].isNegative()?t[0].prev():t[0]},l.prototype.shiftRight=u.prototype.shiftRight,u.prototype.not=function(){return this.negate().prev()},l.prototype.not=u.prototype.not,u.prototype.and=function(e){return P(this,e,(function(e,t){return e&t}))},l.prototype.and=u.prototype.and,u.prototype.or=function(e){return P(this,e,(function(e,t){return e|t}))},l.prototype.or=u.prototype.or,u.prototype.xor=function(e){return P(this,e,(function(e,t){return e^t}))},l.prototype.xor=u.prototype.xor;var k=1<<30,D=(t&-t)*(t&-t)|k;function F(e){var n=e.value,r="number"==typeof n?n|k:n[0]+n[1]*t|D;return r&-r}function B(e,t){if(t.compareTo(e)<=0){var n=B(e,t.square(t)),r=n.p,s=n.e,o=r.multiply(t);return o.compareTo(e)<=0?{p:o,e:2*s+1}:{p:r,e:2*s}}return{p:i(1),e:0}}function G(e,t){return e=Y(e),t=Y(t),e.greater(t)?e:t}function V(e,t){return e=Y(e),t=Y(t),e.lesser(t)?e:t}function j(e,t){if(e=Y(e).abs(),t=Y(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=a[1];e.isEven()&&t.isEven();)n=Math.min(F(e),F(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(F(e));do{for(;t.isEven();)t=t.divide(F(t));e.greater(t)&&(r=t,t=e,e=r),t=t.subtract(e)}while(!t.isZero());return i.isUnit()?e:e.multiply(i)}u.prototype.bitLength=function(){var e=this;return e.compareTo(i(0))<0&&(e=e.negate().subtract(i(1))),0===e.compareTo(i(0))?i(0):i(B(e,i(2)).e).add(i(1))},l.prototype.bitLength=u.prototype.bitLength;var H=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++)if("-"!==(c=e[i].toLowerCase())&&/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=r){if("1"===c&&1===r)continue;throw new Error(c+" is not a valid digit in base "+t+".")}if(c.charCodeAt(0)-87>=r)throw new Error(c+" is not a valid digit in base "+t+".")}if(2<=t&&t<=36&&n<=o/Math.log(t)){var s=parseInt(e,t);if(isNaN(s))throw new Error(c+" is not a valid digit in base "+t+".");return new l(parseInt(e,t))}t=Y(t);var a=[],u="-"===e[0];for(i=u?1:0;i<e.length;i++){var c,p=(c=e[i].toLowerCase()).charCodeAt(0);if(48<=p&&p<=57)a.push(Y(c));else if(97<=p&&p<=122)a.push(Y(c.charCodeAt(0)-87));else{if("<"!==c)throw new Error(c+" is not a valid character");var f=i;do{i++}while(">"!==e[i]);a.push(Y(e.slice(f+1,i)))}}return X(a,t,u)};function X(e,t,n){var r,i=a[0],s=a[1];for(r=e.length-1;r>=0;r--)i=i.add(e[r].times(s)),s=s.times(t);return n?i.negate():i}function Z(e){return e<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e):"<"+e+">"}function z(e,t){if((t=i(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}var r=!1;if(e.isNegative()&&t.isPositive()&&(r=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:r};for(var s,o=[],a=e;a.isNegative()||a.compareAbs(t)>=0;){s=a.divmod(t),a=s.quotient;var u=s.remainder;u.isNegative()&&(u=t.minus(u).abs(),a=a.next()),o.push(u.toJSNumber())}return o.push(a.toJSNumber()),{value:o.reverse(),isNegative:r}}function $(e,t){var n=z(e,t);return(n.isNegative?"-":"")+n.value.map(Z).join("")}function Q(e){if(c(+e)){var t=+e;if(t===g(t))return new l(t);throw new Error("Invalid integer: "+e)}var r="-"===e[0];r&&(e=e.slice(1));var i=e.split(/e/i);if(i.length>2)throw new Error("Invalid integer: "+i.join("e"));if(2===i.length){var s=i[1];if("+"===s[0]&&(s=s.slice(1)),(s=+s)!==g(s)||!c(s))throw new Error("Invalid integer: "+s+" is not a valid exponent.");var o=i[0],a=o.indexOf(".");if(a>=0&&(s-=o.length-a-1,o=o.slice(0,a)+o.slice(a+1)),s<0)throw new Error("Cannot include negative exponent part for integers");e=o+=new Array(s+1).join("0")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);for(var p=[],f=e.length,m=n,v=f-m;f>0;)p.push(+e.slice(v,f)),(v-=m)<0&&(v=0),f-=m;return h(p),new u(p,r)}function Y(e){return"number"==typeof e?function(e){if(c(e)){if(e!==g(e))throw new Error(e+" is not an integer.");return new l(e)}return Q(e.toString())}(e):"string"==typeof e?Q(e):e}u.prototype.toArray=function(e){return z(this,e)},l.prototype.toArray=function(e){return z(this,e)},u.prototype.toString=function(t){if(t===e&&(t=10),10!==t)return $(this,t);for(var n,r=this.value,i=r.length,s=String(r[--i]);--i>=0;)n=String(r[i]),s+="0000000".slice(n.length)+n;return(this.sign?"-":"")+s},l.prototype.toString=function(t){return t===e&&(t=10),10!=t?$(this,t):String(this.value)},u.prototype.toJSON=l.prototype.toJSON=function(){return this.toString()},u.prototype.valueOf=function(){return parseInt(this.toString(),10)},u.prototype.toJSNumber=u.prototype.valueOf,l.prototype.valueOf=function(){return this.value},l.prototype.toJSNumber=l.prototype.valueOf;for(var W=0;W<1e3;W++)a[W]=new l(W),W>0&&(a[-W]=new l(-W));return a.one=a[1],a.zero=a[0],a.minusOne=a[-1],a.max=G,a.min=V,a.gcd=j,a.lcm=function(e,t){return e=Y(e).abs(),t=Y(t).abs(),e.divide(j(e,t)).multiply(t)},a.isInstance=function(e){return e instanceof u||e instanceof l},a.randBetween=function(e,n){var r=V(e=Y(e),n=Y(n)),i=G(e,n).subtract(r).add(1);if(i.isSmall)return r.add(Math.floor(Math.random()*i));for(var s=[],o=!0,a=i.value.length-1;a>=0;a--){var c=o?i.value[a]:t,p=g(Math.random()*c);s.unshift(p),p<c&&(o=!1)}return s=f(s),r.add("number"==typeof s?new l(s):new u(s,!1))},a.fromArray=function(e,t,n){return X(e.map(Y),Y(t||10),n)},a}(),e.hasOwnProperty("exports")&&(e.exports=i),void 0===(r=function(){return i}.apply(t,[]))||(e.exports=r),i),bigDec:function(i){"use strict";var s,o,a,u=9e15,l=1e9,c="0123456789abcdef",p="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",f="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",h={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},m=!0,g="[DecimalError] ",v=g+"Invalid argument: ",d=g+"Precision limit exceeded",w=g+"crypto unavailable",y=Math.floor,b=Math.pow,S=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,M=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,N=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,E=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,x=1e7,q=7,A=p.length-1,C=f.length-1,I={name:"[object Decimal]"};function U(e){var t,n,r,i=e.length-1,s="",o=e[0];if(i>0){for(s+=o,t=1;t<i;t++)r=e[t]+"",(n=q-r.length)&&(s+=G(n)),s+=r;o=e[t],(n=q-(r=o+"").length)&&(s+=G(n))}else if(0===o)return"0";for(;o%10==0;)o/=10;return s+o}function L(e,t,n){if(e!==~~e||e<t||e>n)throw Error(v+e)}function _(e,t,n,r){var i,s,o,a;for(s=e[0];s>=10;s/=10)--t;return--t<0?(t+=q,i=0):(i=Math.ceil((t+1)/q),t%=q),s=b(10,q-t),a=e[i]%s|0,null==r?t<3?(0==t?a=a/100|0:1==t&&(a=a/10|0),o=n<4&&99999==a||n>3&&49999==a||5e4==a||0==a):o=(n<4&&a+1==s||n>3&&a+1==s/2)&&(e[i+1]/s/100|0)==b(10,t-2)-1||(a==s/2||0==a)&&0==(e[i+1]/s/100|0):t<4?(0==t?a=a/1e3|0:1==t?a=a/100|0:2==t&&(a=a/10|0),o=(r||n<4)&&9999==a||!r&&n>3&&4999==a):o=((r||n<4)&&a+1==s||!r&&n>3&&a+1==s/2)&&(e[i+1]/s/1e3|0)==b(10,t-3)-1,o}function O(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=c.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}I.absoluteValue=I.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),T(e)},I.ceil=function(){return T(new this.constructor(this),this.e+1,2)},I.comparedTo=I.cmp=function(e){var t,n,r,i,s=this,o=s.d,a=(e=new s.constructor(e)).d,u=s.s,l=e.s;if(!o||!a)return u&&l?u!==l?u:o===a?0:!o^u<0?1:-1:NaN;if(!o[0]||!a[0])return o[0]?u:a[0]?-l:0;if(u!==l)return u;if(s.e!==e.e)return s.e>e.e^u<0?1:-1;for(t=0,n=(r=o.length)<(i=a.length)?r:i;t<n;++t)if(o[t]!==a[t])return o[t]>a[t]^u<0?1:-1;return r===i?0:r>i^u<0?1:-1},I.cosine=I.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r,i=t.d.length;i<32?r=(1/W(4,n=Math.ceil(i/3))).toString():(n=16,r="2.3283064365386962890625e-10"),e.precision+=n,t=Y(e,1,t.times(r),new e(1));for(var s=n;s--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=n,t}(r,J(r,n)),r.precision=e,r.rounding=t,T(2==a||3==a?n.neg():n,e,t,!0)):new r(1):new r(NaN)},I.cubeRoot=I.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(m=!1,(s=c.s*b(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new p(s.toString()):(n=U(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?"0":"00"),s=b(n,1/3),e=y((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=s==1/0?"5e"+e:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=R(l.plus(c).times(a),l.plus(u),o+2,1),U(a.d).slice(0,o)===(n=U(r.d)).slice(0,o)){if("9999"!=(n=n.slice(o-3,o+1))&&(i||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(T(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(T(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return m=!0,T(r,e,p.rounding,t)},I.decimalPlaces=I.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-y(this.e/q))*q,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},I.dividedBy=I.div=function(e){return R(this,new this.constructor(e))},I.dividedToIntegerBy=I.divToInt=function(e){var t=this.constructor;return T(R(this,new t(e),0,1,1),t.precision,t.rounding)},I.equals=I.eq=function(e){return 0===this.cmp(e)},I.floor=function(){return T(new this.constructor(this),this.e+1,3)},I.greaterThan=I.gt=function(e){return this.cmp(e)>0},I.greaterThanOrEqualTo=I.gte=function(e){var t=this.cmp(e);return 1==t||0===t},I.hyperbolicCosine=I.cosh=function(){var e,t,n,r,i,s=this,o=s.constructor,a=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return a;n=o.precision,r=o.rounding,o.precision=n+Math.max(s.e,s.sd())+4,o.rounding=1,(i=s.d.length)<32?t=(1/W(4,e=Math.ceil(i/3))).toString():(e=16,t="2.3283064365386962890625e-10"),s=Y(o,1,s.times(t),new o(1),!0);for(var u,l=e,c=new o(8);l--;)u=s.times(s),s=a.minus(u.times(c.minus(u.times(c))));return T(s,o.precision=n,o.rounding=r,!0)},I.hyperbolicSine=I.sinh=function(){var e,t,n,r,i=this,s=i.constructor;if(!i.isFinite()||i.isZero())return new s(i);if(t=s.precision,n=s.rounding,s.precision=t+Math.max(i.e,i.sd())+4,s.rounding=1,(r=i.d.length)<3)i=Y(s,2,i,i,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,i=Y(s,2,i=i.times(1/W(5,e)),i,!0);for(var o,a=new s(5),u=new s(16),l=new s(20);e--;)o=i.times(i),i=i.times(a.plus(o.times(u.times(o).plus(l))))}return s.precision=t,s.rounding=n,T(i,t,n,!0)},I.hyperbolicTangent=I.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,R(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},I.inverseCosine=I.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),i=n.precision,s=n.rounding;return-1!==r?0===r?t.isNeg()?F(n,i,s):new n(0):new n(NaN):t.isZero()?F(n,i+4,s).times(.5):(n.precision=i+6,n.rounding=1,t=t.asin(),e=F(n,i+4,s).times(.5),n.precision=i,n.rounding=s,e.minus(t))},I.inverseHyperbolicCosine=I.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,m=!1,n=n.times(n).minus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},I.inverseHyperbolicSine=I.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,m=!1,n=n.times(n).plus(1).sqrt().plus(n),m=!0,r.precision=e,r.rounding=t,n.ln())},I.inverseHyperbolicTangent=I.atanh=function(){var e,t,n,r,i=this,s=i.constructor;return i.isFinite()?i.e>=0?new s(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=s.precision,t=s.rounding,r=i.sd(),Math.max(r,e)<2*-i.e-1?T(new s(i),e,t,!0):(s.precision=n=r-i.e,i=R(i.plus(1),new s(1).minus(i),n+e,1),s.precision=e+4,s.rounding=1,i=i.ln(),s.precision=e,s.rounding=t,i.times(.5))):new s(NaN)},I.inverseSine=I.asin=function(){var e,t,n,r,i=this,s=i.constructor;return i.isZero()?new s(i):(t=i.abs().cmp(1),n=s.precision,r=s.rounding,-1!==t?0===t?((e=F(s,n+4,r).times(.5)).s=i.s,e):new s(NaN):(s.precision=n+6,s.rounding=1,i=i.div(new s(1).minus(i.times(i)).sqrt().plus(1)).atan(),s.precision=n,s.rounding=r,i.times(2)))},I.inverseTangent=I.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,f=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=C)return(o=F(c,p+4,f).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=C)return(o=F(c,p+4,f).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=n=Math.min(28,a/q+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(m=!1,t=Math.ceil(a/q),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),m=!0,T(o,c.precision=p,c.rounding=f,!0)},I.isFinite=function(){return!!this.d},I.isInteger=I.isInt=function(){return!!this.d&&y(this.e/q)>this.d.length-2},I.isNaN=function(){return!this.s},I.isNegative=I.isNeg=function(){return this.s<0},I.isPositive=I.isPos=function(){return this.s>0},I.isZero=function(){return!!this.d&&0===this.d[0]},I.lessThan=I.lt=function(e){return this.cmp(e)<0},I.lessThanOrEqualTo=I.lte=function(e){return this.cmp(e)<1},I.logarithm=I.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(n.length>1)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(m=!1,o=Z(this,a=c+5),r=t?D(l,a+10):Z(e,a),_((u=R(o,r,a,1)).d,i=c,p))do{if(o=Z(this,a+=10),r=t?D(l,a+10):Z(e,a),u=R(o,r,a,1),!s){+U(u.d).slice(i+1,i+15)+1==1e14&&(u=T(u,c+1,0));break}}while(_(u.d,i+=10,p));return m=!0,T(u,c,p)},I.minus=I.sub=function(e){var t,n,r,i,s,o,a,u,l,c,p,f,h=this,g=h.constructor;if(e=new g(e),!h.d||!e.d)return h.s&&e.s?h.d?e.s=-e.s:e=new g(e.d||h.s!==e.s?h:NaN):e=new g(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.plus(e);if(l=h.d,f=e.d,a=g.precision,u=g.rounding,!l[0]||!f[0]){if(f[0])e.s=-e.s;else{if(!l[0])return new g(3===u?-0:0);e=new g(h)}return m?T(e,a,u):e}if(n=y(e.e/q),c=y(h.e/q),l=l.slice(),s=c-n){for((p=s<0)?(t=l,s=-s,o=f.length):(t=f,n=c,o=l.length),s>(r=Math.max(Math.ceil(a/q),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((p=(r=l.length)<(o=f.length))&&(o=r),r=0;r<o;r++)if(l[r]!=f[r]){p=l[r]<f[r];break}s=0}for(p&&(t=l,l=f,f=t,e.s=-e.s),o=l.length,r=f.length-o;r>0;--r)l[o++]=0;for(r=f.length;r>s;){if(l[--r]<f[r]){for(i=r;i&&0===l[--i];)l[i]=x-1;--l[i],l[r]+=x}l[r]-=f[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=k(l,n),m?T(e,a,u):e):new g(3===u?-0:0)},I.modulo=I.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?T(new r(n),r.precision,r.rounding):(m=!1,9==r.modulo?(t=R(n,e.abs(),0,3,1)).s*=e.s:t=R(n,e,0,r.modulo,1),t=t.times(e),m=!0,n.minus(t))},I.naturalExponential=I.exp=function(){return X(this)},I.naturalLogarithm=I.ln=function(){return Z(this)},I.negated=I.neg=function(){var e=new this.constructor(this);return e.s=-e.s,T(e)},I.plus=I.add=function(e){var t,n,r,i,s,o,a,u,l,c,p=this,f=p.constructor;if(e=new f(e),!p.d||!e.d)return p.s&&e.s?p.d||(e=new f(e.d||p.s===e.s?p:NaN)):e=new f(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(l=p.d,c=e.d,a=f.precision,u=f.rounding,!l[0]||!c[0])return c[0]||(e=new f(p)),m?T(e,a,u):e;if(s=y(p.e/q),r=y(e.e/q),l=l.slice(),i=s-r){for(i<0?(n=l,i=-i,o=c.length):(n=c,r=s,o=l.length),i>(o=(s=Math.ceil(a/q))>o?s+1:o+1)&&(i=o,n.length=1),n.reverse();i--;)n.push(0);n.reverse()}for((o=l.length)-(i=c.length)<0&&(i=o,n=c,c=l,l=n),t=0;i;)t=(l[--i]=l[i]+c[i]+t)/x|0,l[i]%=x;for(t&&(l.unshift(t),++r),o=l.length;0==l[--o];)l.pop();return e.d=l,e.e=k(l,r),m?T(e,a,u):e},I.precision=I.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(v+e);return n.d?(t=B(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},I.round=function(){var e=this,t=e.constructor;return T(new t(e),e.e+1,t.rounding)},I.sine=I.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+q,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return Y(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=Y(e,2,t=t.times(1/W(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,J(r,n)),r.precision=e,r.rounding=t,T(a>2?n.neg():n,e,t,!0)):new r(NaN)},I.squareRoot=I.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(m=!1,0==(l=Math.sqrt(+o))||l==1/0?(((t=U(a)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=y((u+1)/2)-(u<0||u%2),r=new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):r=new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(R(o,s,n+2,1)).times(.5),U(s.d).slice(0,n)===(t=U(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(T(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(T(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return m=!0,T(r,u,c.rounding,e)},I.tangent=I.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=R(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,T(2==a||4==a?n.neg():n,e,t,!0)):new r(NaN)},I.times=I.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this,p=c.constructor,f=c.d,h=(e=new p(e)).d;if(e.s*=c.s,!(f&&f[0]&&h&&h[0]))return new p(!e.s||f&&!f[0]&&!h||h&&!h[0]&&!f?NaN:f&&h?0*e.s:e.s/0);for(n=y(c.e/q)+y(e.e/q),(u=f.length)<(l=h.length)&&(s=f,f=h,h=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;--r>=0;){for(t=0,i=u+r;i>r;)a=s[i]+h[r]*f[i-r-1]+t,s[i--]=a%x|0,t=a/x|0;s[i]=(s[i]+t)%x|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=k(s,n),m?T(e,p.precision,p.rounding):e},I.toBinary=function(e,t){return K(this,2,e,t)},I.toDecimalPlaces=I.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(L(e,0,l),void 0===t?t=r.rounding:L(t,0,8),T(n,e+n.e+1,t))},I.toExponential=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=P(r,!0):(L(e,0,l),void 0===t?t=i.rounding:L(t,0,8),n=P(r=T(new i(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},I.toFixed=function(e,t){var n,r,i=this,s=i.constructor;return void 0===e?n=P(i):(L(e,0,l),void 0===t?t=s.rounding:L(t,0,8),n=P(r=T(new s(i),e+i.e+1,t),!1,e+r.e+1)),i.isNeg()&&!i.isZero()?"-"+n:n},I.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,p,f,h=this,g=h.d,d=h.constructor;if(!g)return new d(h);if(l=n=new d(1),r=u=new d(0),o=(s=(t=new d(r)).e=B(g)-h.e-1)%q,t.d[0]=b(10,o<0?q+o:o),null==e)e=s>0?t:l;else{if(!(a=new d(e)).isInt()||a.lt(l))throw Error(v+a);e=a.gt(t)?s>0?t:l:a}for(m=!1,a=new d(U(g)),c=d.precision,d.precision=s=g.length*q*2;p=R(a,t,0,1,1),1!=(i=n.plus(p.times(r))).cmp(e);)n=r,r=i,i=l,l=u.plus(p.times(i)),u=i,i=t,t=a.minus(p.times(i)),a=i;return i=R(e.minus(n),r,0,1,1),u=u.plus(i.times(l)),n=n.plus(i.times(r)),u.s=l.s=h.s,f=R(l,r,s,1).minus(h).abs().cmp(R(u,n,s,1).minus(h).abs())<1?[l,r]:[u,n],d.precision=c,m=!0,f},I.toHexadecimal=I.toHex=function(e,t){return K(this,16,e,t)},I.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:L(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(m=!1,n=R(n,e,0,t,1).times(e),m=!0,T(n)):(e.s=n.s,n=e),n},I.toNumber=function(){return+this},I.toOctal=function(e,t){return K(this,8,e,t)},I.toPower=I.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(b(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return T(a,r,s);if((t=y(e.e/q))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=V(u,a,n,r),e.s<0?new u(1).div(i):T(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=b(+a,l))&&isFinite(n)?new u(n+"").e:y(l*(Math.log("0."+U(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?o/0:0):(m=!1,u.rounding=a.s=1,n=Math.min(12,(t+"").length),(i=X(e.times(Z(a,r+n)),r)).d&&_((i=T(i,r+5,1)).d,r,s)&&(t=r+10,+U((i=T(X(e.times(Z(a,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=T(i,r+1,0))),i.s=o,m=!0,u.rounding=s,T(i,r,s))},I.toPrecision=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=P(r,r.e<=i.toExpNeg||r.e>=i.toExpPos):(L(e,1,l),void 0===t?t=i.rounding:L(t,0,8),n=P(r=T(new i(r),e,t),e<=r.e||r.e<=i.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},I.toSignificantDigits=I.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(L(e,1,l),void 0===t?t=n.rounding:L(t,0,8)),T(new n(this),e,t)},I.toString=function(){var e=this,t=e.constructor,n=P(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},I.truncated=I.trunc=function(){return T(new this.constructor(this),this.e+1,1)},I.valueOf=I.toJSON=function(){var e=this,t=e.constructor,n=P(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var R=function(){function e(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function t(e,t,n,r){var i,s;if(n!=r)s=n>r?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function n(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(r,i,s,a,u,l){var c,p,f,h,m,g,v,d,w,b,S,M,N,E,A,C,I,U,L,_,O=r.constructor,R=r.s==i.s?1:-1,P=r.d,k=i.d;if(!(P&&P[0]&&k&&k[0]))return new O(r.s&&i.s&&(P?!k||P[0]!=k[0]:k)?P&&0==P[0]||!k?0*R:R/0:NaN);for(l?(m=1,p=r.e-i.e):(l=x,m=q,p=y(r.e/m)-y(i.e/m)),L=k.length,I=P.length,b=(w=new O(R)).d=[],f=0;k[f]==(P[f]||0);f++);if(k[f]>(P[f]||0)&&p--,null==s?(E=s=O.precision,a=O.rounding):E=u?s+(r.e-i.e)+1:s,E<0)b.push(1),g=!0;else{if(E=E/m+2|0,f=0,1==L){for(h=0,k=k[0],E++;(f<I||h)&&E--;f++)A=h*l+(P[f]||0),b[f]=A/k|0,h=A%k|0;g=h||f<I}else{for((h=l/(k[0]+1)|0)>1&&(k=e(k,h,l),P=e(P,h,l),L=k.length,I=P.length),C=L,M=(S=P.slice(0,L)).length;M<L;)S[M++]=0;(_=k.slice()).unshift(0),U=k[0],k[1]>=l/2&&++U;do{h=0,(c=t(k,S,L,M))<0?(N=S[0],L!=M&&(N=N*l+(S[1]||0)),(h=N/U|0)>1?(h>=l&&(h=l-1),1==(c=t(v=e(k,h,l),S,d=v.length,M=S.length))&&(h--,n(v,L<d?_:k,d,l))):(0==h&&(c=h=1),v=k.slice()),(d=v.length)<M&&v.unshift(0),n(S,v,M,l),-1==c&&(c=t(k,S,L,M=S.length))<1&&(h++,n(S,L<M?_:k,M,l)),M=S.length):0===c&&(h++,S=[0]),b[f++]=h,c&&S[0]?S[M++]=P[C]||0:(S=[P[C]],M=1)}while((C++<I||void 0!==S[0])&&E--);g=void 0!==S[0]}b[0]||b.shift()}if(1==m)w.e=p,o=g;else{for(f=1,h=b[0];h>=10;h/=10)f++;w.e=f+p*m-1,T(w,u?s+w.e+1:s,a,g)}return w}}();function T(e,t,n,r){var i,s,o,a,u,l,c,p,f,h=e.constructor;e:if(null!=t){if(!(p=e.d))return e;for(i=1,a=p[0];a>=10;a/=10)i++;if((s=t-i)<0)s+=q,o=t,u=(c=p[f=0])/b(10,i-o-1)%10|0;else if((f=Math.ceil((s+1)/q))>=(a=p.length)){if(!r)break e;for(;a++<=f;)p.push(0);c=u=0,i=1,o=(s%=q)-q+1}else{for(c=a=p[f],i=1;a>=10;a/=10)i++;u=(o=(s%=q)-q+i)<0?0:c/b(10,i-o-1)%10|0}if(r=r||t<0||void 0!==p[f+1]||(o<0?c:c%b(10,i-o-1)),l=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):u>5||5==u&&(4==n||r||6==n&&(s>0?o>0?c/b(10,i-o):0:p[f-1])%10&1||n==(e.s<0?8:7)),t<1||!p[0])return p.length=0,l?(t-=e.e+1,p[0]=b(10,(q-t%q)%q),e.e=-t||0):p[0]=e.e=0,e;if(0==s?(p.length=f,a=1,f--):(p.length=f+1,a=b(10,q-s),p[f]=o>0?(c/b(10,i-o)%b(10,o)|0)*a:0),l)for(;;){if(0==f){for(s=1,o=p[0];o>=10;o/=10)s++;for(o=p[0]+=a,a=1;o>=10;o/=10)a++;s!=a&&(e.e++,p[0]==x&&(p[0]=1));break}if(p[f]+=a,p[f]!=x)break;p[f--]=0,a=1}for(s=p.length;0===p[--s];)p.pop()}return m&&(e.e>h.maxE?(e.d=null,e.e=NaN):e.e<h.minE&&(e.e=0,e.d=[0])),e}function P(e,t,n){if(!e.isFinite())return z(e);var r,i=e.e,s=U(e.d),o=s.length;return t?(n&&(r=n-o)>0?s=s.charAt(0)+"."+s.slice(1)+G(r):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+G(-i-1)+s,n&&(r=n-o)>0&&(s+=G(r))):i>=o?(s+=G(i+1-o),n&&(r=n-i-1)>0&&(s=s+"."+G(r))):((r=i+1)<o&&(s=s.slice(0,r)+"."+s.slice(r)),n&&(r=n-o)>0&&(i+1===o&&(s+="."),s+=G(r))),s}function k(e,t){var n=e[0];for(t*=q;n>=10;n/=10)t++;return t}function D(e,t,n){if(t>A)throw m=!0,n&&(e.precision=n),Error(d);return T(new e(p),t,1,!0)}function F(e,t,n){if(t>C)throw Error(d);return T(new e(f),t,n,!0)}function B(e){var t=e.length-1,n=t*q+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function G(e){for(var t="";e--;)t+="0";return t}function V(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/q+4);for(m=!1;;){if(n%2&&ee((s=s.times(t)).d,o)&&(i=!0),0===(n=y(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}ee((t=t.times(t)).d,o)}return m=!0,s}function j(e){return 1&e.d[e.d.length-1]}function H(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function X(e,t){var n,r,i,s,o,a,u,l=0,c=0,p=0,f=e.constructor,h=f.rounding,g=f.precision;if(!e.d||!e.d[0]||e.e>17)return new f(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(m=!1,u=g):u=t,a=new f(.03125);e.e>-2;)e=e.times(a),p+=5;for(u+=r=Math.log(b(2,p))/Math.LN10*2+5|0,n=s=o=new f(1),f.precision=u;;){if(s=T(s.times(e),u,1),n=n.times(++c),U((a=o.plus(R(s,n,u,1))).d).slice(0,u)===U(o.d).slice(0,u)){for(i=p;i--;)o=T(o.times(o),u,1);if(null!=t)return f.precision=g,o;if(!(l<3&&_(o.d,u-r,h,l)))return T(o,f.precision=g,h,m=!0);f.precision=u+=10,n=s=a=new f(1),c=0,l++}o=a}}function Z(e,t){var n,r,i,s,o,a,u,l,c,p,f,h=1,g=e,v=g.d,d=g.constructor,w=d.rounding,y=d.precision;if(g.s<0||!v||!v[0]||!g.e&&1==v[0]&&1==v.length)return new d(v&&!v[0]?-1/0:1!=g.s?NaN:v?0:g);if(null==t?(m=!1,c=y):c=t,d.precision=c+=10,r=(n=U(v)).charAt(0),!(Math.abs(s=g.e)<15e14))return l=D(d,c+2,y).times(s+""),g=Z(new d(r+"."+n.slice(1)),c-10).plus(l),d.precision=y,null==t?T(g,y,w,m=!0):g;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=U((g=g.times(e)).d)).charAt(0),h++;for(s=g.e,r>1?(g=new d("0."+n),s++):g=new d(r+"."+n.slice(1)),p=g,u=o=g=R(g.minus(1),g.plus(1),c,1),f=T(g.times(g),c,1),i=3;;){if(o=T(o.times(f),c,1),U((l=u.plus(R(o,new d(i),c,1))).d).slice(0,c)===U(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(D(d,c+2,y).times(s+""))),u=R(u,new d(h),c,1),null!=t)return d.precision=y,u;if(!_(u.d,c-10,w,a))return T(u,d.precision=y,w,m=!0);d.precision=c+=10,l=o=g=R(p.minus(1),p.plus(1),c,1),f=T(g.times(g),c,1),i=a=1}u=l,i+=2}}function z(e){return String(e.s*e.s/0)}function $(e,t){var n,r,i;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%q,n<0&&(r+=q),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=q;r<i;)e.d.push(+t.slice(r,r+=q));t=t.slice(r),r=q-t.length}else r-=i;for(;r--;)t+="0";e.d.push(+t),m&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Q(e,t){var n,r,i,o,a,u,l,c,p;if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(M.test(t))n=16,t=t.toLowerCase();else if(S.test(t))n=2;else{if(!N.test(t))throw Error(v+t);n=8}for((o=t.search(/p/i))>0?(l=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),a=(o=t.indexOf("."))>=0,r=e.constructor,a&&(o=(u=(t=t.replace(".","")).length)-o,i=V(r,new r(n),o,2*o)),o=p=(c=O(t,n,x)).length-1;0===c[o];--o)c.pop();return o<0?new r(0*e.s):(e.e=k(c,p),e.d=c,m=!1,a&&(e=R(e,i,4*u)),l&&(e=e.times(Math.abs(l)<54?b(2,l):s.pow(2,l))),m=!0,e)}function Y(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/q);for(m=!1,u=n.times(n),a=new e(r);;){if(o=R(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=R(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return m=!0,o.d.length=c+1,o}function W(e,t){for(var n=e;--t;)n*=e;return n}function J(e,t){var n,r=t.s<0,i=F(e,e.precision,1),s=i.times(.5);if((t=t.abs()).lte(s))return a=r?4:1,t;if((n=t.divToInt(i)).isZero())a=r?3:2;else{if((t=t.minus(n.times(i))).lte(s))return a=j(n)?r?2:3:r?4:1,t;a=j(n)?r?1:4:r?3:2}return t.minus(i).abs()}function K(e,t,n,r){var i,s,a,u,p,f,h,m,g,v=e.constructor,d=void 0!==n;if(d?(L(n,1,l),void 0===r?r=v.rounding:L(r,0,8)):(n=v.precision,r=v.rounding),e.isFinite()){for(d?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,(a=(h=P(e)).indexOf("."))>=0&&(h=h.replace(".",""),(g=new v(1)).e=h.length-a,g.d=O(P(g),10,i),g.e=g.d.length),s=p=(m=O(h,10,i)).length;0==m[--p];)m.pop();if(m[0]){if(a<0?s--:((e=new v(e)).d=m,e.e=s,m=(e=R(e,g,n,r,0,i)).d,s=e.e,f=o),a=m[n],u=i/2,f=f||void 0!==m[n+1],f=r<4?(void 0!==a||f)&&(0===r||r===(e.s<0?3:2)):a>u||a===u&&(4===r||f||6===r&&1&m[n-1]||r===(e.s<0?8:7)),m.length=n,f)for(;++m[--n]>i-1;)m[n]=0,n||(++s,m.unshift(1));for(p=m.length;!m[p-1];--p);for(a=0,h="";a<p;a++)h+=c.charAt(m[a]);if(d){if(p>1)if(16==t||8==t){for(a=16==t?4:3,--p;p%a;p++)h+="0";for(p=(m=O(h,i,t)).length;!m[p-1];--p);for(a=1,h="1.";a<p;a++)h+=c.charAt(m[a])}else h=h.charAt(0)+"."+h.slice(1);h=h+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)h="0"+h;h="0."+h}else if(++s>p)for(s-=p;s--;)h+="0";else s<p&&(h=h.slice(0,s)+"."+h.slice(s))}else h=d?"0p+0":"0";h=(16==t?"0x":2==t?"0b":8==t?"0o":"")+h}else h=z(e);return e.s<0?"-"+h:h}function ee(e,t){if(e.length>t)return e.length=t,!0}function te(e){return new this(e).abs()}function ne(e){return new this(e).acos()}function re(e){return new this(e).acosh()}function ie(e,t){return new this(e).plus(t)}function se(e){return new this(e).asin()}function oe(e){return new this(e).asinh()}function ae(e){return new this(e).atan()}function ue(e){return new this(e).atanh()}function le(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?F(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=F(this,s,1).times(.5)).s=e.s:t.s<0?(this.precision=s,this.rounding=1,n=this.atan(R(e,t,s,1)),t=F(this,s,1),this.precision=r,this.rounding=i,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(R(e,t,s,1)):(n=F(this,s,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function ce(e){return new this(e).cbrt()}function pe(e){return T(e=new this(e),e.e+1,2)}function fe(e){if(!e||"object"!=typeof e)throw Error(g+"Object expected");var t,n,r,i=!0===e.defaults,s=["precision",1,l,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9];for(t=0;t<s.length;t+=3)if(n=s[t],i&&(this[n]=h[n]),void 0!==(r=e[n])){if(!(y(r)===r&&r>=s[t+1]&&r<=s[t+2]))throw Error(v+n+": "+r);this[n]=r}if(n="crypto",i&&(this[n]=h[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(v+n+": "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(w);this[n]=!0}else this[n]=!1}return this}function he(e){return new this(e).cos()}function me(e){return new this(e).cosh()}function ge(e,t){return new this(e).div(t)}function ve(e){return new this(e).exp()}function de(e){return T(e=new this(e),e.e+1,3)}function we(){var e,t,n=new this(0);for(m=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return m=!0,new this(1/0);n=t}return m=!0,n.sqrt()}function ye(e){return e instanceof s||e&&"[object Decimal]"===e.name||!1}function be(e){return new this(e).ln()}function Se(e,t){return new this(e).log(t)}function Me(e){return new this(e).log(2)}function Ne(e){return new this(e).log(10)}function Ee(){return H(this,arguments,"lt")}function xe(){return H(this,arguments,"gt")}function qe(e,t){return new this(e).mod(t)}function Ae(e,t){return new this(e).mul(t)}function Ce(e,t){return new this(e).pow(t)}function Ie(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:L(e,1,l),r=Math.ceil(e/q),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)(i=t[s])>=429e7?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(w);for(t=crypto.randomBytes(r*=4);s<r;)(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=q,r&&e&&(i=b(10,q-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)n=0,a=[0];else{for(n=-1;0===a[0];n-=q)a.shift();for(r=1,i=a[0];i>=10;i/=10)r++;r<q&&(n-=q-r)}return o.e=n,o.d=a,o}function Ue(e){return T(e=new this(e),e.e+1,this.rounding)}function Le(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function _e(e){return new this(e).sin()}function Oe(e){return new this(e).sinh()}function Re(e){return new this(e).sqrt()}function Te(e,t){return new this(e).sub(t)}function Pe(e){return new this(e).tan()}function ke(e){return new this(e).tanh()}function De(e){return T(e=new this(e),e.e+1,1)}return(s=function e(t){var n,r,i;function s(e){var t,n,r,i=this;if(!(i instanceof s))return new s(e);if(i.constructor=s,e instanceof s)return i.s=e.s,void(m?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if("number"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(m?t>s.maxE?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):$(i,e.toString())}if("string"!==r)throw Error(v+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),E.test(e)?$(i,e):Q(i,e)}if(s.prototype=I,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=fe,s.clone=e,s.isDecimal=ye,s.abs=te,s.acos=ne,s.acosh=re,s.add=ie,s.asin=se,s.asinh=oe,s.atan=ae,s.atanh=ue,s.atan2=le,s.cbrt=ce,s.ceil=pe,s.cos=he,s.cosh=me,s.div=ge,s.exp=ve,s.floor=de,s.hypot=we,s.ln=be,s.log=Se,s.log10=Ne,s.log2=Me,s.max=Ee,s.min=xe,s.mod=qe,s.mul=Ae,s.pow=Ce,s.random=Ie,s.round=Ue,s.sign=Le,s.sin=_e,s.sinh=Oe,s.sqrt=Re,s.sub=Te,s.tan=Pe,s.tanh=ke,s.trunc=De,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return s.config(t),s}(h)).default=s.Decimal=s,p=new s(p),f=new s(f),void 0!==(r=function(){return s}.call(t,n,t,e))&&(e.exports=r),s}()});e.exports=s}}]);